package com.ble.lib.x2.proto;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bt_time.proto

public final class BtTime {
    private BtTime() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public interface bt_timeOrBuilder extends
            // @@protoc_insertion_point(interface_extends:bt_time)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>optional int64 time_stamp = 1;</code>
         */
        boolean hasTimeStamp();

        /**
         * <code>optional int64 time_stamp = 1;</code>
         */
        long getTimeStamp();

        /**
         * <code>optional int32 time_zone_second = 2;</code>
         */
        boolean hasTimeZoneSecond();

        /**
         * <code>optional int32 time_zone_second = 2;</code>
         */
        int getTimeZoneSecond();

        /**
         * <code>optional bool isDaylightSaveTime = 3;</code>
         */
        boolean hasIsDaylightSaveTime();

        /**
         * <code>optional bool isDaylightSaveTime = 3;</code>
         */
        boolean getIsDaylightSaveTime();
    }

    /**
     * Protobuf type {@code bt_time}
     */
    public static final class bt_time extends
            com.google.protobuf.GeneratedMessageLite implements
            // @@protoc_insertion_point(message_implements:bt_time)
            bt_timeOrBuilder {
        // Use bt_time.newBuilder() to construct.
        private bt_time(com.google.protobuf.GeneratedMessageLite.Builder builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private bt_time(boolean noInit) {
            this.unknownFields = com.google.protobuf.ByteString.EMPTY;
        }

        private static final bt_time defaultInstance;

        public static bt_time getDefaultInstance() {
            return defaultInstance;
        }

        public bt_time getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.ByteString unknownFields;

        private bt_time(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.ByteString.Output unknownFieldsOutput =
                    com.google.protobuf.ByteString.newOutput();
            com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
                    com.google.protobuf.CodedOutputStream.newInstance(
                            unknownFieldsOutput);
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            timeStamp_ = input.readInt64();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            timeZoneSecond_ = input.readInt32();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            isDaylightSaveTime_ = input.readBool();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                try {
                    unknownFieldsCodedOutput.flush();
                } catch (java.io.IOException e) {
                    // Should not happen
                } finally {
                    unknownFields = unknownFieldsOutput.toByteString();
                }
                makeExtensionsImmutable();
            }
        }

        public static com.google.protobuf.Parser<bt_time> PARSER =
                new com.google.protobuf.AbstractParser<bt_time>() {
                    public bt_time parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new bt_time(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<bt_time> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        public static final int TIME_STAMP_FIELD_NUMBER = 1;
        private long timeStamp_;

        /**
         * <code>optional int64 time_stamp = 1;</code>
         */
        public boolean hasTimeStamp() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional int64 time_stamp = 1;</code>
         */
        public long getTimeStamp() {
            return timeStamp_;
        }

        public static final int TIME_ZONE_SECOND_FIELD_NUMBER = 2;
        private int timeZoneSecond_;

        /**
         * <code>optional int32 time_zone_second = 2;</code>
         */
        public boolean hasTimeZoneSecond() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>optional int32 time_zone_second = 2;</code>
         */
        public int getTimeZoneSecond() {
            return timeZoneSecond_;
        }

        public static final int ISDAYLIGHTSAVETIME_FIELD_NUMBER = 3;
        private boolean isDaylightSaveTime_;

        /**
         * <code>optional bool isDaylightSaveTime = 3;</code>
         */
        public boolean hasIsDaylightSaveTime() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <code>optional bool isDaylightSaveTime = 3;</code>
         */
        public boolean getIsDaylightSaveTime() {
            return isDaylightSaveTime_;
        }

        private void initFields() {
            timeStamp_ = 0L;
            timeZoneSecond_ = 0;
            isDaylightSaveTime_ = false;
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeInt64(1, timeStamp_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeInt32(2, timeZoneSecond_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeBool(3, isDaylightSaveTime_);
            }
            output.writeRawBytes(unknownFields);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(1, timeStamp_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(2, timeZoneSecond_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(3, isDaylightSaveTime_);
            }
            size += unknownFields.size();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static bt_time parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static bt_time parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static bt_time parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static bt_time parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static bt_time parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static bt_time parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static bt_time parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static bt_time parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static bt_time parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static bt_time parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(bt_time prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        /**
         * Protobuf type {@code bt_time}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        bt_time, Builder>
                implements
                // @@protoc_insertion_point(builder_implements:bt_time)
                bt_timeOrBuilder {
            // Construct using BtTime.bt_time.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                timeStamp_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000001);
                timeZoneSecond_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                isDaylightSaveTime_ = false;
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public bt_time getDefaultInstanceForType() {
                return bt_time.getDefaultInstance();
            }

            public bt_time build() {
                bt_time result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public bt_time buildPartial() {
                bt_time result = new bt_time(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.timeStamp_ = timeStamp_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.timeZoneSecond_ = timeZoneSecond_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.isDaylightSaveTime_ = isDaylightSaveTime_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(bt_time other) {
                if (other == bt_time.getDefaultInstance()) return this;
                if (other.hasTimeStamp()) {
                    setTimeStamp(other.getTimeStamp());
                }
                if (other.hasTimeZoneSecond()) {
                    setTimeZoneSecond(other.getTimeZoneSecond());
                }
                if (other.hasIsDaylightSaveTime()) {
                    setIsDaylightSaveTime(other.getIsDaylightSaveTime());
                }
                setUnknownFields(
                        getUnknownFields().concat(other.unknownFields));
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                bt_time parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (bt_time) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private long timeStamp_;

            /**
             * <code>optional int64 time_stamp = 1;</code>
             */
            public boolean hasTimeStamp() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional int64 time_stamp = 1;</code>
             */
            public long getTimeStamp() {
                return timeStamp_;
            }

            /**
             * <code>optional int64 time_stamp = 1;</code>
             */
            public Builder setTimeStamp(long value) {
                bitField0_ |= 0x00000001;
                timeStamp_ = value;

                return this;
            }

            /**
             * <code>optional int64 time_stamp = 1;</code>
             */
            public Builder clearTimeStamp() {
                bitField0_ = (bitField0_ & ~0x00000001);
                timeStamp_ = 0L;

                return this;
            }

            private int timeZoneSecond_;

            /**
             * <code>optional int32 time_zone_second = 2;</code>
             */
            public boolean hasTimeZoneSecond() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional int32 time_zone_second = 2;</code>
             */
            public int getTimeZoneSecond() {
                return timeZoneSecond_;
            }

            /**
             * <code>optional int32 time_zone_second = 2;</code>
             */
            public Builder setTimeZoneSecond(int value) {
                bitField0_ |= 0x00000002;
                timeZoneSecond_ = value;

                return this;
            }

            /**
             * <code>optional int32 time_zone_second = 2;</code>
             */
            public Builder clearTimeZoneSecond() {
                bitField0_ = (bitField0_ & ~0x00000002);
                timeZoneSecond_ = 0;

                return this;
            }

            private boolean isDaylightSaveTime_;

            /**
             * <code>optional bool isDaylightSaveTime = 3;</code>
             */
            public boolean hasIsDaylightSaveTime() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>optional bool isDaylightSaveTime = 3;</code>
             */
            public boolean getIsDaylightSaveTime() {
                return isDaylightSaveTime_;
            }

            /**
             * <code>optional bool isDaylightSaveTime = 3;</code>
             */
            public Builder setIsDaylightSaveTime(boolean value) {
                bitField0_ |= 0x00000004;
                isDaylightSaveTime_ = value;

                return this;
            }

            /**
             * <code>optional bool isDaylightSaveTime = 3;</code>
             */
            public Builder clearIsDaylightSaveTime() {
                bitField0_ = (bitField0_ & ~0x00000004);
                isDaylightSaveTime_ = false;

                return this;
            }

            // @@protoc_insertion_point(builder_scope:bt_time)
        }

        static {
            defaultInstance = new bt_time(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:bt_time)
    }


    static {
    }

    // @@protoc_insertion_point(outer_class_scope)
}
