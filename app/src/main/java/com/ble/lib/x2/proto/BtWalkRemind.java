package com.ble.lib.x2.proto;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bt_walk_remind.proto

public final class BtWalkRemind {
    private BtWalkRemind() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public interface bt_walk_remindOrBuilder extends
            // @@protoc_insertion_point(interface_extends:bt_walk_remind)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>optional bool on_off = 1;</code>
         * <p/>
         * <pre>
         * ture is on ,false is off
         * </pre>
         */
        boolean hasOnOff();

        /**
         * <code>optional bool on_off = 1;</code>
         * <p/>
         * <pre>
         * ture is on ,false is off
         * </pre>
         */
        boolean getOnOff();

        /**
         * <code>optional uint32 start_hour = 2;</code>
         * <p/>
         * <pre>
         * </pre>
         */
        boolean hasStartHour();

        /**
         * <code>optional uint32 start_hour = 2;</code>
         * <p/>
         * <pre>
         * </pre>
         */
        int getStartHour();

        /**
         * <code>optional uint32 start_minute = 3;</code>
         * <p/>
         * <pre>
         * </pre>
         */
        boolean hasStartMinute();

        /**
         * <code>optional uint32 start_minute = 3;</code>
         * <p/>
         * <pre>
         * </pre>
         */
        int getStartMinute();

        /**
         * <code>optional uint32 end_hour = 4;</code>
         * <p/>
         * <pre>
         * </pre>
         */
        boolean hasEndHour();

        /**
         * <code>optional uint32 end_hour = 4;</code>
         * <p/>
         * <pre>
         * </pre>
         */
        int getEndHour();

        /**
         * <code>optional uint32 end_minute = 5;</code>
         * <p/>
         * <pre>
         * </pre>
         */
        boolean hasEndMinute();

        /**
         * <code>optional uint32 end_minute = 5;</code>
         * <p/>
         * <pre>
         * </pre>
         */
        int getEndMinute();

        /**
         * <code>repeated bool dayOn = 6;</code>
         * <p/>
         * <pre>
         * repeated=7, Sun to Sat, true is on , false if off
         * </pre>
         */
        java.util.List<Boolean> getDayOnList();

        /**
         * <code>repeated bool dayOn = 6;</code>
         * <p/>
         * <pre>
         * repeated=7, Sun to Sat, true is on , false if off
         * </pre>
         */
        int getDayOnCount();

        /**
         * <code>repeated bool dayOn = 6;</code>
         * <p/>
         * <pre>
         * repeated=7, Sun to Sat, true is on , false if off
         * </pre>
         */
        boolean getDayOn(int index);
    }

    /**
     * Protobuf type {@code bt_walk_remind}
     */
    public static final class bt_walk_remind extends
            com.google.protobuf.GeneratedMessageLite implements
            // @@protoc_insertion_point(message_implements:bt_walk_remind)
            bt_walk_remindOrBuilder {
        // Use bt_walk_remind.newBuilder() to construct.
        private bt_walk_remind(com.google.protobuf.GeneratedMessageLite.Builder builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private bt_walk_remind(boolean noInit) {
            this.unknownFields = com.google.protobuf.ByteString.EMPTY;
        }

        private static final bt_walk_remind defaultInstance;

        public static bt_walk_remind getDefaultInstance() {
            return defaultInstance;
        }

        public bt_walk_remind getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.ByteString unknownFields;

        private bt_walk_remind(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.ByteString.Output unknownFieldsOutput =
                    com.google.protobuf.ByteString.newOutput();
            com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
                    com.google.protobuf.CodedOutputStream.newInstance(
                            unknownFieldsOutput);
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            onOff_ = input.readBool();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            startHour_ = input.readUInt32();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            startMinute_ = input.readUInt32();
                            break;
                        }
                        case 32: {
                            bitField0_ |= 0x00000008;
                            endHour_ = input.readUInt32();
                            break;
                        }
                        case 40: {
                            bitField0_ |= 0x00000010;
                            endMinute_ = input.readUInt32();
                            break;
                        }
                        case 48: {
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                                dayOn_ = new java.util.ArrayList<Boolean>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            dayOn_.add(input.readBool());
                            break;
                        }
                        case 50: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                                dayOn_ = new java.util.ArrayList<Boolean>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                dayOn_.add(input.readBool());
                            }
                            input.popLimit(limit);
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                    dayOn_ = java.util.Collections.unmodifiableList(dayOn_);
                }
                try {
                    unknownFieldsCodedOutput.flush();
                } catch (java.io.IOException e) {
                    // Should not happen
                } finally {
                    unknownFields = unknownFieldsOutput.toByteString();
                }
                makeExtensionsImmutable();
            }
        }

        public static com.google.protobuf.Parser<bt_walk_remind> PARSER =
                new com.google.protobuf.AbstractParser<bt_walk_remind>() {
                    public bt_walk_remind parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new bt_walk_remind(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<bt_walk_remind> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        public static final int ON_OFF_FIELD_NUMBER = 1;
        private boolean onOff_;

        /**
         * <code>optional bool on_off = 1;</code>
         * <p/>
         * <pre>
         * ture is on ,false is off
         * </pre>
         */
        public boolean hasOnOff() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional bool on_off = 1;</code>
         * <p/>
         * <pre>
         * ture is on ,false is off
         * </pre>
         */
        public boolean getOnOff() {
            return onOff_;
        }

        public static final int START_HOUR_FIELD_NUMBER = 2;
        private int startHour_;

        /**
         * <code>optional uint32 start_hour = 2;</code>
         * <p/>
         * <pre>
         * </pre>
         */
        public boolean hasStartHour() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>optional uint32 start_hour = 2;</code>
         * <p/>
         * <pre>
         * </pre>
         */
        public int getStartHour() {
            return startHour_;
        }

        public static final int START_MINUTE_FIELD_NUMBER = 3;
        private int startMinute_;

        /**
         * <code>optional uint32 start_minute = 3;</code>
         * <p/>
         * <pre>
         * </pre>
         */
        public boolean hasStartMinute() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <code>optional uint32 start_minute = 3;</code>
         * <p/>
         * <pre>
         * </pre>
         */
        public int getStartMinute() {
            return startMinute_;
        }

        public static final int END_HOUR_FIELD_NUMBER = 4;
        private int endHour_;

        /**
         * <code>optional uint32 end_hour = 4;</code>
         * <p/>
         * <pre>
         * </pre>
         */
        public boolean hasEndHour() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <code>optional uint32 end_hour = 4;</code>
         * <p/>
         * <pre>
         * </pre>
         */
        public int getEndHour() {
            return endHour_;
        }

        public static final int END_MINUTE_FIELD_NUMBER = 5;
        private int endMinute_;

        /**
         * <code>optional uint32 end_minute = 5;</code>
         * <p/>
         * <pre>
         * </pre>
         */
        public boolean hasEndMinute() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <code>optional uint32 end_minute = 5;</code>
         * <p/>
         * <pre>
         * </pre>
         */
        public int getEndMinute() {
            return endMinute_;
        }

        public static final int DAYON_FIELD_NUMBER = 6;
        private java.util.List<Boolean> dayOn_;

        /**
         * <code>repeated bool dayOn = 6;</code>
         * <p/>
         * <pre>
         * repeated=7, Sun to Sat, true is on , false if off
         * </pre>
         */
        public java.util.List<Boolean>
        getDayOnList() {
            return dayOn_;
        }

        /**
         * <code>repeated bool dayOn = 6;</code>
         * <p/>
         * <pre>
         * repeated=7, Sun to Sat, true is on , false if off
         * </pre>
         */
        public int getDayOnCount() {
            return dayOn_.size();
        }

        /**
         * <code>repeated bool dayOn = 6;</code>
         * <p/>
         * <pre>
         * repeated=7, Sun to Sat, true is on , false if off
         * </pre>
         */
        public boolean getDayOn(int index) {
            return dayOn_.get(index);
        }

        private void initFields() {
            onOff_ = false;
            startHour_ = 0;
            startMinute_ = 0;
            endHour_ = 0;
            endMinute_ = 0;
            dayOn_ = java.util.Collections.emptyList();
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBool(1, onOff_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeUInt32(2, startHour_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeUInt32(3, startMinute_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeUInt32(4, endHour_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeUInt32(5, endMinute_);
            }
            for (int i = 0; i < dayOn_.size(); i++) {
                output.writeBool(6, dayOn_.get(i));
            }
            output.writeRawBytes(unknownFields);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(1, onOff_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(2, startHour_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(3, startMinute_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(4, endHour_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(5, endMinute_);
            }
            {
                int dataSize = 0;
                dataSize = 1 * getDayOnList().size();
                size += dataSize;
                size += 1 * getDayOnList().size();
            }
            size += unknownFields.size();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static bt_walk_remind parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static bt_walk_remind parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static bt_walk_remind parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static bt_walk_remind parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static bt_walk_remind parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static bt_walk_remind parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static bt_walk_remind parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static bt_walk_remind parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static bt_walk_remind parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static bt_walk_remind parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(bt_walk_remind prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        /**
         * Protobuf type {@code bt_walk_remind}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        bt_walk_remind, Builder>
                implements
                // @@protoc_insertion_point(builder_implements:bt_walk_remind)
                bt_walk_remindOrBuilder {
            // Construct using BtWalkRemind.bt_walk_remind.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                onOff_ = false;
                bitField0_ = (bitField0_ & ~0x00000001);
                startHour_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                startMinute_ = 0;
                bitField0_ = (bitField0_ & ~0x00000004);
                endHour_ = 0;
                bitField0_ = (bitField0_ & ~0x00000008);
                endMinute_ = 0;
                bitField0_ = (bitField0_ & ~0x00000010);
                dayOn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public bt_walk_remind getDefaultInstanceForType() {
                return bt_walk_remind.getDefaultInstance();
            }

            public bt_walk_remind build() {
                bt_walk_remind result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public bt_walk_remind buildPartial() {
                bt_walk_remind result = new bt_walk_remind(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.onOff_ = onOff_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.startHour_ = startHour_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.startMinute_ = startMinute_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.endHour_ = endHour_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.endMinute_ = endMinute_;
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                    dayOn_ = java.util.Collections.unmodifiableList(dayOn_);
                    bitField0_ = (bitField0_ & ~0x00000020);
                }
                result.dayOn_ = dayOn_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(bt_walk_remind other) {
                if (other == bt_walk_remind.getDefaultInstance()) return this;
                if (other.hasOnOff()) {
                    setOnOff(other.getOnOff());
                }
                if (other.hasStartHour()) {
                    setStartHour(other.getStartHour());
                }
                if (other.hasStartMinute()) {
                    setStartMinute(other.getStartMinute());
                }
                if (other.hasEndHour()) {
                    setEndHour(other.getEndHour());
                }
                if (other.hasEndMinute()) {
                    setEndMinute(other.getEndMinute());
                }
                if (!other.dayOn_.isEmpty()) {
                    if (dayOn_.isEmpty()) {
                        dayOn_ = other.dayOn_;
                        bitField0_ = (bitField0_ & ~0x00000020);
                    } else {
                        ensureDayOnIsMutable();
                        dayOn_.addAll(other.dayOn_);
                    }

                }
                setUnknownFields(
                        getUnknownFields().concat(other.unknownFields));
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                bt_walk_remind parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (bt_walk_remind) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private boolean onOff_;

            /**
             * <code>optional bool on_off = 1;</code>
             * <p/>
             * <pre>
             * ture is on ,false is off
             * </pre>
             */
            public boolean hasOnOff() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional bool on_off = 1;</code>
             * <p/>
             * <pre>
             * ture is on ,false is off
             * </pre>
             */
            public boolean getOnOff() {
                return onOff_;
            }

            /**
             * <code>optional bool on_off = 1;</code>
             * <p/>
             * <pre>
             * ture is on ,false is off
             * </pre>
             */
            public Builder setOnOff(boolean value) {
                bitField0_ |= 0x00000001;
                onOff_ = value;

                return this;
            }

            /**
             * <code>optional bool on_off = 1;</code>
             * <p/>
             * <pre>
             * ture is on ,false is off
             * </pre>
             */
            public Builder clearOnOff() {
                bitField0_ = (bitField0_ & ~0x00000001);
                onOff_ = false;

                return this;
            }

            private int startHour_;

            /**
             * <code>optional uint32 start_hour = 2;</code>
             * <p/>
             * <pre>
             * </pre>
             */
            public boolean hasStartHour() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional uint32 start_hour = 2;</code>
             * <p/>
             * <pre>
             * </pre>
             */
            public int getStartHour() {
                return startHour_;
            }

            /**
             * <code>optional uint32 start_hour = 2;</code>
             * <p/>
             * <pre>
             * </pre>
             */
            public Builder setStartHour(int value) {
                bitField0_ |= 0x00000002;
                startHour_ = value;

                return this;
            }

            /**
             * <code>optional uint32 start_hour = 2;</code>
             * <p/>
             * <pre>
             * </pre>
             */
            public Builder clearStartHour() {
                bitField0_ = (bitField0_ & ~0x00000002);
                startHour_ = 0;

                return this;
            }

            private int startMinute_;

            /**
             * <code>optional uint32 start_minute = 3;</code>
             * <p/>
             * <pre>
             * </pre>
             */
            public boolean hasStartMinute() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>optional uint32 start_minute = 3;</code>
             * <p/>
             * <pre>
             * </pre>
             */
            public int getStartMinute() {
                return startMinute_;
            }

            /**
             * <code>optional uint32 start_minute = 3;</code>
             * <p/>
             * <pre>
             * </pre>
             */
            public Builder setStartMinute(int value) {
                bitField0_ |= 0x00000004;
                startMinute_ = value;

                return this;
            }

            /**
             * <code>optional uint32 start_minute = 3;</code>
             * <p/>
             * <pre>
             * </pre>
             */
            public Builder clearStartMinute() {
                bitField0_ = (bitField0_ & ~0x00000004);
                startMinute_ = 0;

                return this;
            }

            private int endHour_;

            /**
             * <code>optional uint32 end_hour = 4;</code>
             * <p/>
             * <pre>
             * </pre>
             */
            public boolean hasEndHour() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <code>optional uint32 end_hour = 4;</code>
             * <p/>
             * <pre>
             * </pre>
             */
            public int getEndHour() {
                return endHour_;
            }

            /**
             * <code>optional uint32 end_hour = 4;</code>
             * <p/>
             * <pre>
             * </pre>
             */
            public Builder setEndHour(int value) {
                bitField0_ |= 0x00000008;
                endHour_ = value;

                return this;
            }

            /**
             * <code>optional uint32 end_hour = 4;</code>
             * <p/>
             * <pre>
             * </pre>
             */
            public Builder clearEndHour() {
                bitField0_ = (bitField0_ & ~0x00000008);
                endHour_ = 0;

                return this;
            }

            private int endMinute_;

            /**
             * <code>optional uint32 end_minute = 5;</code>
             * <p/>
             * <pre>
             * </pre>
             */
            public boolean hasEndMinute() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <code>optional uint32 end_minute = 5;</code>
             * <p/>
             * <pre>
             * </pre>
             */
            public int getEndMinute() {
                return endMinute_;
            }

            /**
             * <code>optional uint32 end_minute = 5;</code>
             * <p/>
             * <pre>
             * </pre>
             */
            public Builder setEndMinute(int value) {
                bitField0_ |= 0x00000010;
                endMinute_ = value;

                return this;
            }

            /**
             * <code>optional uint32 end_minute = 5;</code>
             * <p/>
             * <pre>
             * </pre>
             */
            public Builder clearEndMinute() {
                bitField0_ = (bitField0_ & ~0x00000010);
                endMinute_ = 0;

                return this;
            }

            private java.util.List<Boolean> dayOn_ = java.util.Collections.emptyList();

            private void ensureDayOnIsMutable() {
                if (!((bitField0_ & 0x00000020) == 0x00000020)) {
                    dayOn_ = new java.util.ArrayList<Boolean>(dayOn_);
                    bitField0_ |= 0x00000020;
                }
            }

            /**
             * <code>repeated bool dayOn = 6;</code>
             * <p/>
             * <pre>
             * repeated=7, Sun to Sat, true is on , false if off
             * </pre>
             */
            public java.util.List<Boolean>
            getDayOnList() {
                return java.util.Collections.unmodifiableList(dayOn_);
            }

            /**
             * <code>repeated bool dayOn = 6;</code>
             * <p/>
             * <pre>
             * repeated=7, Sun to Sat, true is on , false if off
             * </pre>
             */
            public int getDayOnCount() {
                return dayOn_.size();
            }

            /**
             * <code>repeated bool dayOn = 6;</code>
             * <p/>
             * <pre>
             * repeated=7, Sun to Sat, true is on , false if off
             * </pre>
             */
            public boolean getDayOn(int index) {
                return dayOn_.get(index);
            }

            /**
             * <code>repeated bool dayOn = 6;</code>
             * <p/>
             * <pre>
             * repeated=7, Sun to Sat, true is on , false if off
             * </pre>
             */
            public Builder setDayOn(
                    int index, boolean value) {
                ensureDayOnIsMutable();
                dayOn_.set(index, value);

                return this;
            }

            /**
             * <code>repeated bool dayOn = 6;</code>
             * <p/>
             * <pre>
             * repeated=7, Sun to Sat, true is on , false if off
             * </pre>
             */
            public Builder addDayOn(boolean value) {
                ensureDayOnIsMutable();
                dayOn_.add(value);

                return this;
            }

            /**
             * <code>repeated bool dayOn = 6;</code>
             * <p/>
             * <pre>
             * repeated=7, Sun to Sat, true is on , false if off
             * </pre>
             */
            public Builder addAllDayOn(
                    Iterable<? extends Boolean> values) {
                ensureDayOnIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, dayOn_);

                return this;
            }

            /**
             * <code>repeated bool dayOn = 6;</code>
             * <p/>
             * <pre>
             * repeated=7, Sun to Sat, true is on , false if off
             * </pre>
             */
            public Builder clearDayOn() {
                dayOn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);

                return this;
            }

            // @@protoc_insertion_point(builder_scope:bt_walk_remind)
        }

        static {
            defaultInstance = new bt_walk_remind(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:bt_walk_remind)
    }


    static {
    }

    // @@protoc_insertion_point(outer_class_scope)
}
