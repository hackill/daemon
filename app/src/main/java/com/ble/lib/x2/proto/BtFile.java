package com.ble.lib.x2.proto;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bt_file.proto

public final class BtFile {
    private BtFile() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    /**
     * Protobuf enum {@code FILE_ERROR}
     */
    public enum FILE_ERROR
            implements com.google.protobuf.Internal.EnumLite {
        /**
         * <code>SUCCESS = 1;</code>
         */
        SUCCESS(0, 1),
        /**
         * <code>CRC = 2;</code>
         * <p/>
         * <pre>
         * crc error
         * </pre>
         */
        CRC(1, 2),
        /**
         * <code>DATA_LENGTH_TOO_LARGE = 3;</code>
         * <p/>
         * <pre>
         * send data larger than file len
         * </pre>
         */
        DATA_LENGTH_TOO_LARGE(2, 3),
        /**
         * <code>DATA_LENGTH_TOO_SMAILL = 4;</code>
         * <p/>
         * <pre>
         * send data smaller than file len
         * </pre>
         */
        DATA_LENGTH_TOO_SMAILL(3, 4),
        /**
         * <code>FILE_NOT_SUPPORT = 5;</code>
         * <p/>
         * <pre>
         * </pre>
         */
        FILE_NOT_SUPPORT(4, 5),
        /**
         * <code>REPEATE_WITH_STORE = 6;</code>
         * <p/>
         * <pre>
         * </pre>
         */
        REPEATE_WITH_STORE(5, 6),;

        /**
         * <code>SUCCESS = 1;</code>
         */
        public static final int SUCCESS_VALUE = 1;
        /**
         * <code>CRC = 2;</code>
         * <p/>
         * <pre>
         * crc error
         * </pre>
         */
        public static final int CRC_VALUE = 2;
        /**
         * <code>DATA_LENGTH_TOO_LARGE = 3;</code>
         * <p/>
         * <pre>
         * send data larger than file len
         * </pre>
         */
        public static final int DATA_LENGTH_TOO_LARGE_VALUE = 3;
        /**
         * <code>DATA_LENGTH_TOO_SMAILL = 4;</code>
         * <p/>
         * <pre>
         * send data smaller than file len
         * </pre>
         */
        public static final int DATA_LENGTH_TOO_SMAILL_VALUE = 4;
        /**
         * <code>FILE_NOT_SUPPORT = 5;</code>
         * <p/>
         * <pre>
         * </pre>
         */
        public static final int FILE_NOT_SUPPORT_VALUE = 5;
        /**
         * <code>REPEATE_WITH_STORE = 6;</code>
         * <p/>
         * <pre>
         * </pre>
         */
        public static final int REPEATE_WITH_STORE_VALUE = 6;


        public final int getNumber() {
            return value;
        }

        public static FILE_ERROR valueOf(int value) {
            switch (value) {
                case 1:
                    return SUCCESS;
                case 2:
                    return CRC;
                case 3:
                    return DATA_LENGTH_TOO_LARGE;
                case 4:
                    return DATA_LENGTH_TOO_SMAILL;
                case 5:
                    return FILE_NOT_SUPPORT;
                case 6:
                    return REPEATE_WITH_STORE;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<FILE_ERROR>
        internalGetValueMap() {
            return internalValueMap;
        }

        private static com.google.protobuf.Internal.EnumLiteMap<FILE_ERROR>
                internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<FILE_ERROR>() {
                    public FILE_ERROR findValueByNumber(int number) {
                        return FILE_ERROR.valueOf(number);
                    }
                };

        private final int value;

        FILE_ERROR(int index, int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:FILE_ERROR)
    }

    /**
     * Protobuf enum {@code FILE_NAME}
     */
    public enum FILE_NAME
            implements com.google.protobuf.Internal.EnumLite {
        /**
         * <code>FIRMWARE = 1;</code>
         */
        FIRMWARE(0, 1),
        /**
         * <code>FONT = 2;</code>
         */
        FONT(1, 2),
        /**
         * <code>NX2_WATCH_SKIN = 3;</code>
         */
        NX2_WATCH_SKIN(2, 3),;

        /**
         * <code>FIRMWARE = 1;</code>
         */
        public static final int FIRMWARE_VALUE = 1;
        /**
         * <code>FONT = 2;</code>
         */
        public static final int FONT_VALUE = 2;
        /**
         * <code>NX2_WATCH_SKIN = 3;</code>
         */
        public static final int NX2_WATCH_SKIN_VALUE = 3;


        public final int getNumber() {
            return value;
        }

        public static FILE_NAME valueOf(int value) {
            switch (value) {
                case 1:
                    return FIRMWARE;
                case 2:
                    return FONT;
                case 3:
                    return NX2_WATCH_SKIN;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<FILE_NAME>
        internalGetValueMap() {
            return internalValueMap;
        }

        private static com.google.protobuf.Internal.EnumLiteMap<FILE_NAME>
                internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<FILE_NAME>() {
                    public FILE_NAME findValueByNumber(int number) {
                        return FILE_NAME.valueOf(number);
                    }
                };

        private final int value;

        FILE_NAME(int index, int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:FILE_NAME)
    }

    public interface bt_file_reqOrBuilder extends
            // @@protoc_insertion_point(interface_extends:bt_file_req)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>optional .FILE_NAME name = 1;</code>
         */
        boolean hasName();

        /**
         * <code>optional .FILE_NAME name = 1;</code>
         */
        FILE_NAME getName();

        /**
         * <code>optional .FILE_INFO info = 2;</code>
         */
        boolean hasInfo();

        /**
         * <code>optional .FILE_INFO info = 2;</code>
         */
        FILE_INFO getInfo();

        /**
         * <code>optional .FILE_SECTION section = 3;</code>
         */
        boolean hasSection();

        /**
         * <code>optional .FILE_SECTION section = 3;</code>
         */
        FILE_SECTION getSection();
    }

    /**
     * Protobuf type {@code bt_file_req}
     */
    public static final class bt_file_req extends
            com.google.protobuf.GeneratedMessageLite implements
            // @@protoc_insertion_point(message_implements:bt_file_req)
            bt_file_reqOrBuilder {
        // Use bt_file_req.newBuilder() to construct.
        private bt_file_req(com.google.protobuf.GeneratedMessageLite.Builder builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private bt_file_req(boolean noInit) {
            this.unknownFields = com.google.protobuf.ByteString.EMPTY;
        }

        private static final bt_file_req defaultInstance;

        public static bt_file_req getDefaultInstance() {
            return defaultInstance;
        }

        public bt_file_req getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.ByteString unknownFields;

        private bt_file_req(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.ByteString.Output unknownFieldsOutput =
                    com.google.protobuf.ByteString.newOutput();
            com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
                    com.google.protobuf.CodedOutputStream.newInstance(
                            unknownFieldsOutput);
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            int rawValue = input.readEnum();
                            FILE_NAME value = FILE_NAME.valueOf(rawValue);
                            if (value == null) {
                                unknownFieldsCodedOutput.writeRawVarint32(tag);
                                unknownFieldsCodedOutput.writeRawVarint32(rawValue);
                            } else {
                                bitField0_ |= 0x00000001;
                                name_ = value;
                            }
                            break;
                        }
                        case 18: {
                            FILE_INFO.Builder subBuilder = null;
                            if (dataCase_ == 2) {
                                subBuilder = ((FILE_INFO) data_).toBuilder();
                            }
                            data_ = input.readMessage(FILE_INFO.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((FILE_INFO) data_);
                                data_ = subBuilder.buildPartial();
                            }
                            dataCase_ = 2;
                            break;
                        }
                        case 26: {
                            FILE_SECTION.Builder subBuilder = null;
                            if (dataCase_ == 3) {
                                subBuilder = ((FILE_SECTION) data_).toBuilder();
                            }
                            data_ = input.readMessage(FILE_SECTION.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom((FILE_SECTION) data_);
                                data_ = subBuilder.buildPartial();
                            }
                            dataCase_ = 3;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                try {
                    unknownFieldsCodedOutput.flush();
                } catch (java.io.IOException e) {
                    // Should not happen
                } finally {
                    unknownFields = unknownFieldsOutput.toByteString();
                }
                makeExtensionsImmutable();
            }
        }

        public static com.google.protobuf.Parser<bt_file_req> PARSER =
                new com.google.protobuf.AbstractParser<bt_file_req>() {
                    public bt_file_req parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new bt_file_req(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<bt_file_req> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        private int dataCase_ = 0;
        private Object data_;

        public enum DataCase
                implements com.google.protobuf.Internal.EnumLite {
            INFO(2),
            SECTION(3),
            DATA_NOT_SET(0);
            private int value = 0;

            DataCase(int value) {
                this.value = value;
            }

            public static DataCase valueOf(int value) {
                switch (value) {
                    case 2:
                        return INFO;
                    case 3:
                        return SECTION;
                    case 0:
                        return DATA_NOT_SET;
                    default:
                        throw new IllegalArgumentException(
                                "Value is undefined for this oneof enum.");
                }
            }

            public int getNumber() {
                return this.value;
            }
        }

        public DataCase
        getDataCase() {
            return DataCase.valueOf(
                    dataCase_);
        }

        public static final int NAME_FIELD_NUMBER = 1;
        private FILE_NAME name_;

        /**
         * <code>optional .FILE_NAME name = 1;</code>
         */
        public boolean hasName() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional .FILE_NAME name = 1;</code>
         */
        public FILE_NAME getName() {
            return name_;
        }

        public static final int INFO_FIELD_NUMBER = 2;

        /**
         * <code>optional .FILE_INFO info = 2;</code>
         */
        public boolean hasInfo() {
            return dataCase_ == 2;
        }

        /**
         * <code>optional .FILE_INFO info = 2;</code>
         */
        public FILE_INFO getInfo() {
            if (dataCase_ == 2) {
                return (FILE_INFO) data_;
            }
            return FILE_INFO.getDefaultInstance();
        }

        public static final int SECTION_FIELD_NUMBER = 3;

        /**
         * <code>optional .FILE_SECTION section = 3;</code>
         */
        public boolean hasSection() {
            return dataCase_ == 3;
        }

        /**
         * <code>optional .FILE_SECTION section = 3;</code>
         */
        public FILE_SECTION getSection() {
            if (dataCase_ == 3) {
                return (FILE_SECTION) data_;
            }
            return FILE_SECTION.getDefaultInstance();
        }

        private void initFields() {
            name_ = FILE_NAME.FIRMWARE;
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeEnum(1, name_.getNumber());
            }
            if (dataCase_ == 2) {
                output.writeMessage(2, (FILE_INFO) data_);
            }
            if (dataCase_ == 3) {
                output.writeMessage(3, (FILE_SECTION) data_);
            }
            output.writeRawBytes(unknownFields);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(1, name_.getNumber());
            }
            if (dataCase_ == 2) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, (FILE_INFO) data_);
            }
            if (dataCase_ == 3) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, (FILE_SECTION) data_);
            }
            size += unknownFields.size();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static bt_file_req parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static bt_file_req parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static bt_file_req parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static bt_file_req parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static bt_file_req parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static bt_file_req parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static bt_file_req parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static bt_file_req parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static bt_file_req parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static bt_file_req parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(bt_file_req prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        /**
         * Protobuf type {@code bt_file_req}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        bt_file_req, Builder>
                implements
                // @@protoc_insertion_point(builder_implements:bt_file_req)
                bt_file_reqOrBuilder {
            // Construct using BtFile.bt_file_req.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                name_ = FILE_NAME.FIRMWARE;
                bitField0_ = (bitField0_ & ~0x00000001);
                dataCase_ = 0;
                data_ = null;
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public bt_file_req getDefaultInstanceForType() {
                return bt_file_req.getDefaultInstance();
            }

            public bt_file_req build() {
                bt_file_req result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public bt_file_req buildPartial() {
                bt_file_req result = new bt_file_req(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.name_ = name_;
                if (dataCase_ == 2) {
                    result.data_ = data_;
                }
                if (dataCase_ == 3) {
                    result.data_ = data_;
                }
                result.bitField0_ = to_bitField0_;
                result.dataCase_ = dataCase_;
                return result;
            }

            public Builder mergeFrom(bt_file_req other) {
                if (other == bt_file_req.getDefaultInstance()) return this;
                if (other.hasName()) {
                    setName(other.getName());
                }
                switch (other.getDataCase()) {
                    case INFO: {
                        mergeInfo(other.getInfo());
                        break;
                    }
                    case SECTION: {
                        mergeSection(other.getSection());
                        break;
                    }
                    case DATA_NOT_SET: {
                        break;
                    }
                }
                setUnknownFields(
                        getUnknownFields().concat(other.unknownFields));
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                bt_file_req parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (bt_file_req) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int dataCase_ = 0;
            private Object data_;

            public DataCase
            getDataCase() {
                return DataCase.valueOf(
                        dataCase_);
            }

            public Builder clearData() {
                dataCase_ = 0;
                data_ = null;
                return this;
            }

            private int bitField0_;

            private FILE_NAME name_ = FILE_NAME.FIRMWARE;

            /**
             * <code>optional .FILE_NAME name = 1;</code>
             */
            public boolean hasName() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional .FILE_NAME name = 1;</code>
             */
            public FILE_NAME getName() {
                return name_;
            }

            /**
             * <code>optional .FILE_NAME name = 1;</code>
             */
            public Builder setName(FILE_NAME value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                name_ = value;

                return this;
            }

            /**
             * <code>optional .FILE_NAME name = 1;</code>
             */
            public Builder clearName() {
                bitField0_ = (bitField0_ & ~0x00000001);
                name_ = FILE_NAME.FIRMWARE;

                return this;
            }

            /**
             * <code>optional .FILE_INFO info = 2;</code>
             */
            public boolean hasInfo() {
                return dataCase_ == 2;
            }

            /**
             * <code>optional .FILE_INFO info = 2;</code>
             */
            public FILE_INFO getInfo() {
                if (dataCase_ == 2) {
                    return (FILE_INFO) data_;
                }
                return FILE_INFO.getDefaultInstance();
            }

            /**
             * <code>optional .FILE_INFO info = 2;</code>
             */
            public Builder setInfo(FILE_INFO value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                data_ = value;

                dataCase_ = 2;
                return this;
            }

            /**
             * <code>optional .FILE_INFO info = 2;</code>
             */
            public Builder setInfo(
                    FILE_INFO.Builder builderForValue) {
                data_ = builderForValue.build();

                dataCase_ = 2;
                return this;
            }

            /**
             * <code>optional .FILE_INFO info = 2;</code>
             */
            public Builder mergeInfo(FILE_INFO value) {
                if (dataCase_ == 2 &&
                        data_ != FILE_INFO.getDefaultInstance()) {
                    data_ = FILE_INFO.newBuilder((FILE_INFO) data_)
                            .mergeFrom(value).buildPartial();
                } else {
                    data_ = value;
                }

                dataCase_ = 2;
                return this;
            }

            /**
             * <code>optional .FILE_INFO info = 2;</code>
             */
            public Builder clearInfo() {
                if (dataCase_ == 2) {
                    dataCase_ = 0;
                    data_ = null;

                }
                return this;
            }

            /**
             * <code>optional .FILE_SECTION section = 3;</code>
             */
            public boolean hasSection() {
                return dataCase_ == 3;
            }

            /**
             * <code>optional .FILE_SECTION section = 3;</code>
             */
            public FILE_SECTION getSection() {
                if (dataCase_ == 3) {
                    return (FILE_SECTION) data_;
                }
                return FILE_SECTION.getDefaultInstance();
            }

            /**
             * <code>optional .FILE_SECTION section = 3;</code>
             */
            public Builder setSection(FILE_SECTION value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                data_ = value;

                dataCase_ = 3;
                return this;
            }

            /**
             * <code>optional .FILE_SECTION section = 3;</code>
             */
            public Builder setSection(
                    FILE_SECTION.Builder builderForValue) {
                data_ = builderForValue.build();

                dataCase_ = 3;
                return this;
            }

            /**
             * <code>optional .FILE_SECTION section = 3;</code>
             */
            public Builder mergeSection(FILE_SECTION value) {
                if (dataCase_ == 3 &&
                        data_ != FILE_SECTION.getDefaultInstance()) {
                    data_ = FILE_SECTION.newBuilder((FILE_SECTION) data_)
                            .mergeFrom(value).buildPartial();
                } else {
                    data_ = value;
                }

                dataCase_ = 3;
                return this;
            }

            /**
             * <code>optional .FILE_SECTION section = 3;</code>
             */
            public Builder clearSection() {
                if (dataCase_ == 3) {
                    dataCase_ = 0;
                    data_ = null;

                }
                return this;
            }

            // @@protoc_insertion_point(builder_scope:bt_file_req)
        }

        static {
            defaultInstance = new bt_file_req(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:bt_file_req)
    }

    public interface FILE_INFOOrBuilder extends
            // @@protoc_insertion_point(interface_extends:FILE_INFO)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>optional uint32 file_crc = 1;</code>
         */
        boolean hasFileCrc();

        /**
         * <code>optional uint32 file_crc = 1;</code>
         */
        int getFileCrc();

        /**
         * <code>optional uint32 file_size = 2;</code>
         */
        boolean hasFileSize();

        /**
         * <code>optional uint32 file_size = 2;</code>
         */
        int getFileSize();
    }

    /**
     * Protobuf type {@code FILE_INFO}
     */
    public static final class FILE_INFO extends
            com.google.protobuf.GeneratedMessageLite implements
            // @@protoc_insertion_point(message_implements:FILE_INFO)
            FILE_INFOOrBuilder {
        // Use FILE_INFO.newBuilder() to construct.
        private FILE_INFO(com.google.protobuf.GeneratedMessageLite.Builder builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private FILE_INFO(boolean noInit) {
            this.unknownFields = com.google.protobuf.ByteString.EMPTY;
        }

        private static final FILE_INFO defaultInstance;

        public static FILE_INFO getDefaultInstance() {
            return defaultInstance;
        }

        public FILE_INFO getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.ByteString unknownFields;

        private FILE_INFO(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.ByteString.Output unknownFieldsOutput =
                    com.google.protobuf.ByteString.newOutput();
            com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
                    com.google.protobuf.CodedOutputStream.newInstance(
                            unknownFieldsOutput);
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            fileCrc_ = input.readUInt32();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            fileSize_ = input.readUInt32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                try {
                    unknownFieldsCodedOutput.flush();
                } catch (java.io.IOException e) {
                    // Should not happen
                } finally {
                    unknownFields = unknownFieldsOutput.toByteString();
                }
                makeExtensionsImmutable();
            }
        }

        public static com.google.protobuf.Parser<FILE_INFO> PARSER =
                new com.google.protobuf.AbstractParser<FILE_INFO>() {
                    public FILE_INFO parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new FILE_INFO(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<FILE_INFO> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        public static final int FILE_CRC_FIELD_NUMBER = 1;
        private int fileCrc_;

        /**
         * <code>optional uint32 file_crc = 1;</code>
         */
        public boolean hasFileCrc() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional uint32 file_crc = 1;</code>
         */
        public int getFileCrc() {
            return fileCrc_;
        }

        public static final int FILE_SIZE_FIELD_NUMBER = 2;
        private int fileSize_;

        /**
         * <code>optional uint32 file_size = 2;</code>
         */
        public boolean hasFileSize() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>optional uint32 file_size = 2;</code>
         */
        public int getFileSize() {
            return fileSize_;
        }

        private void initFields() {
            fileCrc_ = 0;
            fileSize_ = 0;
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeUInt32(1, fileCrc_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeUInt32(2, fileSize_);
            }
            output.writeRawBytes(unknownFields);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(1, fileCrc_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(2, fileSize_);
            }
            size += unknownFields.size();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static FILE_INFO parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static FILE_INFO parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static FILE_INFO parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static FILE_INFO parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static FILE_INFO parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static FILE_INFO parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static FILE_INFO parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static FILE_INFO parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static FILE_INFO parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static FILE_INFO parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(FILE_INFO prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        /**
         * Protobuf type {@code FILE_INFO}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        FILE_INFO, Builder>
                implements
                // @@protoc_insertion_point(builder_implements:FILE_INFO)
                FILE_INFOOrBuilder {
            // Construct using BtFile.FILE_INFO.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                fileCrc_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                fileSize_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public FILE_INFO getDefaultInstanceForType() {
                return FILE_INFO.getDefaultInstance();
            }

            public FILE_INFO build() {
                FILE_INFO result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public FILE_INFO buildPartial() {
                FILE_INFO result = new FILE_INFO(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.fileCrc_ = fileCrc_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.fileSize_ = fileSize_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(FILE_INFO other) {
                if (other == FILE_INFO.getDefaultInstance()) return this;
                if (other.hasFileCrc()) {
                    setFileCrc(other.getFileCrc());
                }
                if (other.hasFileSize()) {
                    setFileSize(other.getFileSize());
                }
                setUnknownFields(
                        getUnknownFields().concat(other.unknownFields));
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                FILE_INFO parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (FILE_INFO) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private int fileCrc_;

            /**
             * <code>optional uint32 file_crc = 1;</code>
             */
            public boolean hasFileCrc() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional uint32 file_crc = 1;</code>
             */
            public int getFileCrc() {
                return fileCrc_;
            }

            /**
             * <code>optional uint32 file_crc = 1;</code>
             */
            public Builder setFileCrc(int value) {
                bitField0_ |= 0x00000001;
                fileCrc_ = value;

                return this;
            }

            /**
             * <code>optional uint32 file_crc = 1;</code>
             */
            public Builder clearFileCrc() {
                bitField0_ = (bitField0_ & ~0x00000001);
                fileCrc_ = 0;

                return this;
            }

            private int fileSize_;

            /**
             * <code>optional uint32 file_size = 2;</code>
             */
            public boolean hasFileSize() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional uint32 file_size = 2;</code>
             */
            public int getFileSize() {
                return fileSize_;
            }

            /**
             * <code>optional uint32 file_size = 2;</code>
             */
            public Builder setFileSize(int value) {
                bitField0_ |= 0x00000002;
                fileSize_ = value;

                return this;
            }

            /**
             * <code>optional uint32 file_size = 2;</code>
             */
            public Builder clearFileSize() {
                bitField0_ = (bitField0_ & ~0x00000002);
                fileSize_ = 0;

                return this;
            }

            // @@protoc_insertion_point(builder_scope:FILE_INFO)
        }

        static {
            defaultInstance = new FILE_INFO(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:FILE_INFO)
    }

    public interface FILE_SECTIONOrBuilder extends
            // @@protoc_insertion_point(interface_extends:FILE_SECTION)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>optional uint32 data_transfered_len = 1;</code>
         */
        boolean hasDataTransferedLen();

        /**
         * <code>optional uint32 data_transfered_len = 1;</code>
         */
        int getDataTransferedLen();

        /**
         * <code>optional bytes data = 2;</code>
         */
        boolean hasData();

        /**
         * <code>optional bytes data = 2;</code>
         */
        com.google.protobuf.ByteString getData();
    }

    /**
     * Protobuf type {@code FILE_SECTION}
     */
    public static final class FILE_SECTION extends
            com.google.protobuf.GeneratedMessageLite implements
            // @@protoc_insertion_point(message_implements:FILE_SECTION)
            FILE_SECTIONOrBuilder {
        // Use FILE_SECTION.newBuilder() to construct.
        private FILE_SECTION(com.google.protobuf.GeneratedMessageLite.Builder builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private FILE_SECTION(boolean noInit) {
            this.unknownFields = com.google.protobuf.ByteString.EMPTY;
        }

        private static final FILE_SECTION defaultInstance;

        public static FILE_SECTION getDefaultInstance() {
            return defaultInstance;
        }

        public FILE_SECTION getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.ByteString unknownFields;

        private FILE_SECTION(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.ByteString.Output unknownFieldsOutput =
                    com.google.protobuf.ByteString.newOutput();
            com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
                    com.google.protobuf.CodedOutputStream.newInstance(
                            unknownFieldsOutput);
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            dataTransferedLen_ = input.readUInt32();
                            break;
                        }
                        case 18: {
                            bitField0_ |= 0x00000002;
                            data_ = input.readBytes();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                try {
                    unknownFieldsCodedOutput.flush();
                } catch (java.io.IOException e) {
                    // Should not happen
                } finally {
                    unknownFields = unknownFieldsOutput.toByteString();
                }
                makeExtensionsImmutable();
            }
        }

        public static com.google.protobuf.Parser<FILE_SECTION> PARSER =
                new com.google.protobuf.AbstractParser<FILE_SECTION>() {
                    public FILE_SECTION parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new FILE_SECTION(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<FILE_SECTION> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        public static final int DATA_TRANSFERED_LEN_FIELD_NUMBER = 1;
        private int dataTransferedLen_;

        /**
         * <code>optional uint32 data_transfered_len = 1;</code>
         */
        public boolean hasDataTransferedLen() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional uint32 data_transfered_len = 1;</code>
         */
        public int getDataTransferedLen() {
            return dataTransferedLen_;
        }

        public static final int DATA_FIELD_NUMBER = 2;
        private com.google.protobuf.ByteString data_;

        /**
         * <code>optional bytes data = 2;</code>
         */
        public boolean hasData() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>optional bytes data = 2;</code>
         */
        public com.google.protobuf.ByteString getData() {
            return data_;
        }

        private void initFields() {
            dataTransferedLen_ = 0;
            data_ = com.google.protobuf.ByteString.EMPTY;
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeUInt32(1, dataTransferedLen_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeBytes(2, data_);
            }
            output.writeRawBytes(unknownFields);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(1, dataTransferedLen_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, data_);
            }
            size += unknownFields.size();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static FILE_SECTION parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static FILE_SECTION parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static FILE_SECTION parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static FILE_SECTION parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static FILE_SECTION parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static FILE_SECTION parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static FILE_SECTION parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static FILE_SECTION parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static FILE_SECTION parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static FILE_SECTION parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(FILE_SECTION prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        /**
         * Protobuf type {@code FILE_SECTION}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        FILE_SECTION, Builder>
                implements
                // @@protoc_insertion_point(builder_implements:FILE_SECTION)
                FILE_SECTIONOrBuilder {
            // Construct using BtFile.FILE_SECTION.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                dataTransferedLen_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                data_ = com.google.protobuf.ByteString.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public FILE_SECTION getDefaultInstanceForType() {
                return FILE_SECTION.getDefaultInstance();
            }

            public FILE_SECTION build() {
                FILE_SECTION result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public FILE_SECTION buildPartial() {
                FILE_SECTION result = new FILE_SECTION(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.dataTransferedLen_ = dataTransferedLen_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.data_ = data_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(FILE_SECTION other) {
                if (other == FILE_SECTION.getDefaultInstance()) return this;
                if (other.hasDataTransferedLen()) {
                    setDataTransferedLen(other.getDataTransferedLen());
                }
                if (other.hasData()) {
                    setData(other.getData());
                }
                setUnknownFields(
                        getUnknownFields().concat(other.unknownFields));
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                FILE_SECTION parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (FILE_SECTION) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private int dataTransferedLen_;

            /**
             * <code>optional uint32 data_transfered_len = 1;</code>
             */
            public boolean hasDataTransferedLen() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional uint32 data_transfered_len = 1;</code>
             */
            public int getDataTransferedLen() {
                return dataTransferedLen_;
            }

            /**
             * <code>optional uint32 data_transfered_len = 1;</code>
             */
            public Builder setDataTransferedLen(int value) {
                bitField0_ |= 0x00000001;
                dataTransferedLen_ = value;

                return this;
            }

            /**
             * <code>optional uint32 data_transfered_len = 1;</code>
             */
            public Builder clearDataTransferedLen() {
                bitField0_ = (bitField0_ & ~0x00000001);
                dataTransferedLen_ = 0;

                return this;
            }

            private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;

            /**
             * <code>optional bytes data = 2;</code>
             */
            public boolean hasData() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional bytes data = 2;</code>
             */
            public com.google.protobuf.ByteString getData() {
                return data_;
            }

            /**
             * <code>optional bytes data = 2;</code>
             */
            public Builder setData(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                data_ = value;

                return this;
            }

            /**
             * <code>optional bytes data = 2;</code>
             */
            public Builder clearData() {
                bitField0_ = (bitField0_ & ~0x00000002);
                data_ = getDefaultInstance().getData();

                return this;
            }

            // @@protoc_insertion_point(builder_scope:FILE_SECTION)
        }

        static {
            defaultInstance = new FILE_SECTION(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:FILE_SECTION)
    }

    public interface bt_file_rspOrBuilder extends
            // @@protoc_insertion_point(interface_extends:bt_file_rsp)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>optional .FILE_NAME name = 1;</code>
         */
        boolean hasName();

        /**
         * <code>optional .FILE_NAME name = 1;</code>
         */
        FILE_NAME getName();

        /**
         * <code>optional .FILE_ERROR error_code = 2;</code>
         */
        boolean hasErrorCode();

        /**
         * <code>optional .FILE_ERROR error_code = 2;</code>
         */
        FILE_ERROR getErrorCode();

        /**
         * <code>optional uint32 stored_file_size = 3;</code>
         */
        boolean hasStoredFileSize();

        /**
         * <code>optional uint32 stored_file_size = 3;</code>
         */
        int getStoredFileSize();
    }

    /**
     * Protobuf type {@code bt_file_rsp}
     */
    public static final class bt_file_rsp extends
            com.google.protobuf.GeneratedMessageLite implements
            // @@protoc_insertion_point(message_implements:bt_file_rsp)
            bt_file_rspOrBuilder {
        // Use bt_file_rsp.newBuilder() to construct.
        private bt_file_rsp(com.google.protobuf.GeneratedMessageLite.Builder builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private bt_file_rsp(boolean noInit) {
            this.unknownFields = com.google.protobuf.ByteString.EMPTY;
        }

        private static final bt_file_rsp defaultInstance;

        public static bt_file_rsp getDefaultInstance() {
            return defaultInstance;
        }

        public bt_file_rsp getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.ByteString unknownFields;

        private bt_file_rsp(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.ByteString.Output unknownFieldsOutput =
                    com.google.protobuf.ByteString.newOutput();
            com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
                    com.google.protobuf.CodedOutputStream.newInstance(
                            unknownFieldsOutput);
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            int rawValue = input.readEnum();
                            FILE_NAME value = FILE_NAME.valueOf(rawValue);
                            if (value == null) {
                                unknownFieldsCodedOutput.writeRawVarint32(tag);
                                unknownFieldsCodedOutput.writeRawVarint32(rawValue);
                            } else {
                                bitField0_ |= 0x00000001;
                                name_ = value;
                            }
                            break;
                        }
                        case 16: {
                            int rawValue = input.readEnum();
                            FILE_ERROR value = FILE_ERROR.valueOf(rawValue);
                            if (value == null) {
                                unknownFieldsCodedOutput.writeRawVarint32(tag);
                                unknownFieldsCodedOutput.writeRawVarint32(rawValue);
                            } else {
                                bitField0_ |= 0x00000002;
                                errorCode_ = value;
                            }
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            storedFileSize_ = input.readUInt32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                try {
                    unknownFieldsCodedOutput.flush();
                } catch (java.io.IOException e) {
                    // Should not happen
                } finally {
                    unknownFields = unknownFieldsOutput.toByteString();
                }
                makeExtensionsImmutable();
            }
        }

        public static com.google.protobuf.Parser<bt_file_rsp> PARSER =
                new com.google.protobuf.AbstractParser<bt_file_rsp>() {
                    public bt_file_rsp parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new bt_file_rsp(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<bt_file_rsp> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        public static final int NAME_FIELD_NUMBER = 1;
        private FILE_NAME name_;

        /**
         * <code>optional .FILE_NAME name = 1;</code>
         */
        public boolean hasName() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional .FILE_NAME name = 1;</code>
         */
        public FILE_NAME getName() {
            return name_;
        }

        public static final int ERROR_CODE_FIELD_NUMBER = 2;
        private FILE_ERROR errorCode_;

        /**
         * <code>optional .FILE_ERROR error_code = 2;</code>
         */
        public boolean hasErrorCode() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>optional .FILE_ERROR error_code = 2;</code>
         */
        public FILE_ERROR getErrorCode() {
            return errorCode_;
        }

        public static final int STORED_FILE_SIZE_FIELD_NUMBER = 3;
        private int storedFileSize_;

        /**
         * <code>optional uint32 stored_file_size = 3;</code>
         */
        public boolean hasStoredFileSize() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <code>optional uint32 stored_file_size = 3;</code>
         */
        public int getStoredFileSize() {
            return storedFileSize_;
        }

        private void initFields() {
            name_ = FILE_NAME.FIRMWARE;
            errorCode_ = FILE_ERROR.SUCCESS;
            storedFileSize_ = 0;
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeEnum(1, name_.getNumber());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeEnum(2, errorCode_.getNumber());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeUInt32(3, storedFileSize_);
            }
            output.writeRawBytes(unknownFields);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(1, name_.getNumber());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(2, errorCode_.getNumber());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(3, storedFileSize_);
            }
            size += unknownFields.size();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static bt_file_rsp parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static bt_file_rsp parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static bt_file_rsp parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static bt_file_rsp parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static bt_file_rsp parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static bt_file_rsp parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static bt_file_rsp parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static bt_file_rsp parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static bt_file_rsp parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static bt_file_rsp parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(bt_file_rsp prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        /**
         * Protobuf type {@code bt_file_rsp}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        bt_file_rsp, Builder>
                implements
                // @@protoc_insertion_point(builder_implements:bt_file_rsp)
                bt_file_rspOrBuilder {
            // Construct using BtFile.bt_file_rsp.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                name_ = FILE_NAME.FIRMWARE;
                bitField0_ = (bitField0_ & ~0x00000001);
                errorCode_ = FILE_ERROR.SUCCESS;
                bitField0_ = (bitField0_ & ~0x00000002);
                storedFileSize_ = 0;
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public bt_file_rsp getDefaultInstanceForType() {
                return bt_file_rsp.getDefaultInstance();
            }

            public bt_file_rsp build() {
                bt_file_rsp result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public bt_file_rsp buildPartial() {
                bt_file_rsp result = new bt_file_rsp(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.name_ = name_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.errorCode_ = errorCode_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.storedFileSize_ = storedFileSize_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(bt_file_rsp other) {
                if (other == bt_file_rsp.getDefaultInstance()) return this;
                if (other.hasName()) {
                    setName(other.getName());
                }
                if (other.hasErrorCode()) {
                    setErrorCode(other.getErrorCode());
                }
                if (other.hasStoredFileSize()) {
                    setStoredFileSize(other.getStoredFileSize());
                }
                setUnknownFields(
                        getUnknownFields().concat(other.unknownFields));
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                bt_file_rsp parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (bt_file_rsp) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private FILE_NAME name_ = FILE_NAME.FIRMWARE;

            /**
             * <code>optional .FILE_NAME name = 1;</code>
             */
            public boolean hasName() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional .FILE_NAME name = 1;</code>
             */
            public FILE_NAME getName() {
                return name_;
            }

            /**
             * <code>optional .FILE_NAME name = 1;</code>
             */
            public Builder setName(FILE_NAME value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                name_ = value;

                return this;
            }

            /**
             * <code>optional .FILE_NAME name = 1;</code>
             */
            public Builder clearName() {
                bitField0_ = (bitField0_ & ~0x00000001);
                name_ = FILE_NAME.FIRMWARE;

                return this;
            }

            private FILE_ERROR errorCode_ = FILE_ERROR.SUCCESS;

            /**
             * <code>optional .FILE_ERROR error_code = 2;</code>
             */
            public boolean hasErrorCode() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional .FILE_ERROR error_code = 2;</code>
             */
            public FILE_ERROR getErrorCode() {
                return errorCode_;
            }

            /**
             * <code>optional .FILE_ERROR error_code = 2;</code>
             */
            public Builder setErrorCode(FILE_ERROR value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                errorCode_ = value;

                return this;
            }

            /**
             * <code>optional .FILE_ERROR error_code = 2;</code>
             */
            public Builder clearErrorCode() {
                bitField0_ = (bitField0_ & ~0x00000002);
                errorCode_ = FILE_ERROR.SUCCESS;

                return this;
            }

            private int storedFileSize_;

            /**
             * <code>optional uint32 stored_file_size = 3;</code>
             */
            public boolean hasStoredFileSize() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>optional uint32 stored_file_size = 3;</code>
             */
            public int getStoredFileSize() {
                return storedFileSize_;
            }

            /**
             * <code>optional uint32 stored_file_size = 3;</code>
             */
            public Builder setStoredFileSize(int value) {
                bitField0_ |= 0x00000004;
                storedFileSize_ = value;

                return this;
            }

            /**
             * <code>optional uint32 stored_file_size = 3;</code>
             */
            public Builder clearStoredFileSize() {
                bitField0_ = (bitField0_ & ~0x00000004);
                storedFileSize_ = 0;

                return this;
            }

            // @@protoc_insertion_point(builder_scope:bt_file_rsp)
        }

        static {
            defaultInstance = new bt_file_rsp(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:bt_file_rsp)
    }


    static {
    }

    // @@protoc_insertion_point(outer_class_scope)
}
