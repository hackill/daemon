package com.ble.lib.x2.proto;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bt_app_manual_sport.proto

public final class BtAppManualSport {
    private BtAppManualSport() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    /**
     * Protobuf enum {@code sport_status}
     */
    public enum sport_status
            implements com.google.protobuf.Internal.EnumLite {
        /**
         * <code>start = 1;</code>
         */
        start(0, 1),
        /**
         * <code>doing = 2;</code>
         */
        doing(1, 2),
        /**
         * <code>end = 3;</code>
         */
        end(2, 3),;

        /**
         * <code>start = 1;</code>
         */
        public static final int start_VALUE = 1;
        /**
         * <code>doing = 2;</code>
         */
        public static final int doing_VALUE = 2;
        /**
         * <code>end = 3;</code>
         */
        public static final int end_VALUE = 3;


        public final int getNumber() {
            return value;
        }

        public static sport_status valueOf(int value) {
            switch (value) {
                case 1:
                    return start;
                case 2:
                    return doing;
                case 3:
                    return end;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<sport_status>
        internalGetValueMap() {
            return internalValueMap;
        }

        private static com.google.protobuf.Internal.EnumLiteMap<sport_status>
                internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<sport_status>() {
                    public sport_status findValueByNumber(int number) {
                        return sport_status.valueOf(number);
                    }
                };

        private final int value;

        sport_status(int index, int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:sport_status)
    }

    /**
     * Protobuf enum {@code app_manual_sport_type}
     */
    public enum app_manual_sport_type
            implements com.google.protobuf.Internal.EnumLite {
        /**
         * <code>fitness = 15;</code>
         */
        fitness(0, 15),
        /**
         * <code>gps_run = 19;</code>
         */
        gps_run(1, 19),
        /**
         * <code>gps_cycle = 20;</code>
         */
        gps_cycle(2, 20),;

        /**
         * <code>fitness = 15;</code>
         */
        public static final int fitness_VALUE = 15;
        /**
         * <code>gps_run = 19;</code>
         */
        public static final int gps_run_VALUE = 19;
        /**
         * <code>gps_cycle = 20;</code>
         */
        public static final int gps_cycle_VALUE = 20;


        public final int getNumber() {
            return value;
        }

        public static app_manual_sport_type valueOf(int value) {
            switch (value) {
                case 15:
                    return fitness;
                case 19:
                    return gps_run;
                case 20:
                    return gps_cycle;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<app_manual_sport_type>
        internalGetValueMap() {
            return internalValueMap;
        }

        private static com.google.protobuf.Internal.EnumLiteMap<app_manual_sport_type>
                internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<app_manual_sport_type>() {
                    public app_manual_sport_type findValueByNumber(int number) {
                        return app_manual_sport_type.valueOf(number);
                    }
                };

        private final int value;

        app_manual_sport_type(int index, int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:app_manual_sport_type)
    }

    public interface bt_app_manual_sportOrBuilder extends
            // @@protoc_insertion_point(interface_extends:bt_app_manual_sport)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>optional .app_manual_sport_type type = 1;</code>
         */
        boolean hasType();

        /**
         * <code>optional .app_manual_sport_type type = 1;</code>
         */
        app_manual_sport_type getType();

        /**
         * <code>optional .sport_status status = 2;</code>
         */
        boolean hasStatus();

        /**
         * <code>optional .sport_status status = 2;</code>
         */
        sport_status getStatus();

        /**
         * <code>optional uint32 distance = 3;</code>
         * <p/>
         * <pre>
         * if GPS on, transfer this, meter
         * </pre>
         */
        boolean hasDistance();

        /**
         * <code>optional uint32 distance = 3;</code>
         * <p/>
         * <pre>
         * if GPS on, transfer this, meter
         * </pre>
         */
        int getDistance();

        /**
         * <code>optional int64 start_time = 4;</code>
         * <p/>
         * <pre>
         * timestamp, seconed, when start this sport
         * </pre>
         */
        boolean hasStartTime();

        /**
         * <code>optional int64 start_time = 4;</code>
         * <p/>
         * <pre>
         * timestamp, seconed, when start this sport
         * </pre>
         */
        long getStartTime();
    }

    /**
     * Protobuf type {@code bt_app_manual_sport}
     */
    public static final class bt_app_manual_sport extends
            com.google.protobuf.GeneratedMessageLite implements
            // @@protoc_insertion_point(message_implements:bt_app_manual_sport)
            bt_app_manual_sportOrBuilder {
        // Use bt_app_manual_sport.newBuilder() to construct.
        private bt_app_manual_sport(com.google.protobuf.GeneratedMessageLite.Builder builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private bt_app_manual_sport(boolean noInit) {
            this.unknownFields = com.google.protobuf.ByteString.EMPTY;
        }

        private static final bt_app_manual_sport defaultInstance;

        public static bt_app_manual_sport getDefaultInstance() {
            return defaultInstance;
        }

        public bt_app_manual_sport getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.ByteString unknownFields;

        private bt_app_manual_sport(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.ByteString.Output unknownFieldsOutput =
                    com.google.protobuf.ByteString.newOutput();
            com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
                    com.google.protobuf.CodedOutputStream.newInstance(
                            unknownFieldsOutput);
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            int rawValue = input.readEnum();
                            app_manual_sport_type value = app_manual_sport_type.valueOf(rawValue);
                            if (value == null) {
                                unknownFieldsCodedOutput.writeRawVarint32(tag);
                                unknownFieldsCodedOutput.writeRawVarint32(rawValue);
                            } else {
                                bitField0_ |= 0x00000001;
                                type_ = value;
                            }
                            break;
                        }
                        case 16: {
                            int rawValue = input.readEnum();
                            sport_status value = sport_status.valueOf(rawValue);
                            if (value == null) {
                                unknownFieldsCodedOutput.writeRawVarint32(tag);
                                unknownFieldsCodedOutput.writeRawVarint32(rawValue);
                            } else {
                                bitField0_ |= 0x00000002;
                                status_ = value;
                            }
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            distance_ = input.readUInt32();
                            break;
                        }
                        case 32: {
                            bitField0_ |= 0x00000008;
                            startTime_ = input.readInt64();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                try {
                    unknownFieldsCodedOutput.flush();
                } catch (java.io.IOException e) {
                    // Should not happen
                } finally {
                    unknownFields = unknownFieldsOutput.toByteString();
                }
                makeExtensionsImmutable();
            }
        }

        public static com.google.protobuf.Parser<bt_app_manual_sport> PARSER =
                new com.google.protobuf.AbstractParser<bt_app_manual_sport>() {
                    public bt_app_manual_sport parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new bt_app_manual_sport(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<bt_app_manual_sport> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        public static final int TYPE_FIELD_NUMBER = 1;
        private app_manual_sport_type type_;

        /**
         * <code>optional .app_manual_sport_type type = 1;</code>
         */
        public boolean hasType() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional .app_manual_sport_type type = 1;</code>
         */
        public app_manual_sport_type getType() {
            return type_;
        }

        public static final int STATUS_FIELD_NUMBER = 2;
        private sport_status status_;

        /**
         * <code>optional .sport_status status = 2;</code>
         */
        public boolean hasStatus() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>optional .sport_status status = 2;</code>
         */
        public sport_status getStatus() {
            return status_;
        }

        public static final int DISTANCE_FIELD_NUMBER = 3;
        private int distance_;

        /**
         * <code>optional uint32 distance = 3;</code>
         * <p/>
         * <pre>
         * if GPS on, transfer this, meter
         * </pre>
         */
        public boolean hasDistance() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <code>optional uint32 distance = 3;</code>
         * <p/>
         * <pre>
         * if GPS on, transfer this, meter
         * </pre>
         */
        public int getDistance() {
            return distance_;
        }

        public static final int START_TIME_FIELD_NUMBER = 4;
        private long startTime_;

        /**
         * <code>optional int64 start_time = 4;</code>
         * <p/>
         * <pre>
         * timestamp, seconed, when start this sport
         * </pre>
         */
        public boolean hasStartTime() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <code>optional int64 start_time = 4;</code>
         * <p/>
         * <pre>
         * timestamp, seconed, when start this sport
         * </pre>
         */
        public long getStartTime() {
            return startTime_;
        }

        private void initFields() {
            type_ = app_manual_sport_type.fitness;
            status_ = sport_status.start;
            distance_ = 0;
            startTime_ = 0L;
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeEnum(1, type_.getNumber());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeEnum(2, status_.getNumber());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeUInt32(3, distance_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeInt64(4, startTime_);
            }
            output.writeRawBytes(unknownFields);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(1, type_.getNumber());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(2, status_.getNumber());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(3, distance_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(4, startTime_);
            }
            size += unknownFields.size();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static bt_app_manual_sport parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static bt_app_manual_sport parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static bt_app_manual_sport parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static bt_app_manual_sport parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static bt_app_manual_sport parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static bt_app_manual_sport parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static bt_app_manual_sport parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static bt_app_manual_sport parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static bt_app_manual_sport parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static bt_app_manual_sport parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(bt_app_manual_sport prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        /**
         * Protobuf type {@code bt_app_manual_sport}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        bt_app_manual_sport, Builder>
                implements
                // @@protoc_insertion_point(builder_implements:bt_app_manual_sport)
                bt_app_manual_sportOrBuilder {
            // Construct using BtAppManualSport.bt_app_manual_sport.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                type_ = app_manual_sport_type.fitness;
                bitField0_ = (bitField0_ & ~0x00000001);
                status_ = sport_status.start;
                bitField0_ = (bitField0_ & ~0x00000002);
                distance_ = 0;
                bitField0_ = (bitField0_ & ~0x00000004);
                startTime_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000008);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public bt_app_manual_sport getDefaultInstanceForType() {
                return bt_app_manual_sport.getDefaultInstance();
            }

            public bt_app_manual_sport build() {
                bt_app_manual_sport result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public bt_app_manual_sport buildPartial() {
                bt_app_manual_sport result = new bt_app_manual_sport(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.type_ = type_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.status_ = status_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.distance_ = distance_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.startTime_ = startTime_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(bt_app_manual_sport other) {
                if (other == bt_app_manual_sport.getDefaultInstance()) return this;
                if (other.hasType()) {
                    setType(other.getType());
                }
                if (other.hasStatus()) {
                    setStatus(other.getStatus());
                }
                if (other.hasDistance()) {
                    setDistance(other.getDistance());
                }
                if (other.hasStartTime()) {
                    setStartTime(other.getStartTime());
                }
                setUnknownFields(
                        getUnknownFields().concat(other.unknownFields));
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                bt_app_manual_sport parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (bt_app_manual_sport) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private app_manual_sport_type type_ = app_manual_sport_type.fitness;

            /**
             * <code>optional .app_manual_sport_type type = 1;</code>
             */
            public boolean hasType() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional .app_manual_sport_type type = 1;</code>
             */
            public app_manual_sport_type getType() {
                return type_;
            }

            /**
             * <code>optional .app_manual_sport_type type = 1;</code>
             */
            public Builder setType(app_manual_sport_type value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                type_ = value;

                return this;
            }

            /**
             * <code>optional .app_manual_sport_type type = 1;</code>
             */
            public Builder clearType() {
                bitField0_ = (bitField0_ & ~0x00000001);
                type_ = app_manual_sport_type.fitness;

                return this;
            }

            private sport_status status_ = sport_status.start;

            /**
             * <code>optional .sport_status status = 2;</code>
             */
            public boolean hasStatus() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional .sport_status status = 2;</code>
             */
            public sport_status getStatus() {
                return status_;
            }

            /**
             * <code>optional .sport_status status = 2;</code>
             */
            public Builder setStatus(sport_status value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                status_ = value;

                return this;
            }

            /**
             * <code>optional .sport_status status = 2;</code>
             */
            public Builder clearStatus() {
                bitField0_ = (bitField0_ & ~0x00000002);
                status_ = sport_status.start;

                return this;
            }

            private int distance_;

            /**
             * <code>optional uint32 distance = 3;</code>
             * <p/>
             * <pre>
             * if GPS on, transfer this, meter
             * </pre>
             */
            public boolean hasDistance() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>optional uint32 distance = 3;</code>
             * <p/>
             * <pre>
             * if GPS on, transfer this, meter
             * </pre>
             */
            public int getDistance() {
                return distance_;
            }

            /**
             * <code>optional uint32 distance = 3;</code>
             * <p/>
             * <pre>
             * if GPS on, transfer this, meter
             * </pre>
             */
            public Builder setDistance(int value) {
                bitField0_ |= 0x00000004;
                distance_ = value;

                return this;
            }

            /**
             * <code>optional uint32 distance = 3;</code>
             * <p/>
             * <pre>
             * if GPS on, transfer this, meter
             * </pre>
             */
            public Builder clearDistance() {
                bitField0_ = (bitField0_ & ~0x00000004);
                distance_ = 0;

                return this;
            }

            private long startTime_;

            /**
             * <code>optional int64 start_time = 4;</code>
             * <p/>
             * <pre>
             * timestamp, seconed, when start this sport
             * </pre>
             */
            public boolean hasStartTime() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <code>optional int64 start_time = 4;</code>
             * <p/>
             * <pre>
             * timestamp, seconed, when start this sport
             * </pre>
             */
            public long getStartTime() {
                return startTime_;
            }

            /**
             * <code>optional int64 start_time = 4;</code>
             * <p/>
             * <pre>
             * timestamp, seconed, when start this sport
             * </pre>
             */
            public Builder setStartTime(long value) {
                bitField0_ |= 0x00000008;
                startTime_ = value;

                return this;
            }

            /**
             * <code>optional int64 start_time = 4;</code>
             * <p/>
             * <pre>
             * timestamp, seconed, when start this sport
             * </pre>
             */
            public Builder clearStartTime() {
                bitField0_ = (bitField0_ & ~0x00000008);
                startTime_ = 0L;

                return this;
            }

            // @@protoc_insertion_point(builder_scope:bt_app_manual_sport)
        }

        static {
            defaultInstance = new bt_app_manual_sport(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:bt_app_manual_sport)
    }


    static {
    }

    // @@protoc_insertion_point(outer_class_scope)
}
