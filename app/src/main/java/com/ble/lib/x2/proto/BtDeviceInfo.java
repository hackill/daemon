package com.ble.lib.x2.proto;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bt_device_info.proto

public final class BtDeviceInfo {
    private BtDeviceInfo() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public interface bt_device_infoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:bt_device_info)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>optional string firmware_version = 1;</code>
         * <p/>
         * <pre>
         * firmware version like "Ver 1.2.3"
         * </pre>
         */
        boolean hasFirmwareVersion();

        /**
         * <code>optional string firmware_version = 1;</code>
         * <p/>
         * <pre>
         * firmware version like "Ver 1.2.3"
         * </pre>
         */
        String getFirmwareVersion();

        /**
         * <code>optional string firmware_version = 1;</code>
         * <p/>
         * <pre>
         * firmware version like "Ver 1.2.3"
         * </pre>
         */
        com.google.protobuf.ByteString
        getFirmwareVersionBytes();

        /**
         * <code>optional string font_version = 2;</code>
         * <p/>
         * <pre>
         * font version like "Ver 1.2"
         * </pre>
         */
        boolean hasFontVersion();

        /**
         * <code>optional string font_version = 2;</code>
         * <p/>
         * <pre>
         * font version like "Ver 1.2"
         * </pre>
         */
        String getFontVersion();

        /**
         * <code>optional string font_version = 2;</code>
         * <p/>
         * <pre>
         * font version like "Ver 1.2"
         * </pre>
         */
        com.google.protobuf.ByteString
        getFontVersionBytes();

        /**
         * <code>optional string build_date = 3;</code>
         * <p/>
         * <pre>
         * </pre>
         */
        boolean hasBuildDate();

        /**
         * <code>optional string build_date = 3;</code>
         * <p/>
         * <pre>
         * </pre>
         */
        String getBuildDate();

        /**
         * <code>optional string build_date = 3;</code>
         * <p/>
         * <pre>
         * </pre>
         */
        com.google.protobuf.ByteString
        getBuildDateBytes();

        /**
         * <code>optional string build_time = 4;</code>
         * <p/>
         * <pre>
         *
         * </pre>
         */
        boolean hasBuildTime();

        /**
         * <code>optional string build_time = 4;</code>
         * <p/>
         * <pre>
         *
         * </pre>
         */
        String getBuildTime();

        /**
         * <code>optional string build_time = 4;</code>
         * <p/>
         * <pre>
         *
         * </pre>
         */
        com.google.protobuf.ByteString
        getBuildTimeBytes();

        /**
         * <code>optional uint32 battery = 5;</code>
         * <p/>
         * <pre>
         * 0~100
         * </pre>
         */
        boolean hasBattery();

        /**
         * <code>optional uint32 battery = 5;</code>
         * <p/>
         * <pre>
         * 0~100
         * </pre>
         */
        int getBattery();
    }

    /**
     * Protobuf type {@code bt_device_info}
     */
    public static final class bt_device_info extends
            com.google.protobuf.GeneratedMessageLite implements
            // @@protoc_insertion_point(message_implements:bt_device_info)
            bt_device_infoOrBuilder {
        // Use bt_device_info.newBuilder() to construct.
        private bt_device_info(com.google.protobuf.GeneratedMessageLite.Builder builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private bt_device_info(boolean noInit) {
            this.unknownFields = com.google.protobuf.ByteString.EMPTY;
        }

        private static final bt_device_info defaultInstance;

        public static bt_device_info getDefaultInstance() {
            return defaultInstance;
        }

        public bt_device_info getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.ByteString unknownFields;

        private bt_device_info(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.ByteString.Output unknownFieldsOutput =
                    com.google.protobuf.ByteString.newOutput();
            com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
                    com.google.protobuf.CodedOutputStream.newInstance(
                            unknownFieldsOutput);
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000001;
                            firmwareVersion_ = bs;
                            break;
                        }
                        case 18: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000002;
                            fontVersion_ = bs;
                            break;
                        }
                        case 26: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000004;
                            buildDate_ = bs;
                            break;
                        }
                        case 34: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000008;
                            buildTime_ = bs;
                            break;
                        }
                        case 40: {
                            bitField0_ |= 0x00000010;
                            battery_ = input.readUInt32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                try {
                    unknownFieldsCodedOutput.flush();
                } catch (java.io.IOException e) {
                    // Should not happen
                } finally {
                    unknownFields = unknownFieldsOutput.toByteString();
                }
                makeExtensionsImmutable();
            }
        }

        public static com.google.protobuf.Parser<bt_device_info> PARSER =
                new com.google.protobuf.AbstractParser<bt_device_info>() {
                    public bt_device_info parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new bt_device_info(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<bt_device_info> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        public static final int FIRMWARE_VERSION_FIELD_NUMBER = 1;
        private Object firmwareVersion_;

        /**
         * <code>optional string firmware_version = 1;</code>
         * <p/>
         * <pre>
         * firmware version like "Ver 1.2.3"
         * </pre>
         */
        public boolean hasFirmwareVersion() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional string firmware_version = 1;</code>
         * <p/>
         * <pre>
         * firmware version like "Ver 1.2.3"
         * </pre>
         */
        public String getFirmwareVersion() {
            Object ref = firmwareVersion_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    firmwareVersion_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string firmware_version = 1;</code>
         * <p/>
         * <pre>
         * firmware version like "Ver 1.2.3"
         * </pre>
         */
        public com.google.protobuf.ByteString
        getFirmwareVersionBytes() {
            Object ref = firmwareVersion_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                firmwareVersion_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int FONT_VERSION_FIELD_NUMBER = 2;
        private Object fontVersion_;

        /**
         * <code>optional string font_version = 2;</code>
         * <p/>
         * <pre>
         * font version like "Ver 1.2"
         * </pre>
         */
        public boolean hasFontVersion() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>optional string font_version = 2;</code>
         * <p/>
         * <pre>
         * font version like "Ver 1.2"
         * </pre>
         */
        public String getFontVersion() {
            Object ref = fontVersion_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    fontVersion_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string font_version = 2;</code>
         * <p/>
         * <pre>
         * font version like "Ver 1.2"
         * </pre>
         */
        public com.google.protobuf.ByteString
        getFontVersionBytes() {
            Object ref = fontVersion_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                fontVersion_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int BUILD_DATE_FIELD_NUMBER = 3;
        private Object buildDate_;

        /**
         * <code>optional string build_date = 3;</code>
         * <p/>
         * <pre>
         * </pre>
         */
        public boolean hasBuildDate() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <code>optional string build_date = 3;</code>
         * <p/>
         * <pre>
         * </pre>
         */
        public String getBuildDate() {
            Object ref = buildDate_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    buildDate_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string build_date = 3;</code>
         * <p/>
         * <pre>
         * </pre>
         */
        public com.google.protobuf.ByteString
        getBuildDateBytes() {
            Object ref = buildDate_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                buildDate_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int BUILD_TIME_FIELD_NUMBER = 4;
        private Object buildTime_;

        /**
         * <code>optional string build_time = 4;</code>
         * <p/>
         * <pre>
         *
         * </pre>
         */
        public boolean hasBuildTime() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <code>optional string build_time = 4;</code>
         * <p/>
         * <pre>
         *
         * </pre>
         */
        public String getBuildTime() {
            Object ref = buildTime_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    buildTime_ = s;
                }
                return s;
            }
        }

        /**
         * <code>optional string build_time = 4;</code>
         * <p/>
         * <pre>
         *
         * </pre>
         */
        public com.google.protobuf.ByteString
        getBuildTimeBytes() {
            Object ref = buildTime_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                buildTime_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int BATTERY_FIELD_NUMBER = 5;
        private int battery_;

        /**
         * <code>optional uint32 battery = 5;</code>
         * <p/>
         * <pre>
         * 0~100
         * </pre>
         */
        public boolean hasBattery() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <code>optional uint32 battery = 5;</code>
         * <p/>
         * <pre>
         * 0~100
         * </pre>
         */
        public int getBattery() {
            return battery_;
        }

        private void initFields() {
            firmwareVersion_ = "";
            fontVersion_ = "";
            buildDate_ = "";
            buildTime_ = "";
            battery_ = 0;
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBytes(1, getFirmwareVersionBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeBytes(2, getFontVersionBytes());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeBytes(3, getBuildDateBytes());
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeBytes(4, getBuildTimeBytes());
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeUInt32(5, battery_);
            }
            output.writeRawBytes(unknownFields);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, getFirmwareVersionBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, getFontVersionBytes());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(3, getBuildDateBytes());
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(4, getBuildTimeBytes());
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(5, battery_);
            }
            size += unknownFields.size();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static bt_device_info parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static bt_device_info parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static bt_device_info parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static bt_device_info parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static bt_device_info parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static bt_device_info parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static bt_device_info parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static bt_device_info parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static bt_device_info parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static bt_device_info parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(bt_device_info prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        /**
         * Protobuf type {@code bt_device_info}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        bt_device_info, Builder>
                implements
                // @@protoc_insertion_point(builder_implements:bt_device_info)
                bt_device_infoOrBuilder {
            // Construct using BtDeviceInfo.bt_device_info.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                firmwareVersion_ = "";
                bitField0_ = (bitField0_ & ~0x00000001);
                fontVersion_ = "";
                bitField0_ = (bitField0_ & ~0x00000002);
                buildDate_ = "";
                bitField0_ = (bitField0_ & ~0x00000004);
                buildTime_ = "";
                bitField0_ = (bitField0_ & ~0x00000008);
                battery_ = 0;
                bitField0_ = (bitField0_ & ~0x00000010);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public bt_device_info getDefaultInstanceForType() {
                return bt_device_info.getDefaultInstance();
            }

            public bt_device_info build() {
                bt_device_info result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public bt_device_info buildPartial() {
                bt_device_info result = new bt_device_info(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.firmwareVersion_ = firmwareVersion_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.fontVersion_ = fontVersion_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.buildDate_ = buildDate_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.buildTime_ = buildTime_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.battery_ = battery_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(bt_device_info other) {
                if (other == bt_device_info.getDefaultInstance()) return this;
                if (other.hasFirmwareVersion()) {
                    bitField0_ |= 0x00000001;
                    firmwareVersion_ = other.firmwareVersion_;

                }
                if (other.hasFontVersion()) {
                    bitField0_ |= 0x00000002;
                    fontVersion_ = other.fontVersion_;

                }
                if (other.hasBuildDate()) {
                    bitField0_ |= 0x00000004;
                    buildDate_ = other.buildDate_;

                }
                if (other.hasBuildTime()) {
                    bitField0_ |= 0x00000008;
                    buildTime_ = other.buildTime_;

                }
                if (other.hasBattery()) {
                    setBattery(other.getBattery());
                }
                setUnknownFields(
                        getUnknownFields().concat(other.unknownFields));
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                bt_device_info parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (bt_device_info) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private Object firmwareVersion_ = "";

            /**
             * <code>optional string firmware_version = 1;</code>
             * <p/>
             * <pre>
             * firmware version like "Ver 1.2.3"
             * </pre>
             */
            public boolean hasFirmwareVersion() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional string firmware_version = 1;</code>
             * <p/>
             * <pre>
             * firmware version like "Ver 1.2.3"
             * </pre>
             */
            public String getFirmwareVersion() {
                Object ref = firmwareVersion_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        firmwareVersion_ = s;
                    }
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string firmware_version = 1;</code>
             * <p/>
             * <pre>
             * firmware version like "Ver 1.2.3"
             * </pre>
             */
            public com.google.protobuf.ByteString
            getFirmwareVersionBytes() {
                Object ref = firmwareVersion_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    firmwareVersion_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string firmware_version = 1;</code>
             * <p/>
             * <pre>
             * firmware version like "Ver 1.2.3"
             * </pre>
             */
            public Builder setFirmwareVersion(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                firmwareVersion_ = value;

                return this;
            }

            /**
             * <code>optional string firmware_version = 1;</code>
             * <p/>
             * <pre>
             * firmware version like "Ver 1.2.3"
             * </pre>
             */
            public Builder clearFirmwareVersion() {
                bitField0_ = (bitField0_ & ~0x00000001);
                firmwareVersion_ = getDefaultInstance().getFirmwareVersion();

                return this;
            }

            /**
             * <code>optional string firmware_version = 1;</code>
             * <p/>
             * <pre>
             * firmware version like "Ver 1.2.3"
             * </pre>
             */
            public Builder setFirmwareVersionBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                firmwareVersion_ = value;

                return this;
            }

            private Object fontVersion_ = "";

            /**
             * <code>optional string font_version = 2;</code>
             * <p/>
             * <pre>
             * font version like "Ver 1.2"
             * </pre>
             */
            public boolean hasFontVersion() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional string font_version = 2;</code>
             * <p/>
             * <pre>
             * font version like "Ver 1.2"
             * </pre>
             */
            public String getFontVersion() {
                Object ref = fontVersion_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        fontVersion_ = s;
                    }
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string font_version = 2;</code>
             * <p/>
             * <pre>
             * font version like "Ver 1.2"
             * </pre>
             */
            public com.google.protobuf.ByteString
            getFontVersionBytes() {
                Object ref = fontVersion_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    fontVersion_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string font_version = 2;</code>
             * <p/>
             * <pre>
             * font version like "Ver 1.2"
             * </pre>
             */
            public Builder setFontVersion(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                fontVersion_ = value;

                return this;
            }

            /**
             * <code>optional string font_version = 2;</code>
             * <p/>
             * <pre>
             * font version like "Ver 1.2"
             * </pre>
             */
            public Builder clearFontVersion() {
                bitField0_ = (bitField0_ & ~0x00000002);
                fontVersion_ = getDefaultInstance().getFontVersion();

                return this;
            }

            /**
             * <code>optional string font_version = 2;</code>
             * <p/>
             * <pre>
             * font version like "Ver 1.2"
             * </pre>
             */
            public Builder setFontVersionBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                fontVersion_ = value;

                return this;
            }

            private Object buildDate_ = "";

            /**
             * <code>optional string build_date = 3;</code>
             * <p/>
             * <pre>
             * </pre>
             */
            public boolean hasBuildDate() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>optional string build_date = 3;</code>
             * <p/>
             * <pre>
             * </pre>
             */
            public String getBuildDate() {
                Object ref = buildDate_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        buildDate_ = s;
                    }
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string build_date = 3;</code>
             * <p/>
             * <pre>
             * </pre>
             */
            public com.google.protobuf.ByteString
            getBuildDateBytes() {
                Object ref = buildDate_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    buildDate_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string build_date = 3;</code>
             * <p/>
             * <pre>
             * </pre>
             */
            public Builder setBuildDate(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                buildDate_ = value;

                return this;
            }

            /**
             * <code>optional string build_date = 3;</code>
             * <p/>
             * <pre>
             * </pre>
             */
            public Builder clearBuildDate() {
                bitField0_ = (bitField0_ & ~0x00000004);
                buildDate_ = getDefaultInstance().getBuildDate();

                return this;
            }

            /**
             * <code>optional string build_date = 3;</code>
             * <p/>
             * <pre>
             * </pre>
             */
            public Builder setBuildDateBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                buildDate_ = value;

                return this;
            }

            private Object buildTime_ = "";

            /**
             * <code>optional string build_time = 4;</code>
             * <p/>
             * <pre>
             *
             * </pre>
             */
            public boolean hasBuildTime() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <code>optional string build_time = 4;</code>
             * <p/>
             * <pre>
             *
             * </pre>
             */
            public String getBuildTime() {
                Object ref = buildTime_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        buildTime_ = s;
                    }
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>optional string build_time = 4;</code>
             * <p/>
             * <pre>
             *
             * </pre>
             */
            public com.google.protobuf.ByteString
            getBuildTimeBytes() {
                Object ref = buildTime_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    buildTime_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>optional string build_time = 4;</code>
             * <p/>
             * <pre>
             *
             * </pre>
             */
            public Builder setBuildTime(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000008;
                buildTime_ = value;

                return this;
            }

            /**
             * <code>optional string build_time = 4;</code>
             * <p/>
             * <pre>
             *
             * </pre>
             */
            public Builder clearBuildTime() {
                bitField0_ = (bitField0_ & ~0x00000008);
                buildTime_ = getDefaultInstance().getBuildTime();

                return this;
            }

            /**
             * <code>optional string build_time = 4;</code>
             * <p/>
             * <pre>
             *
             * </pre>
             */
            public Builder setBuildTimeBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000008;
                buildTime_ = value;

                return this;
            }

            private int battery_;

            /**
             * <code>optional uint32 battery = 5;</code>
             * <p/>
             * <pre>
             * 0~100
             * </pre>
             */
            public boolean hasBattery() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <code>optional uint32 battery = 5;</code>
             * <p/>
             * <pre>
             * 0~100
             * </pre>
             */
            public int getBattery() {
                return battery_;
            }

            /**
             * <code>optional uint32 battery = 5;</code>
             * <p/>
             * <pre>
             * 0~100
             * </pre>
             */
            public Builder setBattery(int value) {
                bitField0_ |= 0x00000010;
                battery_ = value;

                return this;
            }

            /**
             * <code>optional uint32 battery = 5;</code>
             * <p/>
             * <pre>
             * 0~100
             * </pre>
             */
            public Builder clearBattery() {
                bitField0_ = (bitField0_ & ~0x00000010);
                battery_ = 0;

                return this;
            }

            // @@protoc_insertion_point(builder_scope:bt_device_info)
        }

        static {
            defaultInstance = new bt_device_info(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:bt_device_info)
    }


    static {
    }

    // @@protoc_insertion_point(outer_class_scope)
}
