package com.ble.lib.x2.proto;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bt_alarm.proto

public final class BtAlarm {
    private BtAlarm() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public interface bt_alarmOrBuilder extends
            // @@protoc_insertion_point(interface_extends:bt_alarm)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>optional uint32 alarmid = 1;</code>
         * <p/>
         * <pre>
         * 0~4, total 5
         * </pre>
         */
        boolean hasAlarmid();

        /**
         * <code>optional uint32 alarmid = 1;</code>
         * <p/>
         * <pre>
         * 0~4, total 5
         * </pre>
         */
        int getAlarmid();

        /**
         * <code>optional bool on = 2;</code>
         * <p/>
         * <pre>
         * true is turn on,false is turn off
         * </pre>
         */
        boolean hasOn();

        /**
         * <code>optional bool on = 2;</code>
         * <p/>
         * <pre>
         * true is turn on,false is turn off
         * </pre>
         */
        boolean getOn();

        /**
         * <code>optional bool lazyMode = 3;</code>
         * <p/>
         * <pre>
         * true is lazy mode turn on,false is turn off
         * </pre>
         */
        boolean hasLazyMode();

        /**
         * <code>optional bool lazyMode = 3;</code>
         * <p/>
         * <pre>
         * true is lazy mode turn on,false is turn off
         * </pre>
         */
        boolean getLazyMode();

        /**
         * <code>optional uint32 hour = 4;</code>
         * <p/>
         * <pre>
         * 0~23
         * </pre>
         */
        boolean hasHour();

        /**
         * <code>optional uint32 hour = 4;</code>
         * <p/>
         * <pre>
         * 0~23
         * </pre>
         */
        int getHour();

        /**
         * <code>optional uint32 min = 5;</code>
         * <p/>
         * <pre>
         * 0~59
         * </pre>
         */
        boolean hasMin();

        /**
         * <code>optional uint32 min = 5;</code>
         * <p/>
         * <pre>
         * 0~59
         * </pre>
         */
        int getMin();

        /**
         * <code>repeated bool dayOn = 6;</code>
         * <p/>
         * <pre>
         * repeated=7, Sun to Sat, true is on , false if off
         * </pre>
         */
        java.util.List<Boolean> getDayOnList();

        /**
         * <code>repeated bool dayOn = 6;</code>
         * <p/>
         * <pre>
         * repeated=7, Sun to Sat, true is on , false if off
         * </pre>
         */
        int getDayOnCount();

        /**
         * <code>repeated bool dayOn = 6;</code>
         * <p/>
         * <pre>
         * repeated=7, Sun to Sat, true is on , false if off
         * </pre>
         */
        boolean getDayOn(int index);

        /**
         * <code>optional uint32 lstime = 7;</code>
         * <p/>
         * <pre>
         * light sleep time,seconed
         * </pre>
         */
        boolean hasLstime();

        /**
         * <code>optional uint32 lstime = 7;</code>
         * <p/>
         * <pre>
         * light sleep time,seconed
         * </pre>
         */
        int getLstime();

        /**
         * <code>optional bytes info = 8;</code>
         * <p/>
         * <pre>
         * info show on watch when this b3_setting_alarm work,max_size:24
         * </pre>
         */
        boolean hasInfo();

        /**
         * <code>optional bytes info = 8;</code>
         * <p/>
         * <pre>
         * info show on watch when this b3_setting_alarm work,max_size:24
         * </pre>
         */
        com.google.protobuf.ByteString getInfo();

        /**
         * <code>optional uint32 action = 9;</code>
         * <p/>
         * <pre>
         * 0 is add,1 is delete
         * </pre>
         */
        boolean hasAction();

        /**
         * <code>optional uint32 action = 9;</code>
         * <p/>
         * <pre>
         * 0 is add,1 is delete
         * </pre>
         */
        int getAction();
    }

    /**
     * Protobuf type {@code bt_alarm}
     */
    public static final class bt_alarm extends
            com.google.protobuf.GeneratedMessageLite implements
            // @@protoc_insertion_point(message_implements:bt_alarm)
            bt_alarmOrBuilder {
        // Use bt_alarm.newBuilder() to construct.
        private bt_alarm(com.google.protobuf.GeneratedMessageLite.Builder builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private bt_alarm(boolean noInit) {
            this.unknownFields = com.google.protobuf.ByteString.EMPTY;
        }

        private static final bt_alarm defaultInstance;

        public static bt_alarm getDefaultInstance() {
            return defaultInstance;
        }

        public bt_alarm getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.ByteString unknownFields;

        private bt_alarm(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.ByteString.Output unknownFieldsOutput =
                    com.google.protobuf.ByteString.newOutput();
            com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
                    com.google.protobuf.CodedOutputStream.newInstance(
                            unknownFieldsOutput);
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            alarmid_ = input.readUInt32();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            on_ = input.readBool();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            lazyMode_ = input.readBool();
                            break;
                        }
                        case 32: {
                            bitField0_ |= 0x00000008;
                            hour_ = input.readUInt32();
                            break;
                        }
                        case 40: {
                            bitField0_ |= 0x00000010;
                            min_ = input.readUInt32();
                            break;
                        }
                        case 48: {
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                                dayOn_ = new java.util.ArrayList<Boolean>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            dayOn_.add(input.readBool());
                            break;
                        }
                        case 50: {
                            int length = input.readRawVarint32();
                            int limit = input.pushLimit(length);
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                                dayOn_ = new java.util.ArrayList<Boolean>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            while (input.getBytesUntilLimit() > 0) {
                                dayOn_.add(input.readBool());
                            }
                            input.popLimit(limit);
                            break;
                        }
                        case 56: {
                            bitField0_ |= 0x00000020;
                            lstime_ = input.readUInt32();
                            break;
                        }
                        case 66: {
                            bitField0_ |= 0x00000040;
                            info_ = input.readBytes();
                            break;
                        }
                        case 72: {
                            bitField0_ |= 0x00000080;
                            action_ = input.readUInt32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                    dayOn_ = java.util.Collections.unmodifiableList(dayOn_);
                }
                try {
                    unknownFieldsCodedOutput.flush();
                } catch (java.io.IOException e) {
                    // Should not happen
                } finally {
                    unknownFields = unknownFieldsOutput.toByteString();
                }
                makeExtensionsImmutable();
            }
        }

        public static com.google.protobuf.Parser<bt_alarm> PARSER =
                new com.google.protobuf.AbstractParser<bt_alarm>() {
                    public bt_alarm parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new bt_alarm(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<bt_alarm> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        public static final int ALARMID_FIELD_NUMBER = 1;
        private int alarmid_;

        /**
         * <code>optional uint32 alarmid = 1;</code>
         * <p/>
         * <pre>
         * 0~4, total 5
         * </pre>
         */
        public boolean hasAlarmid() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional uint32 alarmid = 1;</code>
         * <p/>
         * <pre>
         * 0~4, total 5
         * </pre>
         */
        public int getAlarmid() {
            return alarmid_;
        }

        public static final int ON_FIELD_NUMBER = 2;
        private boolean on_;

        /**
         * <code>optional bool on = 2;</code>
         * <p/>
         * <pre>
         * true is turn on,false is turn off
         * </pre>
         */
        public boolean hasOn() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>optional bool on = 2;</code>
         * <p/>
         * <pre>
         * true is turn on,false is turn off
         * </pre>
         */
        public boolean getOn() {
            return on_;
        }

        public static final int LAZYMODE_FIELD_NUMBER = 3;
        private boolean lazyMode_;

        /**
         * <code>optional bool lazyMode = 3;</code>
         * <p/>
         * <pre>
         * true is lazy mode turn on,false is turn off
         * </pre>
         */
        public boolean hasLazyMode() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <code>optional bool lazyMode = 3;</code>
         * <p/>
         * <pre>
         * true is lazy mode turn on,false is turn off
         * </pre>
         */
        public boolean getLazyMode() {
            return lazyMode_;
        }

        public static final int HOUR_FIELD_NUMBER = 4;
        private int hour_;

        /**
         * <code>optional uint32 hour = 4;</code>
         * <p/>
         * <pre>
         * 0~23
         * </pre>
         */
        public boolean hasHour() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <code>optional uint32 hour = 4;</code>
         * <p/>
         * <pre>
         * 0~23
         * </pre>
         */
        public int getHour() {
            return hour_;
        }

        public static final int MIN_FIELD_NUMBER = 5;
        private int min_;

        /**
         * <code>optional uint32 min = 5;</code>
         * <p/>
         * <pre>
         * 0~59
         * </pre>
         */
        public boolean hasMin() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <code>optional uint32 min = 5;</code>
         * <p/>
         * <pre>
         * 0~59
         * </pre>
         */
        public int getMin() {
            return min_;
        }

        public static final int DAYON_FIELD_NUMBER = 6;
        private java.util.List<Boolean> dayOn_;

        /**
         * <code>repeated bool dayOn = 6;</code>
         * <p/>
         * <pre>
         * repeated=7, Sun to Sat, true is on , false if off
         * </pre>
         */
        public java.util.List<Boolean>
        getDayOnList() {
            return dayOn_;
        }

        /**
         * <code>repeated bool dayOn = 6;</code>
         * <p/>
         * <pre>
         * repeated=7, Sun to Sat, true is on , false if off
         * </pre>
         */
        public int getDayOnCount() {
            return dayOn_.size();
        }

        /**
         * <code>repeated bool dayOn = 6;</code>
         * <p/>
         * <pre>
         * repeated=7, Sun to Sat, true is on , false if off
         * </pre>
         */
        public boolean getDayOn(int index) {
            return dayOn_.get(index);
        }

        public static final int LSTIME_FIELD_NUMBER = 7;
        private int lstime_;

        /**
         * <code>optional uint32 lstime = 7;</code>
         * <p/>
         * <pre>
         * light sleep time,seconed
         * </pre>
         */
        public boolean hasLstime() {
            return ((bitField0_ & 0x00000020) == 0x00000020);
        }

        /**
         * <code>optional uint32 lstime = 7;</code>
         * <p/>
         * <pre>
         * light sleep time,seconed
         * </pre>
         */
        public int getLstime() {
            return lstime_;
        }

        public static final int INFO_FIELD_NUMBER = 8;
        private com.google.protobuf.ByteString info_;

        /**
         * <code>optional bytes info = 8;</code>
         * <p/>
         * <pre>
         * info show on watch when this b3_setting_alarm work,max_size:24
         * </pre>
         */
        public boolean hasInfo() {
            return ((bitField0_ & 0x00000040) == 0x00000040);
        }

        /**
         * <code>optional bytes info = 8;</code>
         * <p/>
         * <pre>
         * info show on watch when this b3_setting_alarm work,max_size:24
         * </pre>
         */
        public com.google.protobuf.ByteString getInfo() {
            return info_;
        }

        public static final int ACTION_FIELD_NUMBER = 9;
        private int action_;

        /**
         * <code>optional uint32 action = 9;</code>
         * <p/>
         * <pre>
         * 0 is add,1 is delete
         * </pre>
         */
        public boolean hasAction() {
            return ((bitField0_ & 0x00000080) == 0x00000080);
        }

        /**
         * <code>optional uint32 action = 9;</code>
         * <p/>
         * <pre>
         * 0 is add,1 is delete
         * </pre>
         */
        public int getAction() {
            return action_;
        }

        private void initFields() {
            alarmid_ = 0;
            on_ = false;
            lazyMode_ = false;
            hour_ = 0;
            min_ = 0;
            dayOn_ = java.util.Collections.emptyList();
            lstime_ = 0;
            info_ = com.google.protobuf.ByteString.EMPTY;
            action_ = 0;
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeUInt32(1, alarmid_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeBool(2, on_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeBool(3, lazyMode_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeUInt32(4, hour_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeUInt32(5, min_);
            }
            for (int i = 0; i < dayOn_.size(); i++) {
                output.writeBool(6, dayOn_.get(i));
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                output.writeUInt32(7, lstime_);
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                output.writeBytes(8, info_);
            }
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
                output.writeUInt32(9, action_);
            }
            output.writeRawBytes(unknownFields);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(1, alarmid_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(2, on_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(3, lazyMode_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(4, hour_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(5, min_);
            }
            {
                int dataSize = 0;
                dataSize = getDayOnList().size();
                size += dataSize;
                size += getDayOnList().size();
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(7, lstime_);
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(8, info_);
            }
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(9, action_);
            }
            size += unknownFields.size();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static bt_alarm parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static bt_alarm parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static bt_alarm parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static bt_alarm parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static bt_alarm parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static bt_alarm parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static bt_alarm parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static bt_alarm parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static bt_alarm parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static bt_alarm parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(bt_alarm prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        /**
         * Protobuf type {@code bt_alarm}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        bt_alarm, Builder>
                implements
                // @@protoc_insertion_point(builder_implements:bt_alarm)
                bt_alarmOrBuilder {
            // Construct using BtAlarm.bt_alarm.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                alarmid_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                on_ = false;
                bitField0_ = (bitField0_ & ~0x00000002);
                lazyMode_ = false;
                bitField0_ = (bitField0_ & ~0x00000004);
                hour_ = 0;
                bitField0_ = (bitField0_ & ~0x00000008);
                min_ = 0;
                bitField0_ = (bitField0_ & ~0x00000010);
                dayOn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                lstime_ = 0;
                bitField0_ = (bitField0_ & ~0x00000040);
                info_ = com.google.protobuf.ByteString.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000080);
                action_ = 0;
                bitField0_ = (bitField0_ & ~0x00000100);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public bt_alarm getDefaultInstanceForType() {
                return bt_alarm.getDefaultInstance();
            }

            public bt_alarm build() {
                bt_alarm result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public bt_alarm buildPartial() {
                bt_alarm result = new bt_alarm(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.alarmid_ = alarmid_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.on_ = on_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.lazyMode_ = lazyMode_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.hour_ = hour_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.min_ = min_;
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                    dayOn_ = java.util.Collections.unmodifiableList(dayOn_);
                    bitField0_ = (bitField0_ & ~0x00000020);
                }
                result.dayOn_ = dayOn_;
                if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
                    to_bitField0_ |= 0x00000020;
                }
                result.lstime_ = lstime_;
                if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
                    to_bitField0_ |= 0x00000040;
                }
                result.info_ = info_;
                if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
                    to_bitField0_ |= 0x00000080;
                }
                result.action_ = action_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(bt_alarm other) {
                if (other == bt_alarm.getDefaultInstance()) return this;
                if (other.hasAlarmid()) {
                    setAlarmid(other.getAlarmid());
                }
                if (other.hasOn()) {
                    setOn(other.getOn());
                }
                if (other.hasLazyMode()) {
                    setLazyMode(other.getLazyMode());
                }
                if (other.hasHour()) {
                    setHour(other.getHour());
                }
                if (other.hasMin()) {
                    setMin(other.getMin());
                }
                if (!other.dayOn_.isEmpty()) {
                    if (dayOn_.isEmpty()) {
                        dayOn_ = other.dayOn_;
                        bitField0_ = (bitField0_ & ~0x00000020);
                    } else {
                        ensureDayOnIsMutable();
                        dayOn_.addAll(other.dayOn_);
                    }

                }
                if (other.hasLstime()) {
                    setLstime(other.getLstime());
                }
                if (other.hasInfo()) {
                    setInfo(other.getInfo());
                }
                if (other.hasAction()) {
                    setAction(other.getAction());
                }
                setUnknownFields(
                        getUnknownFields().concat(other.unknownFields));
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                bt_alarm parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (bt_alarm) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private int alarmid_;

            /**
             * <code>optional uint32 alarmid = 1;</code>
             * <p/>
             * <pre>
             * 0~4, total 5
             * </pre>
             */
            public boolean hasAlarmid() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional uint32 alarmid = 1;</code>
             * <p/>
             * <pre>
             * 0~4, total 5
             * </pre>
             */
            public int getAlarmid() {
                return alarmid_;
            }

            /**
             * <code>optional uint32 alarmid = 1;</code>
             * <p/>
             * <pre>
             * 0~4, total 5
             * </pre>
             */
            public Builder setAlarmid(int value) {
                bitField0_ |= 0x00000001;
                alarmid_ = value;

                return this;
            }

            /**
             * <code>optional uint32 alarmid = 1;</code>
             * <p/>
             * <pre>
             * 0~4, total 5
             * </pre>
             */
            public Builder clearAlarmid() {
                bitField0_ = (bitField0_ & ~0x00000001);
                alarmid_ = 0;

                return this;
            }

            private boolean on_;

            /**
             * <code>optional bool on = 2;</code>
             * <p/>
             * <pre>
             * true is turn on,false is turn off
             * </pre>
             */
            public boolean hasOn() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional bool on = 2;</code>
             * <p/>
             * <pre>
             * true is turn on,false is turn off
             * </pre>
             */
            public boolean getOn() {
                return on_;
            }

            /**
             * <code>optional bool on = 2;</code>
             * <p/>
             * <pre>
             * true is turn on,false is turn off
             * </pre>
             */
            public Builder setOn(boolean value) {
                bitField0_ |= 0x00000002;
                on_ = value;

                return this;
            }

            /**
             * <code>optional bool on = 2;</code>
             * <p/>
             * <pre>
             * true is turn on,false is turn off
             * </pre>
             */
            public Builder clearOn() {
                bitField0_ = (bitField0_ & ~0x00000002);
                on_ = false;

                return this;
            }

            private boolean lazyMode_;

            /**
             * <code>optional bool lazyMode = 3;</code>
             * <p/>
             * <pre>
             * true is lazy mode turn on,false is turn off
             * </pre>
             */
            public boolean hasLazyMode() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>optional bool lazyMode = 3;</code>
             * <p/>
             * <pre>
             * true is lazy mode turn on,false is turn off
             * </pre>
             */
            public boolean getLazyMode() {
                return lazyMode_;
            }

            /**
             * <code>optional bool lazyMode = 3;</code>
             * <p/>
             * <pre>
             * true is lazy mode turn on,false is turn off
             * </pre>
             */
            public Builder setLazyMode(boolean value) {
                bitField0_ |= 0x00000004;
                lazyMode_ = value;

                return this;
            }

            /**
             * <code>optional bool lazyMode = 3;</code>
             * <p/>
             * <pre>
             * true is lazy mode turn on,false is turn off
             * </pre>
             */
            public Builder clearLazyMode() {
                bitField0_ = (bitField0_ & ~0x00000004);
                lazyMode_ = false;

                return this;
            }

            private int hour_;

            /**
             * <code>optional uint32 hour = 4;</code>
             * <p/>
             * <pre>
             * 0~23
             * </pre>
             */
            public boolean hasHour() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <code>optional uint32 hour = 4;</code>
             * <p/>
             * <pre>
             * 0~23
             * </pre>
             */
            public int getHour() {
                return hour_;
            }

            /**
             * <code>optional uint32 hour = 4;</code>
             * <p/>
             * <pre>
             * 0~23
             * </pre>
             */
            public Builder setHour(int value) {
                bitField0_ |= 0x00000008;
                hour_ = value;

                return this;
            }

            /**
             * <code>optional uint32 hour = 4;</code>
             * <p/>
             * <pre>
             * 0~23
             * </pre>
             */
            public Builder clearHour() {
                bitField0_ = (bitField0_ & ~0x00000008);
                hour_ = 0;

                return this;
            }

            private int min_;

            /**
             * <code>optional uint32 min = 5;</code>
             * <p/>
             * <pre>
             * 0~59
             * </pre>
             */
            public boolean hasMin() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <code>optional uint32 min = 5;</code>
             * <p/>
             * <pre>
             * 0~59
             * </pre>
             */
            public int getMin() {
                return min_;
            }

            /**
             * <code>optional uint32 min = 5;</code>
             * <p/>
             * <pre>
             * 0~59
             * </pre>
             */
            public Builder setMin(int value) {
                bitField0_ |= 0x00000010;
                min_ = value;

                return this;
            }

            /**
             * <code>optional uint32 min = 5;</code>
             * <p/>
             * <pre>
             * 0~59
             * </pre>
             */
            public Builder clearMin() {
                bitField0_ = (bitField0_ & ~0x00000010);
                min_ = 0;

                return this;
            }

            private java.util.List<Boolean> dayOn_ = java.util.Collections.emptyList();

            private void ensureDayOnIsMutable() {
                if (!((bitField0_ & 0x00000020) == 0x00000020)) {
                    dayOn_ = new java.util.ArrayList<Boolean>(dayOn_);
                    bitField0_ |= 0x00000020;
                }
            }

            /**
             * <code>repeated bool dayOn = 6;</code>
             * <p/>
             * <pre>
             * repeated=7, Sun to Sat, true is on , false if off
             * </pre>
             */
            public java.util.List<Boolean>
            getDayOnList() {
                return java.util.Collections.unmodifiableList(dayOn_);
            }

            /**
             * <code>repeated bool dayOn = 6;</code>
             * <p/>
             * <pre>
             * repeated=7, Sun to Sat, true is on , false if off
             * </pre>
             */
            public int getDayOnCount() {
                return dayOn_.size();
            }

            /**
             * <code>repeated bool dayOn = 6;</code>
             * <p/>
             * <pre>
             * repeated=7, Sun to Sat, true is on , false if off
             * </pre>
             */
            public boolean getDayOn(int index) {
                return dayOn_.get(index);
            }

            /**
             * <code>repeated bool dayOn = 6;</code>
             * <p/>
             * <pre>
             * repeated=7, Sun to Sat, true is on , false if off
             * </pre>
             */
            public Builder setDayOn(
                    int index, boolean value) {
                ensureDayOnIsMutable();
                dayOn_.set(index, value);

                return this;
            }

            /**
             * <code>repeated bool dayOn = 6;</code>
             * <p/>
             * <pre>
             * repeated=7, Sun to Sat, true is on , false if off
             * </pre>
             */
            public Builder addDayOn(boolean value) {
                ensureDayOnIsMutable();
                dayOn_.add(value);

                return this;
            }

            /**
             * <code>repeated bool dayOn = 6;</code>
             * <p/>
             * <pre>
             * repeated=7, Sun to Sat, true is on , false if off
             * </pre>
             */
            public Builder addAllDayOn(
                    Iterable<? extends Boolean> values) {
                ensureDayOnIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, dayOn_);

                return this;
            }

            /**
             * <code>repeated bool dayOn = 6;</code>
             * <p/>
             * <pre>
             * repeated=7, Sun to Sat, true is on , false if off
             * </pre>
             */
            public Builder clearDayOn() {
                dayOn_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);

                return this;
            }

            private int lstime_;

            /**
             * <code>optional uint32 lstime = 7;</code>
             * <p/>
             * <pre>
             * light sleep time,seconed
             * </pre>
             */
            public boolean hasLstime() {
                return ((bitField0_ & 0x00000040) == 0x00000040);
            }

            /**
             * <code>optional uint32 lstime = 7;</code>
             * <p/>
             * <pre>
             * light sleep time,seconed
             * </pre>
             */
            public int getLstime() {
                return lstime_;
            }

            /**
             * <code>optional uint32 lstime = 7;</code>
             * <p/>
             * <pre>
             * light sleep time,seconed
             * </pre>
             */
            public Builder setLstime(int value) {
                bitField0_ |= 0x00000040;
                lstime_ = value;

                return this;
            }

            /**
             * <code>optional uint32 lstime = 7;</code>
             * <p/>
             * <pre>
             * light sleep time,seconed
             * </pre>
             */
            public Builder clearLstime() {
                bitField0_ = (bitField0_ & ~0x00000040);
                lstime_ = 0;

                return this;
            }

            private com.google.protobuf.ByteString info_ = com.google.protobuf.ByteString.EMPTY;

            /**
             * <code>optional bytes info = 8;</code>
             * <p/>
             * <pre>
             * info show on watch when this b3_setting_alarm work,max_size:24
             * </pre>
             */
            public boolean hasInfo() {
                return ((bitField0_ & 0x00000080) == 0x00000080);
            }

            /**
             * <code>optional bytes info = 8;</code>
             * <p/>
             * <pre>
             * info show on watch when this b3_setting_alarm work,max_size:24
             * </pre>
             */
            public com.google.protobuf.ByteString getInfo() {
                return info_;
            }

            /**
             * <code>optional bytes info = 8;</code>
             * <p/>
             * <pre>
             * info show on watch when this b3_setting_alarm work,max_size:24
             * </pre>
             */
            public Builder setInfo(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000080;
                info_ = value;

                return this;
            }

            /**
             * <code>optional bytes info = 8;</code>
             * <p/>
             * <pre>
             * info show on watch when this b3_setting_alarm work,max_size:24
             * </pre>
             */
            public Builder clearInfo() {
                bitField0_ = (bitField0_ & ~0x00000080);
                info_ = getDefaultInstance().getInfo();

                return this;
            }

            private int action_;

            /**
             * <code>optional uint32 action = 9;</code>
             * <p/>
             * <pre>
             * 0 is add,1 is delete
             * </pre>
             */
            public boolean hasAction() {
                return ((bitField0_ & 0x00000100) == 0x00000100);
            }

            /**
             * <code>optional uint32 action = 9;</code>
             * <p/>
             * <pre>
             * 0 is add,1 is delete
             * </pre>
             */
            public int getAction() {
                return action_;
            }

            /**
             * <code>optional uint32 action = 9;</code>
             * <p/>
             * <pre>
             * 0 is add,1 is delete
             * </pre>
             */
            public Builder setAction(int value) {
                bitField0_ |= 0x00000100;
                action_ = value;

                return this;
            }

            /**
             * <code>optional uint32 action = 9;</code>
             * <p/>
             * <pre>
             * 0 is add,1 is delete
             * </pre>
             */
            public Builder clearAction() {
                bitField0_ = (bitField0_ & ~0x00000100);
                action_ = 0;

                return this;
            }

            // @@protoc_insertion_point(builder_scope:bt_alarm)
        }

        static {
            defaultInstance = new bt_alarm(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:bt_alarm)
    }


    static {
    }

    // @@protoc_insertion_point(outer_class_scope)
}
