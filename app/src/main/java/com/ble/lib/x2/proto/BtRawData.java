package com.ble.lib.x2.proto;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bt_raw_data.proto

public final class BtRawData {
    private BtRawData() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    /**
     * Protobuf enum {@code MANUAL_SPROT_TYPE}
     */
    public enum MANUAL_SPROT_TYPE
            implements com.google.protobuf.Internal.EnumLite {
        /**
         * <code>RUN_OUTDOOR = 11;</code>
         */
        RUN_OUTDOOR(0, 11),
        /**
         * <code>BICYCLING = 14;</code>
         */
        BICYCLING(1, 14),
        /**
         * <code>FITNESS = 15;</code>
         */
        FITNESS(2, 15),;

        /**
         * <code>RUN_OUTDOOR = 11;</code>
         */
        public static final int RUN_OUTDOOR_VALUE = 11;
        /**
         * <code>BICYCLING = 14;</code>
         */
        public static final int BICYCLING_VALUE = 14;
        /**
         * <code>FITNESS = 15;</code>
         */
        public static final int FITNESS_VALUE = 15;


        public final int getNumber() {
            return value;
        }

        public static MANUAL_SPROT_TYPE valueOf(int value) {
            switch (value) {
                case 11:
                    return RUN_OUTDOOR;
                case 14:
                    return BICYCLING;
                case 15:
                    return FITNESS;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<MANUAL_SPROT_TYPE>
        internalGetValueMap() {
            return internalValueMap;
        }

        private static com.google.protobuf.Internal.EnumLiteMap<MANUAL_SPROT_TYPE>
                internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<MANUAL_SPROT_TYPE>() {
                    public MANUAL_SPROT_TYPE findValueByNumber(int number) {
                        return MANUAL_SPROT_TYPE.valueOf(number);
                    }
                };

        private final int value;

        MANUAL_SPROT_TYPE(int index, int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:MANUAL_SPROT_TYPE)
    }

    public interface bt_raw_data_reqOrBuilder extends
            // @@protoc_insertion_point(interface_extends:bt_raw_data_req)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>optional int64 start_time = 1;</code>
         */
        boolean hasStartTime();

        /**
         * <code>optional int64 start_time = 1;</code>
         */
        long getStartTime();

        /**
         * <code>optional int64 end_time = 2;</code>
         */
        boolean hasEndTime();

        /**
         * <code>optional int64 end_time = 2;</code>
         */
        long getEndTime();
    }

    /**
     * Protobuf type {@code bt_raw_data_req}
     */
    public static final class bt_raw_data_req extends
            com.google.protobuf.GeneratedMessageLite implements
            // @@protoc_insertion_point(message_implements:bt_raw_data_req)
            bt_raw_data_reqOrBuilder {
        // Use bt_raw_data_req.newBuilder() to construct.
        private bt_raw_data_req(com.google.protobuf.GeneratedMessageLite.Builder builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private bt_raw_data_req(boolean noInit) {
            this.unknownFields = com.google.protobuf.ByteString.EMPTY;
        }

        private static final bt_raw_data_req defaultInstance;

        public static bt_raw_data_req getDefaultInstance() {
            return defaultInstance;
        }

        public bt_raw_data_req getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.ByteString unknownFields;

        private bt_raw_data_req(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.ByteString.Output unknownFieldsOutput =
                    com.google.protobuf.ByteString.newOutput();
            com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
                    com.google.protobuf.CodedOutputStream.newInstance(
                            unknownFieldsOutput);
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            startTime_ = input.readInt64();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            endTime_ = input.readInt64();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                try {
                    unknownFieldsCodedOutput.flush();
                } catch (java.io.IOException e) {
                    // Should not happen
                } finally {
                    unknownFields = unknownFieldsOutput.toByteString();
                }
                makeExtensionsImmutable();
            }
        }

        public static com.google.protobuf.Parser<bt_raw_data_req> PARSER =
                new com.google.protobuf.AbstractParser<bt_raw_data_req>() {
                    public bt_raw_data_req parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new bt_raw_data_req(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<bt_raw_data_req> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        public static final int START_TIME_FIELD_NUMBER = 1;
        private long startTime_;

        /**
         * <code>optional int64 start_time = 1;</code>
         */
        public boolean hasStartTime() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional int64 start_time = 1;</code>
         */
        public long getStartTime() {
            return startTime_;
        }

        public static final int END_TIME_FIELD_NUMBER = 2;
        private long endTime_;

        /**
         * <code>optional int64 end_time = 2;</code>
         */
        public boolean hasEndTime() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>optional int64 end_time = 2;</code>
         */
        public long getEndTime() {
            return endTime_;
        }

        private void initFields() {
            startTime_ = 0L;
            endTime_ = 0L;
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeInt64(1, startTime_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeInt64(2, endTime_);
            }
            output.writeRawBytes(unknownFields);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(1, startTime_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(2, endTime_);
            }
            size += unknownFields.size();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static bt_raw_data_req parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static bt_raw_data_req parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static bt_raw_data_req parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static bt_raw_data_req parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static bt_raw_data_req parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static bt_raw_data_req parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static bt_raw_data_req parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static bt_raw_data_req parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static bt_raw_data_req parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static bt_raw_data_req parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(bt_raw_data_req prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        /**
         * Protobuf type {@code bt_raw_data_req}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        bt_raw_data_req, Builder>
                implements
                // @@protoc_insertion_point(builder_implements:bt_raw_data_req)
                bt_raw_data_reqOrBuilder {
            // Construct using BtRawData.bt_raw_data_req.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                startTime_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000001);
                endTime_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public bt_raw_data_req getDefaultInstanceForType() {
                return bt_raw_data_req.getDefaultInstance();
            }

            public bt_raw_data_req build() {
                bt_raw_data_req result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public bt_raw_data_req buildPartial() {
                bt_raw_data_req result = new bt_raw_data_req(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.startTime_ = startTime_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.endTime_ = endTime_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(bt_raw_data_req other) {
                if (other == bt_raw_data_req.getDefaultInstance()) return this;
                if (other.hasStartTime()) {
                    setStartTime(other.getStartTime());
                }
                if (other.hasEndTime()) {
                    setEndTime(other.getEndTime());
                }
                setUnknownFields(
                        getUnknownFields().concat(other.unknownFields));
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                bt_raw_data_req parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (bt_raw_data_req) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private long startTime_;

            /**
             * <code>optional int64 start_time = 1;</code>
             */
            public boolean hasStartTime() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional int64 start_time = 1;</code>
             */
            public long getStartTime() {
                return startTime_;
            }

            /**
             * <code>optional int64 start_time = 1;</code>
             */
            public Builder setStartTime(long value) {
                bitField0_ |= 0x00000001;
                startTime_ = value;

                return this;
            }

            /**
             * <code>optional int64 start_time = 1;</code>
             */
            public Builder clearStartTime() {
                bitField0_ = (bitField0_ & ~0x00000001);
                startTime_ = 0L;

                return this;
            }

            private long endTime_;

            /**
             * <code>optional int64 end_time = 2;</code>
             */
            public boolean hasEndTime() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional int64 end_time = 2;</code>
             */
            public long getEndTime() {
                return endTime_;
            }

            /**
             * <code>optional int64 end_time = 2;</code>
             */
            public Builder setEndTime(long value) {
                bitField0_ |= 0x00000002;
                endTime_ = value;

                return this;
            }

            /**
             * <code>optional int64 end_time = 2;</code>
             */
            public Builder clearEndTime() {
                bitField0_ = (bitField0_ & ~0x00000002);
                endTime_ = 0L;

                return this;
            }

            // @@protoc_insertion_point(builder_scope:bt_raw_data_req)
        }

        static {
            defaultInstance = new bt_raw_data_req(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:bt_raw_data_req)
    }

    public interface bt_raw_data_rspOrBuilder extends
            // @@protoc_insertion_point(interface_extends:bt_raw_data_rsp)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>repeated .sport_raw sport_data = 1;</code>
         */
        java.util.List<sport_raw>
        getSportDataList();

        /**
         * <code>repeated .sport_raw sport_data = 1;</code>
         */
        sport_raw getSportData(int index);

        /**
         * <code>repeated .sport_raw sport_data = 1;</code>
         */
        int getSportDataCount();

        /**
         * <code>repeated .heart heart_data = 2;</code>
         */
        java.util.List<heart>
        getHeartDataList();

        /**
         * <code>repeated .heart heart_data = 2;</code>
         */
        heart getHeartData(int index);

        /**
         * <code>repeated heart heart_data = 2;</code>
         */
        int getHeartDataCount();

        /**
         * <code>repeated manual_sport manual_data = 3;</code>
         */
        java.util.List<manual_sport>
        getManualDataList();

        /**
         * <code>repeated manual_sport manual_data = 3;</code>
         */
        manual_sport getManualData(int index);

        /**
         * <code>repeated .manual_sport manual_data = 3;</code>
         */
        int getManualDataCount();
    }

    /**
     * Protobuf type {@code bt_raw_data_rsp}
     */
    public static final class bt_raw_data_rsp extends
            com.google.protobuf.GeneratedMessageLite implements
            // @@protoc_insertion_point(message_implements:bt_raw_data_rsp)
            bt_raw_data_rspOrBuilder {
        // Use bt_raw_data_rsp.newBuilder() to construct.
        private bt_raw_data_rsp(com.google.protobuf.GeneratedMessageLite.Builder builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private bt_raw_data_rsp(boolean noInit) {
            this.unknownFields = com.google.protobuf.ByteString.EMPTY;
        }

        private static final bt_raw_data_rsp defaultInstance;

        public static bt_raw_data_rsp getDefaultInstance() {
            return defaultInstance;
        }

        public bt_raw_data_rsp getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.ByteString unknownFields;

        private bt_raw_data_rsp(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.ByteString.Output unknownFieldsOutput =
                    com.google.protobuf.ByteString.newOutput();
            com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
                    com.google.protobuf.CodedOutputStream.newInstance(
                            unknownFieldsOutput);
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                                sportData_ = new java.util.ArrayList<sport_raw>();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            sportData_.add(input.readMessage(sport_raw.PARSER, extensionRegistry));
                            break;
                        }
                        case 18: {
                            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                                heartData_ = new java.util.ArrayList<heart>();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            heartData_.add(input.readMessage(heart.PARSER, extensionRegistry));
                            break;
                        }
                        case 26: {
                            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                                manualData_ = new java.util.ArrayList<manual_sport>();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            manualData_.add(input.readMessage(manual_sport.PARSER, extensionRegistry));
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                    sportData_ = java.util.Collections.unmodifiableList(sportData_);
                }
                if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    heartData_ = java.util.Collections.unmodifiableList(heartData_);
                }
                if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                    manualData_ = java.util.Collections.unmodifiableList(manualData_);
                }
                try {
                    unknownFieldsCodedOutput.flush();
                } catch (java.io.IOException e) {
                    // Should not happen
                } finally {
                    unknownFields = unknownFieldsOutput.toByteString();
                }
                makeExtensionsImmutable();
            }
        }

        public static com.google.protobuf.Parser<bt_raw_data_rsp> PARSER =
                new com.google.protobuf.AbstractParser<bt_raw_data_rsp>() {
                    public bt_raw_data_rsp parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new bt_raw_data_rsp(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<bt_raw_data_rsp> getParserForType() {
            return PARSER;
        }

        public static final int SPORT_DATA_FIELD_NUMBER = 1;
        private java.util.List<sport_raw> sportData_;

        /**
         * <code>repeated .sport_raw sport_data = 1;</code>
         */
        public java.util.List<sport_raw> getSportDataList() {
            return sportData_;
        }

        /**
         * <code>repeated .sport_raw sport_data = 1;</code>
         */
        public java.util.List<? extends sport_rawOrBuilder>
        getSportDataOrBuilderList() {
            return sportData_;
        }

        /**
         * <code>repeated .sport_raw sport_data = 1;</code>
         */
        public int getSportDataCount() {
            return sportData_.size();
        }

        /**
         * <code>repeated .sport_raw sport_data = 1;</code>
         */
        public sport_raw getSportData(int index) {
            return sportData_.get(index);
        }

        /**
         * <code>repeated .sport_raw sport_data = 1;</code>
         */
        public sport_rawOrBuilder getSportDataOrBuilder(
                int index) {
            return sportData_.get(index);
        }

        public static final int HEART_DATA_FIELD_NUMBER = 2;
        private java.util.List<heart> heartData_;

        /**
         * <code>repeated heart heart_data = 2;</code>
         */
        public java.util.List<heart> getHeartDataList() {
            return heartData_;
        }

        /**
         * <code>repeated .heart heart_data = 2;</code>
         */
        public java.util.List<? extends heartOrBuilder>
        getHeartDataOrBuilderList() {
            return heartData_;
        }

        /**
         * <code>repeated .heart heart_data = 2;</code>
         */
        public int getHeartDataCount() {
            return heartData_.size();
        }

        /**
         * <code>repeated .heart heart_data = 2;</code>
         */
        public heart getHeartData(int index) {
            return heartData_.get(index);
        }

        /**
         * <code>repeated .heart heart_data = 2;</code>
         */
        public heartOrBuilder getHeartDataOrBuilder(
                int index) {
            return heartData_.get(index);
        }

        public static final int MANUAL_DATA_FIELD_NUMBER = 3;
        private java.util.List<manual_sport> manualData_;

        /**
         * <code>repeated .manual_sport manual_data = 3;</code>
         */
        public java.util.List<manual_sport> getManualDataList() {
            return manualData_;
        }

        /**
         * <code>repeated .manual_sport manual_data = 3;</code>
         */
        public java.util.List<? extends manual_sportOrBuilder>
        getManualDataOrBuilderList() {
            return manualData_;
        }

        /**
         * <code>repeated .manual_sport manual_data = 3;</code>
         */
        public int getManualDataCount() {
            return manualData_.size();
        }

        /**
         * <code>repeated .manual_sport manual_data = 3;</code>
         */
        public manual_sport getManualData(int index) {
            return manualData_.get(index);
        }

        /**
         * <code>repeated .manual_sport manual_data = 3;</code>
         */
        public manual_sportOrBuilder getManualDataOrBuilder(
                int index) {
            return manualData_.get(index);
        }

        private void initFields() {
            sportData_ = java.util.Collections.emptyList();
            heartData_ = java.util.Collections.emptyList();
            manualData_ = java.util.Collections.emptyList();
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            for (int i = 0; i < sportData_.size(); i++) {
                output.writeMessage(1, sportData_.get(i));
            }
            for (int i = 0; i < heartData_.size(); i++) {
                output.writeMessage(2, heartData_.get(i));
            }
            for (int i = 0; i < manualData_.size(); i++) {
                output.writeMessage(3, manualData_.get(i));
            }
            output.writeRawBytes(unknownFields);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < sportData_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, sportData_.get(i));
            }
            for (int i = 0; i < heartData_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, heartData_.get(i));
            }
            for (int i = 0; i < manualData_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, manualData_.get(i));
            }
            size += unknownFields.size();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static bt_raw_data_rsp parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static bt_raw_data_rsp parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static bt_raw_data_rsp parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static bt_raw_data_rsp parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static bt_raw_data_rsp parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static bt_raw_data_rsp parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static bt_raw_data_rsp parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static bt_raw_data_rsp parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static bt_raw_data_rsp parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static bt_raw_data_rsp parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(bt_raw_data_rsp prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        /**
         * Protobuf type {@code bt_raw_data_rsp}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        bt_raw_data_rsp, Builder>
                implements
                // @@protoc_insertion_point(builder_implements:bt_raw_data_rsp)
                bt_raw_data_rspOrBuilder {
            // Construct using BtRawData.bt_raw_data_rsp.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                sportData_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000001);
                heartData_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);
                manualData_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public bt_raw_data_rsp getDefaultInstanceForType() {
                return bt_raw_data_rsp.getDefaultInstance();
            }

            public bt_raw_data_rsp build() {
                bt_raw_data_rsp result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public bt_raw_data_rsp buildPartial() {
                bt_raw_data_rsp result = new bt_raw_data_rsp(this);
                int from_bitField0_ = bitField0_;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    sportData_ = java.util.Collections.unmodifiableList(sportData_);
                    bitField0_ = (bitField0_ & ~0x00000001);
                }
                result.sportData_ = sportData_;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    heartData_ = java.util.Collections.unmodifiableList(heartData_);
                    bitField0_ = (bitField0_ & ~0x00000002);
                }
                result.heartData_ = heartData_;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    manualData_ = java.util.Collections.unmodifiableList(manualData_);
                    bitField0_ = (bitField0_ & ~0x00000004);
                }
                result.manualData_ = manualData_;
                return result;
            }

            public Builder mergeFrom(bt_raw_data_rsp other) {
                if (other == bt_raw_data_rsp.getDefaultInstance()) return this;
                if (!other.sportData_.isEmpty()) {
                    if (sportData_.isEmpty()) {
                        sportData_ = other.sportData_;
                        bitField0_ = (bitField0_ & ~0x00000001);
                    } else {
                        ensureSportDataIsMutable();
                        sportData_.addAll(other.sportData_);
                    }

                }
                if (!other.heartData_.isEmpty()) {
                    if (heartData_.isEmpty()) {
                        heartData_ = other.heartData_;
                        bitField0_ = (bitField0_ & ~0x00000002);
                    } else {
                        ensureHeartDataIsMutable();
                        heartData_.addAll(other.heartData_);
                    }

                }
                if (!other.manualData_.isEmpty()) {
                    if (manualData_.isEmpty()) {
                        manualData_ = other.manualData_;
                        bitField0_ = (bitField0_ & ~0x00000004);
                    } else {
                        ensureManualDataIsMutable();
                        manualData_.addAll(other.manualData_);
                    }

                }
                setUnknownFields(
                        getUnknownFields().concat(other.unknownFields));
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                bt_raw_data_rsp parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (bt_raw_data_rsp) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private java.util.List<sport_raw> sportData_ =
                    java.util.Collections.emptyList();

            private void ensureSportDataIsMutable() {
                if (!((bitField0_ & 0x00000001) == 0x00000001)) {
                    sportData_ = new java.util.ArrayList<sport_raw>(sportData_);
                    bitField0_ |= 0x00000001;
                }
            }

            /**
             * <code>repeated .sport_raw sport_data = 1;</code>
             */
            public java.util.List<sport_raw> getSportDataList() {
                return java.util.Collections.unmodifiableList(sportData_);
            }

            /**
             * <code>repeated .sport_raw sport_data = 1;</code>
             */
            public int getSportDataCount() {
                return sportData_.size();
            }

            /**
             * <code>repeated .sport_raw sport_data = 1;</code>
             */
            public sport_raw getSportData(int index) {
                return sportData_.get(index);
            }

            /**
             * <code>repeated .sport_raw sport_data = 1;</code>
             */
            public Builder setSportData(
                    int index, sport_raw value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureSportDataIsMutable();
                sportData_.set(index, value);

                return this;
            }

            /**
             * <code>repeated .sport_raw sport_data = 1;</code>
             */
            public Builder setSportData(
                    int index, sport_raw.Builder builderForValue) {
                ensureSportDataIsMutable();
                sportData_.set(index, builderForValue.build());

                return this;
            }

            /**
             * <code>repeated .sport_raw sport_data = 1;</code>
             */
            public Builder addSportData(sport_raw value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureSportDataIsMutable();
                sportData_.add(value);

                return this;
            }

            /**
             * <code>repeated .sport_raw sport_data = 1;</code>
             */
            public Builder addSportData(
                    int index, sport_raw value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureSportDataIsMutable();
                sportData_.add(index, value);

                return this;
            }

            /**
             * <code>repeated .sport_raw sport_data = 1;</code>
             */
            public Builder addSportData(
                    sport_raw.Builder builderForValue) {
                ensureSportDataIsMutable();
                sportData_.add(builderForValue.build());

                return this;
            }

            /**
             * <code>repeated .sport_raw sport_data = 1;</code>
             */
            public Builder addSportData(
                    int index, sport_raw.Builder builderForValue) {
                ensureSportDataIsMutable();
                sportData_.add(index, builderForValue.build());

                return this;
            }

            /**
             * <code>repeated .sport_raw sport_data = 1;</code>
             */
            public Builder addAllSportData(
                    Iterable<? extends sport_raw> values) {
                ensureSportDataIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, sportData_);

                return this;
            }

            /**
             * <code>repeated .sport_raw sport_data = 1;</code>
             */
            public Builder clearSportData() {
                sportData_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000001);

                return this;
            }

            /**
             * <code>repeated .sport_raw sport_data = 1;</code>
             */
            public Builder removeSportData(int index) {
                ensureSportDataIsMutable();
                sportData_.remove(index);

                return this;
            }

            private java.util.List<heart> heartData_ =
                    java.util.Collections.emptyList();

            private void ensureHeartDataIsMutable() {
                if (!((bitField0_ & 0x00000002) == 0x00000002)) {
                    heartData_ = new java.util.ArrayList<heart>(heartData_);
                    bitField0_ |= 0x00000002;
                }
            }

            /**
             * <code>repeated .heart heart_data = 2;</code>
             */
            public java.util.List<heart> getHeartDataList() {
                return java.util.Collections.unmodifiableList(heartData_);
            }

            /**
             * <code>repeated .heart heart_data = 2;</code>
             */
            public int getHeartDataCount() {
                return heartData_.size();
            }

            /**
             * <code>repeated .heart heart_data = 2;</code>
             */
            public heart getHeartData(int index) {
                return heartData_.get(index);
            }

            /**
             * <code>repeated .heart heart_data = 2;</code>
             */
            public Builder setHeartData(
                    int index, heart value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureHeartDataIsMutable();
                heartData_.set(index, value);

                return this;
            }

            /**
             * <code>repeated .heart heart_data = 2;</code>
             */
            public Builder setHeartData(
                    int index, heart.Builder builderForValue) {
                ensureHeartDataIsMutable();
                heartData_.set(index, builderForValue.build());

                return this;
            }

            /**
             * <code>repeated .heart heart_data = 2;</code>
             */
            public Builder addHeartData(heart value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureHeartDataIsMutable();
                heartData_.add(value);

                return this;
            }

            /**
             * <code>repeated .heart heart_data = 2;</code>
             */
            public Builder addHeartData(
                    int index, heart value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureHeartDataIsMutable();
                heartData_.add(index, value);

                return this;
            }

            /**
             * <code>repeated .heart heart_data = 2;</code>
             */
            public Builder addHeartData(
                    heart.Builder builderForValue) {
                ensureHeartDataIsMutable();
                heartData_.add(builderForValue.build());

                return this;
            }

            /**
             * <code>repeated .heart heart_data = 2;</code>
             */
            public Builder addHeartData(
                    int index, heart.Builder builderForValue) {
                ensureHeartDataIsMutable();
                heartData_.add(index, builderForValue.build());

                return this;
            }

            /**
             * <code>repeated .heart heart_data = 2;</code>
             */
            public Builder addAllHeartData(
                    Iterable<? extends heart> values) {
                ensureHeartDataIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, heartData_);

                return this;
            }

            /**
             * <code>repeated .heart heart_data = 2;</code>
             */
            public Builder clearHeartData() {
                heartData_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);

                return this;
            }

            /**
             * <code>repeated .heart heart_data = 2;</code>
             */
            public Builder removeHeartData(int index) {
                ensureHeartDataIsMutable();
                heartData_.remove(index);

                return this;
            }

            private java.util.List<manual_sport> manualData_ =
                    java.util.Collections.emptyList();

            private void ensureManualDataIsMutable() {
                if (!((bitField0_ & 0x00000004) == 0x00000004)) {
                    manualData_ = new java.util.ArrayList<manual_sport>(manualData_);
                    bitField0_ |= 0x00000004;
                }
            }

            /**
             * <code>repeated .manual_sport manual_data = 3;</code>
             */
            public java.util.List<manual_sport> getManualDataList() {
                return java.util.Collections.unmodifiableList(manualData_);
            }

            /**
             * <code>repeated .manual_sport manual_data = 3;</code>
             */
            public int getManualDataCount() {
                return manualData_.size();
            }

            /**
             * <code>repeated .manual_sport manual_data = 3;</code>
             */
            public manual_sport getManualData(int index) {
                return manualData_.get(index);
            }

            /**
             * <code>repeated .manual_sport manual_data = 3;</code>
             */
            public Builder setManualData(
                    int index, manual_sport value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureManualDataIsMutable();
                manualData_.set(index, value);

                return this;
            }

            /**
             * <code>repeated .manual_sport manual_data = 3;</code>
             */
            public Builder setManualData(
                    int index, manual_sport.Builder builderForValue) {
                ensureManualDataIsMutable();
                manualData_.set(index, builderForValue.build());

                return this;
            }

            /**
             * <code>repeated .manual_sport manual_data = 3;</code>
             */
            public Builder addManualData(manual_sport value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureManualDataIsMutable();
                manualData_.add(value);

                return this;
            }

            /**
             * <code>repeated .manual_sport manual_data = 3;</code>
             */
            public Builder addManualData(
                    int index, manual_sport value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureManualDataIsMutable();
                manualData_.add(index, value);

                return this;
            }

            /**
             * <code>repeated .manual_sport manual_data = 3;</code>
             */
            public Builder addManualData(
                    manual_sport.Builder builderForValue) {
                ensureManualDataIsMutable();
                manualData_.add(builderForValue.build());

                return this;
            }

            /**
             * <code>repeated .manual_sport manual_data = 3;</code>
             */
            public Builder addManualData(
                    int index, manual_sport.Builder builderForValue) {
                ensureManualDataIsMutable();
                manualData_.add(index, builderForValue.build());

                return this;
            }

            /**
             * <code>repeated .manual_sport manual_data = 3;</code>
             */
            public Builder addAllManualData(
                    Iterable<? extends manual_sport> values) {
                ensureManualDataIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, manualData_);

                return this;
            }

            /**
             * <code>repeated .manual_sport manual_data = 3;</code>
             */
            public Builder clearManualData() {
                manualData_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000004);

                return this;
            }

            /**
             * <code>repeated .manual_sport manual_data = 3;</code>
             */
            public Builder removeManualData(int index) {
                ensureManualDataIsMutable();
                manualData_.remove(index);

                return this;
            }

            // @@protoc_insertion_point(builder_scope:bt_raw_data_rsp)
        }

        static {
            defaultInstance = new bt_raw_data_rsp(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:bt_raw_data_rsp)
    }

    public interface sport_rawOrBuilder extends
            // @@protoc_insertion_point(interface_extends:sport_raw)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>optional int64 time = 1;</code>
         * <p/>
         * <pre>
         * count with minute
         * </pre>
         */
        boolean hasTime();

        /**
         * <code>optional int64 time = 1;</code>
         * <p/>
         * <pre>
         * count with minute
         * </pre>
         */
        long getTime();

        /**
         * <code>optional uint32 quiet = 2;</code>
         */
        boolean hasQuiet();

        /**
         * <code>optional uint32 quiet = 2;</code>
         */
        int getQuiet();

        /**
         * <code>optional uint32 alert = 3;</code>
         */
        boolean hasAlert();

        /**
         * <code>optional uint32 alert = 3;</code>
         */
        int getAlert();

        /**
         * <code>optional uint32 move = 4;</code>
         */
        boolean hasMove();

        /**
         * <code>optional uint32 move = 4;</code>
         */
        int getMove();

        /**
         * <code>optional uint32 walk = 5;</code>
         */
        boolean hasWalk();

        /**
         * <code>optional uint32 walk = 5;</code>
         */
        int getWalk();

        /**
         * <code>optional uint32 run = 6;</code>
         */
        boolean hasRun();

        /**
         * <code>optional uint32 run = 6;</code>
         */
        int getRun();

        /**
         * <code>optional bool bong_flag = 7;</code>
         */
        boolean hasBongFlag();

        /**
         * <code>optional bool bong_flag = 7;</code>
         */
        boolean getBongFlag();

        /**
         * <code>optional bool charge_flag = 8;</code>
         */
        boolean hasChargeFlag();

        /**
         * <code>optional bool charge_flag = 8;</code>
         */
        boolean getChargeFlag();

        /**
         * <code>optional uint32 amp = 9;</code>
         */
        boolean hasAmp();

        /**
         * <code>optional uint32 amp = 9;</code>
         */
        int getAmp();

        /**
         * <code>optional uint32 step = 10;</code>
         */
        boolean hasStep();

        /**
         * <code>optional uint32 step = 10;</code>
         */
        int getStep();
    }

    /**
     * Protobuf type {@code sport_raw}
     */
    public static final class sport_raw extends
            com.google.protobuf.GeneratedMessageLite implements
            // @@protoc_insertion_point(message_implements:sport_raw)
            sport_rawOrBuilder {
        // Use sport_raw.newBuilder() to construct.
        private sport_raw(com.google.protobuf.GeneratedMessageLite.Builder builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private sport_raw(boolean noInit) {
            this.unknownFields = com.google.protobuf.ByteString.EMPTY;
        }

        private static final sport_raw defaultInstance;

        public static sport_raw getDefaultInstance() {
            return defaultInstance;
        }

        public sport_raw getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.ByteString unknownFields;

        private sport_raw(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.ByteString.Output unknownFieldsOutput =
                    com.google.protobuf.ByteString.newOutput();
            com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
                    com.google.protobuf.CodedOutputStream.newInstance(
                            unknownFieldsOutput);
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            time_ = input.readInt64();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            quiet_ = input.readUInt32();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            alert_ = input.readUInt32();
                            break;
                        }
                        case 32: {
                            bitField0_ |= 0x00000008;
                            move_ = input.readUInt32();
                            break;
                        }
                        case 40: {
                            bitField0_ |= 0x00000010;
                            walk_ = input.readUInt32();
                            break;
                        }
                        case 48: {
                            bitField0_ |= 0x00000020;
                            run_ = input.readUInt32();
                            break;
                        }
                        case 56: {
                            bitField0_ |= 0x00000040;
                            bongFlag_ = input.readBool();
                            break;
                        }
                        case 64: {
                            bitField0_ |= 0x00000080;
                            chargeFlag_ = input.readBool();
                            break;
                        }
                        case 72: {
                            bitField0_ |= 0x00000100;
                            amp_ = input.readUInt32();
                            break;
                        }
                        case 80: {
                            bitField0_ |= 0x00000200;
                            step_ = input.readUInt32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                try {
                    unknownFieldsCodedOutput.flush();
                } catch (java.io.IOException e) {
                    // Should not happen
                } finally {
                    unknownFields = unknownFieldsOutput.toByteString();
                }
                makeExtensionsImmutable();
            }
        }

        public static com.google.protobuf.Parser<sport_raw> PARSER =
                new com.google.protobuf.AbstractParser<sport_raw>() {
                    public sport_raw parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new sport_raw(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<sport_raw> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        public static final int TIME_FIELD_NUMBER = 1;
        private long time_;

        /**
         * <code>optional int64 time = 1;</code>
         * <p/>
         * <pre>
         * count with minute
         * </pre>
         */
        public boolean hasTime() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional int64 time = 1;</code>
         * <p/>
         * <pre>
         * count with minute
         * </pre>
         */
        public long getTime() {
            return time_;
        }

        public static final int QUIET_FIELD_NUMBER = 2;
        private int quiet_;

        /**
         * <code>optional uint32 quiet = 2;</code>
         */
        public boolean hasQuiet() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>optional uint32 quiet = 2;</code>
         */
        public int getQuiet() {
            return quiet_;
        }

        public static final int ALERT_FIELD_NUMBER = 3;
        private int alert_;

        /**
         * <code>optional uint32 alert = 3;</code>
         */
        public boolean hasAlert() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <code>optional uint32 alert = 3;</code>
         */
        public int getAlert() {
            return alert_;
        }

        public static final int MOVE_FIELD_NUMBER = 4;
        private int move_;

        /**
         * <code>optional uint32 move = 4;</code>
         */
        public boolean hasMove() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <code>optional uint32 move = 4;</code>
         */
        public int getMove() {
            return move_;
        }

        public static final int WALK_FIELD_NUMBER = 5;
        private int walk_;

        /**
         * <code>optional uint32 walk = 5;</code>
         */
        public boolean hasWalk() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <code>optional uint32 walk = 5;</code>
         */
        public int getWalk() {
            return walk_;
        }

        public static final int RUN_FIELD_NUMBER = 6;
        private int run_;

        /**
         * <code>optional uint32 run = 6;</code>
         */
        public boolean hasRun() {
            return ((bitField0_ & 0x00000020) == 0x00000020);
        }

        /**
         * <code>optional uint32 run = 6;</code>
         */
        public int getRun() {
            return run_;
        }

        public static final int BONG_FLAG_FIELD_NUMBER = 7;
        private boolean bongFlag_;

        /**
         * <code>optional bool bong_flag = 7;</code>
         */
        public boolean hasBongFlag() {
            return ((bitField0_ & 0x00000040) == 0x00000040);
        }

        /**
         * <code>optional bool bong_flag = 7;</code>
         */
        public boolean getBongFlag() {
            return bongFlag_;
        }

        public static final int CHARGE_FLAG_FIELD_NUMBER = 8;
        private boolean chargeFlag_;

        /**
         * <code>optional bool charge_flag = 8;</code>
         */
        public boolean hasChargeFlag() {
            return ((bitField0_ & 0x00000080) == 0x00000080);
        }

        /**
         * <code>optional bool charge_flag = 8;</code>
         */
        public boolean getChargeFlag() {
            return chargeFlag_;
        }

        public static final int AMP_FIELD_NUMBER = 9;
        private int amp_;

        /**
         * <code>optional uint32 amp = 9;</code>
         */
        public boolean hasAmp() {
            return ((bitField0_ & 0x00000100) == 0x00000100);
        }

        /**
         * <code>optional uint32 amp = 9;</code>
         */
        public int getAmp() {
            return amp_;
        }

        public static final int STEP_FIELD_NUMBER = 10;
        private int step_;

        /**
         * <code>optional uint32 step = 10;</code>
         */
        public boolean hasStep() {
            return ((bitField0_ & 0x00000200) == 0x00000200);
        }

        /**
         * <code>optional uint32 step = 10;</code>
         */
        public int getStep() {
            return step_;
        }

        private void initFields() {
            time_ = 0L;
            quiet_ = 0;
            alert_ = 0;
            move_ = 0;
            walk_ = 0;
            run_ = 0;
            bongFlag_ = false;
            chargeFlag_ = false;
            amp_ = 0;
            step_ = 0;
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeInt64(1, time_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeUInt32(2, quiet_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeUInt32(3, alert_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeUInt32(4, move_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeUInt32(5, walk_);
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                output.writeUInt32(6, run_);
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                output.writeBool(7, bongFlag_);
            }
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
                output.writeBool(8, chargeFlag_);
            }
            if (((bitField0_ & 0x00000100) == 0x00000100)) {
                output.writeUInt32(9, amp_);
            }
            if (((bitField0_ & 0x00000200) == 0x00000200)) {
                output.writeUInt32(10, step_);
            }
            output.writeRawBytes(unknownFields);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(1, time_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(2, quiet_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(3, alert_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(4, move_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(5, walk_);
            }
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(6, run_);
            }
            if (((bitField0_ & 0x00000040) == 0x00000040)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(7, bongFlag_);
            }
            if (((bitField0_ & 0x00000080) == 0x00000080)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(8, chargeFlag_);
            }
            if (((bitField0_ & 0x00000100) == 0x00000100)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(9, amp_);
            }
            if (((bitField0_ & 0x00000200) == 0x00000200)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(10, step_);
            }
            size += unknownFields.size();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static sport_raw parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static sport_raw parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static sport_raw parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static sport_raw parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static sport_raw parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static sport_raw parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static sport_raw parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static sport_raw parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static sport_raw parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static sport_raw parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(sport_raw prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        /**
         * Protobuf type {@code sport_raw}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        sport_raw, Builder>
                implements
                // @@protoc_insertion_point(builder_implements:sport_raw)
                sport_rawOrBuilder {
            // Construct using BtRawData.sport_raw.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                time_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000001);
                quiet_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                alert_ = 0;
                bitField0_ = (bitField0_ & ~0x00000004);
                move_ = 0;
                bitField0_ = (bitField0_ & ~0x00000008);
                walk_ = 0;
                bitField0_ = (bitField0_ & ~0x00000010);
                run_ = 0;
                bitField0_ = (bitField0_ & ~0x00000020);
                bongFlag_ = false;
                bitField0_ = (bitField0_ & ~0x00000040);
                chargeFlag_ = false;
                bitField0_ = (bitField0_ & ~0x00000080);
                amp_ = 0;
                bitField0_ = (bitField0_ & ~0x00000100);
                step_ = 0;
                bitField0_ = (bitField0_ & ~0x00000200);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public sport_raw getDefaultInstanceForType() {
                return sport_raw.getDefaultInstance();
            }

            public sport_raw build() {
                sport_raw result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public sport_raw buildPartial() {
                sport_raw result = new sport_raw(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.time_ = time_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.quiet_ = quiet_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.alert_ = alert_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.move_ = move_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.walk_ = walk_;
                if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
                    to_bitField0_ |= 0x00000020;
                }
                result.run_ = run_;
                if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
                    to_bitField0_ |= 0x00000040;
                }
                result.bongFlag_ = bongFlag_;
                if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
                    to_bitField0_ |= 0x00000080;
                }
                result.chargeFlag_ = chargeFlag_;
                if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
                    to_bitField0_ |= 0x00000100;
                }
                result.amp_ = amp_;
                if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
                    to_bitField0_ |= 0x00000200;
                }
                result.step_ = step_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(sport_raw other) {
                if (other == sport_raw.getDefaultInstance()) return this;
                if (other.hasTime()) {
                    setTime(other.getTime());
                }
                if (other.hasQuiet()) {
                    setQuiet(other.getQuiet());
                }
                if (other.hasAlert()) {
                    setAlert(other.getAlert());
                }
                if (other.hasMove()) {
                    setMove(other.getMove());
                }
                if (other.hasWalk()) {
                    setWalk(other.getWalk());
                }
                if (other.hasRun()) {
                    setRun(other.getRun());
                }
                if (other.hasBongFlag()) {
                    setBongFlag(other.getBongFlag());
                }
                if (other.hasChargeFlag()) {
                    setChargeFlag(other.getChargeFlag());
                }
                if (other.hasAmp()) {
                    setAmp(other.getAmp());
                }
                if (other.hasStep()) {
                    setStep(other.getStep());
                }
                setUnknownFields(
                        getUnknownFields().concat(other.unknownFields));
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                sport_raw parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (sport_raw) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private long time_;

            /**
             * <code>optional int64 time = 1;</code>
             * <p/>
             * <pre>
             * count with minute
             * </pre>
             */
            public boolean hasTime() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional int64 time = 1;</code>
             * <p/>
             * <pre>
             * count with minute
             * </pre>
             */
            public long getTime() {
                return time_;
            }

            /**
             * <code>optional int64 time = 1;</code>
             * <p/>
             * <pre>
             * count with minute
             * </pre>
             */
            public Builder setTime(long value) {
                bitField0_ |= 0x00000001;
                time_ = value;

                return this;
            }

            /**
             * <code>optional int64 time = 1;</code>
             * <p/>
             * <pre>
             * count with minute
             * </pre>
             */
            public Builder clearTime() {
                bitField0_ = (bitField0_ & ~0x00000001);
                time_ = 0L;

                return this;
            }

            private int quiet_;

            /**
             * <code>optional uint32 quiet = 2;</code>
             */
            public boolean hasQuiet() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional uint32 quiet = 2;</code>
             */
            public int getQuiet() {
                return quiet_;
            }

            /**
             * <code>optional uint32 quiet = 2;</code>
             */
            public Builder setQuiet(int value) {
                bitField0_ |= 0x00000002;
                quiet_ = value;

                return this;
            }

            /**
             * <code>optional uint32 quiet = 2;</code>
             */
            public Builder clearQuiet() {
                bitField0_ = (bitField0_ & ~0x00000002);
                quiet_ = 0;

                return this;
            }

            private int alert_;

            /**
             * <code>optional uint32 alert = 3;</code>
             */
            public boolean hasAlert() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>optional uint32 alert = 3;</code>
             */
            public int getAlert() {
                return alert_;
            }

            /**
             * <code>optional uint32 alert = 3;</code>
             */
            public Builder setAlert(int value) {
                bitField0_ |= 0x00000004;
                alert_ = value;

                return this;
            }

            /**
             * <code>optional uint32 alert = 3;</code>
             */
            public Builder clearAlert() {
                bitField0_ = (bitField0_ & ~0x00000004);
                alert_ = 0;

                return this;
            }

            private int move_;

            /**
             * <code>optional uint32 move = 4;</code>
             */
            public boolean hasMove() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <code>optional uint32 move = 4;</code>
             */
            public int getMove() {
                return move_;
            }

            /**
             * <code>optional uint32 move = 4;</code>
             */
            public Builder setMove(int value) {
                bitField0_ |= 0x00000008;
                move_ = value;

                return this;
            }

            /**
             * <code>optional uint32 move = 4;</code>
             */
            public Builder clearMove() {
                bitField0_ = (bitField0_ & ~0x00000008);
                move_ = 0;

                return this;
            }

            private int walk_;

            /**
             * <code>optional uint32 walk = 5;</code>
             */
            public boolean hasWalk() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <code>optional uint32 walk = 5;</code>
             */
            public int getWalk() {
                return walk_;
            }

            /**
             * <code>optional uint32 walk = 5;</code>
             */
            public Builder setWalk(int value) {
                bitField0_ |= 0x00000010;
                walk_ = value;

                return this;
            }

            /**
             * <code>optional uint32 walk = 5;</code>
             */
            public Builder clearWalk() {
                bitField0_ = (bitField0_ & ~0x00000010);
                walk_ = 0;

                return this;
            }

            private int run_;

            /**
             * <code>optional uint32 run = 6;</code>
             */
            public boolean hasRun() {
                return ((bitField0_ & 0x00000020) == 0x00000020);
            }

            /**
             * <code>optional uint32 run = 6;</code>
             */
            public int getRun() {
                return run_;
            }

            /**
             * <code>optional uint32 run = 6;</code>
             */
            public Builder setRun(int value) {
                bitField0_ |= 0x00000020;
                run_ = value;

                return this;
            }

            /**
             * <code>optional uint32 run = 6;</code>
             */
            public Builder clearRun() {
                bitField0_ = (bitField0_ & ~0x00000020);
                run_ = 0;

                return this;
            }

            private boolean bongFlag_;

            /**
             * <code>optional bool bong_flag = 7;</code>
             */
            public boolean hasBongFlag() {
                return ((bitField0_ & 0x00000040) == 0x00000040);
            }

            /**
             * <code>optional bool bong_flag = 7;</code>
             */
            public boolean getBongFlag() {
                return bongFlag_;
            }

            /**
             * <code>optional bool bong_flag = 7;</code>
             */
            public Builder setBongFlag(boolean value) {
                bitField0_ |= 0x00000040;
                bongFlag_ = value;

                return this;
            }

            /**
             * <code>optional bool bong_flag = 7;</code>
             */
            public Builder clearBongFlag() {
                bitField0_ = (bitField0_ & ~0x00000040);
                bongFlag_ = false;

                return this;
            }

            private boolean chargeFlag_;

            /**
             * <code>optional bool charge_flag = 8;</code>
             */
            public boolean hasChargeFlag() {
                return ((bitField0_ & 0x00000080) == 0x00000080);
            }

            /**
             * <code>optional bool charge_flag = 8;</code>
             */
            public boolean getChargeFlag() {
                return chargeFlag_;
            }

            /**
             * <code>optional bool charge_flag = 8;</code>
             */
            public Builder setChargeFlag(boolean value) {
                bitField0_ |= 0x00000080;
                chargeFlag_ = value;

                return this;
            }

            /**
             * <code>optional bool charge_flag = 8;</code>
             */
            public Builder clearChargeFlag() {
                bitField0_ = (bitField0_ & ~0x00000080);
                chargeFlag_ = false;

                return this;
            }

            private int amp_;

            /**
             * <code>optional uint32 amp = 9;</code>
             */
            public boolean hasAmp() {
                return ((bitField0_ & 0x00000100) == 0x00000100);
            }

            /**
             * <code>optional uint32 amp = 9;</code>
             */
            public int getAmp() {
                return amp_;
            }

            /**
             * <code>optional uint32 amp = 9;</code>
             */
            public Builder setAmp(int value) {
                bitField0_ |= 0x00000100;
                amp_ = value;

                return this;
            }

            /**
             * <code>optional uint32 amp = 9;</code>
             */
            public Builder clearAmp() {
                bitField0_ = (bitField0_ & ~0x00000100);
                amp_ = 0;

                return this;
            }

            private int step_;

            /**
             * <code>optional uint32 step = 10;</code>
             */
            public boolean hasStep() {
                return ((bitField0_ & 0x00000200) == 0x00000200);
            }

            /**
             * <code>optional uint32 step = 10;</code>
             */
            public int getStep() {
                return step_;
            }

            /**
             * <code>optional uint32 step = 10;</code>
             */
            public Builder setStep(int value) {
                bitField0_ |= 0x00000200;
                step_ = value;

                return this;
            }

            /**
             * <code>optional uint32 step = 10;</code>
             */
            public Builder clearStep() {
                bitField0_ = (bitField0_ & ~0x00000200);
                step_ = 0;

                return this;
            }

            // @@protoc_insertion_point(builder_scope:sport_raw)
        }

        static {
            defaultInstance = new sport_raw(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:sport_raw)
    }

    public interface heartOrBuilder extends
            // @@protoc_insertion_point(interface_extends:heart)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>optional int64 time = 1;</code>
         * <p/>
         * <pre>
         * count with minute
         * </pre>
         */
        boolean hasTime();

        /**
         * <code>optional int64 time = 1;</code>
         * <p/>
         * <pre>
         * count with minute
         * </pre>
         */
        long getTime();

        /**
         * <code>optional uint32 heart_rate = 2;</code>
         */
        boolean hasHeartRate();

        /**
         * <code>optional uint32 heart_rate = 2;</code>
         */
        int getHeartRate();
    }

    /**
     * Protobuf type {@code heart}
     */
    public static final class heart extends
            com.google.protobuf.GeneratedMessageLite implements
            // @@protoc_insertion_point(message_implements:heart)
            heartOrBuilder {
        // Use heart.newBuilder() to construct.
        private heart(com.google.protobuf.GeneratedMessageLite.Builder builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private heart(boolean noInit) {
            this.unknownFields = com.google.protobuf.ByteString.EMPTY;
        }

        private static final heart defaultInstance;

        public static heart getDefaultInstance() {
            return defaultInstance;
        }

        public heart getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.ByteString unknownFields;

        private heart(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.ByteString.Output unknownFieldsOutput =
                    com.google.protobuf.ByteString.newOutput();
            com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
                    com.google.protobuf.CodedOutputStream.newInstance(
                            unknownFieldsOutput);
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            time_ = input.readInt64();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            heartRate_ = input.readUInt32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                try {
                    unknownFieldsCodedOutput.flush();
                } catch (java.io.IOException e) {
                    // Should not happen
                } finally {
                    unknownFields = unknownFieldsOutput.toByteString();
                }
                makeExtensionsImmutable();
            }
        }

        public static com.google.protobuf.Parser<heart> PARSER =
                new com.google.protobuf.AbstractParser<heart>() {
                    public heart parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new heart(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<heart> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        public static final int TIME_FIELD_NUMBER = 1;
        private long time_;

        /**
         * <code>optional int64 time = 1;</code>
         * <p/>
         * <pre>
         * count with minute
         * </pre>
         */
        public boolean hasTime() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional int64 time = 1;</code>
         * <p/>
         * <pre>
         * count with minute
         * </pre>
         */
        public long getTime() {
            return time_;
        }

        public static final int HEART_RATE_FIELD_NUMBER = 2;
        private int heartRate_;

        /**
         * <code>optional uint32 heart_rate = 2;</code>
         */
        public boolean hasHeartRate() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>optional uint32 heart_rate = 2;</code>
         */
        public int getHeartRate() {
            return heartRate_;
        }

        private void initFields() {
            time_ = 0L;
            heartRate_ = 0;
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeInt64(1, time_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeUInt32(2, heartRate_);
            }
            output.writeRawBytes(unknownFields);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(1, time_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(2, heartRate_);
            }
            size += unknownFields.size();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static heart parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static heart parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static heart parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static heart parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static heart parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static heart parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static heart parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static heart parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static heart parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static heart parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(heart prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        /**
         * Protobuf type {@code heart}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        heart, Builder>
                implements
                // @@protoc_insertion_point(builder_implements:heart)
                heartOrBuilder {
            // Construct using BtRawData.heart.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                time_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000001);
                heartRate_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public heart getDefaultInstanceForType() {
                return heart.getDefaultInstance();
            }

            public heart build() {
                heart result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public heart buildPartial() {
                heart result = new heart(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.time_ = time_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.heartRate_ = heartRate_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(heart other) {
                if (other == heart.getDefaultInstance()) return this;
                if (other.hasTime()) {
                    setTime(other.getTime());
                }
                if (other.hasHeartRate()) {
                    setHeartRate(other.getHeartRate());
                }
                setUnknownFields(
                        getUnknownFields().concat(other.unknownFields));
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                heart parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (heart) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private long time_;

            /**
             * <code>optional int64 time = 1;</code>
             * <p/>
             * <pre>
             * count with minute
             * </pre>
             */
            public boolean hasTime() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional int64 time = 1;</code>
             * <p/>
             * <pre>
             * count with minute
             * </pre>
             */
            public long getTime() {
                return time_;
            }

            /**
             * <code>optional int64 time = 1;</code>
             * <p/>
             * <pre>
             * count with minute
             * </pre>
             */
            public Builder setTime(long value) {
                bitField0_ |= 0x00000001;
                time_ = value;

                return this;
            }

            /**
             * <code>optional int64 time = 1;</code>
             * <p/>
             * <pre>
             * count with minute
             * </pre>
             */
            public Builder clearTime() {
                bitField0_ = (bitField0_ & ~0x00000001);
                time_ = 0L;

                return this;
            }

            private int heartRate_;

            /**
             * <code>optional uint32 heart_rate = 2;</code>
             */
            public boolean hasHeartRate() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional uint32 heart_rate = 2;</code>
             */
            public int getHeartRate() {
                return heartRate_;
            }

            /**
             * <code>optional uint32 heart_rate = 2;</code>
             */
            public Builder setHeartRate(int value) {
                bitField0_ |= 0x00000002;
                heartRate_ = value;

                return this;
            }

            /**
             * <code>optional uint32 heart_rate = 2;</code>
             */
            public Builder clearHeartRate() {
                bitField0_ = (bitField0_ & ~0x00000002);
                heartRate_ = 0;

                return this;
            }

            // @@protoc_insertion_point(builder_scope:heart)
        }

        static {
            defaultInstance = new heart(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:heart)
    }

    public interface manual_sportOrBuilder extends
            // @@protoc_insertion_point(interface_extends:manual_sport)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>optional int64 start_time = 1;</code>
         * <p/>
         * <pre>
         * count with minute
         * </pre>
         */
        boolean hasStartTime();

        /**
         * <code>optional int64 start_time = 1;</code>
         * <p/>
         * <pre>
         * count with minute
         * </pre>
         */
        long getStartTime();

        /**
         * <code>optional int64 end_time = 2;</code>
         * <p/>
         * <pre>
         * count with minute
         * </pre>
         */
        boolean hasEndTime();

        /**
         * <code>optional int64 end_time = 2;</code>
         * <p/>
         * <pre>
         * count with minute
         * </pre>
         */
        long getEndTime();

        /**
         * <code>optional .MANUAL_SPROT_TYPE sport_type = 3;</code>
         */
        boolean hasSportType();

        /**
         * <code>optional .MANUAL_SPROT_TYPE sport_type = 3;</code>
         */
        MANUAL_SPROT_TYPE getSportType();
    }

    /**
     * Protobuf type {@code manual_sport}
     */
    public static final class manual_sport extends
            com.google.protobuf.GeneratedMessageLite implements
            // @@protoc_insertion_point(message_implements:manual_sport)
            manual_sportOrBuilder {
        // Use manual_sport.newBuilder() to construct.
        private manual_sport(com.google.protobuf.GeneratedMessageLite.Builder builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private manual_sport(boolean noInit) {
            this.unknownFields = com.google.protobuf.ByteString.EMPTY;
        }

        private static final manual_sport defaultInstance;

        public static manual_sport getDefaultInstance() {
            return defaultInstance;
        }

        public manual_sport getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.ByteString unknownFields;

        private manual_sport(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.ByteString.Output unknownFieldsOutput =
                    com.google.protobuf.ByteString.newOutput();
            com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
                    com.google.protobuf.CodedOutputStream.newInstance(
                            unknownFieldsOutput);
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            startTime_ = input.readInt64();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            endTime_ = input.readInt64();
                            break;
                        }
                        case 24: {
                            int rawValue = input.readEnum();
                            MANUAL_SPROT_TYPE value = MANUAL_SPROT_TYPE.valueOf(rawValue);
                            if (value == null) {
                                unknownFieldsCodedOutput.writeRawVarint32(tag);
                                unknownFieldsCodedOutput.writeRawVarint32(rawValue);
                            } else {
                                bitField0_ |= 0x00000004;
                                sportType_ = value;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                try {
                    unknownFieldsCodedOutput.flush();
                } catch (java.io.IOException e) {
                    // Should not happen
                } finally {
                    unknownFields = unknownFieldsOutput.toByteString();
                }
                makeExtensionsImmutable();
            }
        }

        public static com.google.protobuf.Parser<manual_sport> PARSER =
                new com.google.protobuf.AbstractParser<manual_sport>() {
                    public manual_sport parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new manual_sport(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<manual_sport> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        public static final int START_TIME_FIELD_NUMBER = 1;
        private long startTime_;

        /**
         * <code>optional int64 start_time = 1;</code>
         * <p/>
         * <pre>
         * count with minute
         * </pre>
         */
        public boolean hasStartTime() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional int64 start_time = 1;</code>
         * <p/>
         * <pre>
         * count with minute
         * </pre>
         */
        public long getStartTime() {
            return startTime_;
        }

        public static final int END_TIME_FIELD_NUMBER = 2;
        private long endTime_;

        /**
         * <code>optional int64 end_time = 2;</code>
         * <p/>
         * <pre>
         * count with minute
         * </pre>
         */
        public boolean hasEndTime() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>optional int64 end_time = 2;</code>
         * <p/>
         * <pre>
         * count with minute
         * </pre>
         */
        public long getEndTime() {
            return endTime_;
        }

        public static final int SPORT_TYPE_FIELD_NUMBER = 3;
        private MANUAL_SPROT_TYPE sportType_;

        /**
         * <code>optional .MANUAL_SPROT_TYPE sport_type = 3;</code>
         */
        public boolean hasSportType() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <code>optional .MANUAL_SPROT_TYPE sport_type = 3;</code>
         */
        public MANUAL_SPROT_TYPE getSportType() {
            return sportType_;
        }

        private void initFields() {
            startTime_ = 0L;
            endTime_ = 0L;
            sportType_ = MANUAL_SPROT_TYPE.RUN_OUTDOOR;
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeInt64(1, startTime_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeInt64(2, endTime_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeEnum(3, sportType_.getNumber());
            }
            output.writeRawBytes(unknownFields);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(1, startTime_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(2, endTime_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(3, sportType_.getNumber());
            }
            size += unknownFields.size();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static manual_sport parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static manual_sport parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static manual_sport parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static manual_sport parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static manual_sport parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static manual_sport parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static manual_sport parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static manual_sport parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static manual_sport parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static manual_sport parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(manual_sport prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        /**
         * Protobuf type {@code manual_sport}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        manual_sport, Builder>
                implements
                // @@protoc_insertion_point(builder_implements:manual_sport)
                manual_sportOrBuilder {
            // Construct using BtRawData.manual_sport.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                startTime_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000001);
                endTime_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000002);
                sportType_ = MANUAL_SPROT_TYPE.RUN_OUTDOOR;
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public manual_sport getDefaultInstanceForType() {
                return manual_sport.getDefaultInstance();
            }

            public manual_sport build() {
                manual_sport result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public manual_sport buildPartial() {
                manual_sport result = new manual_sport(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.startTime_ = startTime_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.endTime_ = endTime_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.sportType_ = sportType_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(manual_sport other) {
                if (other == manual_sport.getDefaultInstance()) return this;
                if (other.hasStartTime()) {
                    setStartTime(other.getStartTime());
                }
                if (other.hasEndTime()) {
                    setEndTime(other.getEndTime());
                }
                if (other.hasSportType()) {
                    setSportType(other.getSportType());
                }
                setUnknownFields(
                        getUnknownFields().concat(other.unknownFields));
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                manual_sport parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (manual_sport) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private long startTime_;

            /**
             * <code>optional int64 start_time = 1;</code>
             * <p/>
             * <pre>
             * count with minute
             * </pre>
             */
            public boolean hasStartTime() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional int64 start_time = 1;</code>
             * <p/>
             * <pre>
             * count with minute
             * </pre>
             */
            public long getStartTime() {
                return startTime_;
            }

            /**
             * <code>optional int64 start_time = 1;</code>
             * <p/>
             * <pre>
             * count with minute
             * </pre>
             */
            public Builder setStartTime(long value) {
                bitField0_ |= 0x00000001;
                startTime_ = value;

                return this;
            }

            /**
             * <code>optional int64 start_time = 1;</code>
             * <p/>
             * <pre>
             * count with minute
             * </pre>
             */
            public Builder clearStartTime() {
                bitField0_ = (bitField0_ & ~0x00000001);
                startTime_ = 0L;

                return this;
            }

            private long endTime_;

            /**
             * <code>optional int64 end_time = 2;</code>
             * <p/>
             * <pre>
             * count with minute
             * </pre>
             */
            public boolean hasEndTime() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional int64 end_time = 2;</code>
             * <p/>
             * <pre>
             * count with minute
             * </pre>
             */
            public long getEndTime() {
                return endTime_;
            }

            /**
             * <code>optional int64 end_time = 2;</code>
             * <p/>
             * <pre>
             * count with minute
             * </pre>
             */
            public Builder setEndTime(long value) {
                bitField0_ |= 0x00000002;
                endTime_ = value;

                return this;
            }

            /**
             * <code>optional int64 end_time = 2;</code>
             * <p/>
             * <pre>
             * count with minute
             * </pre>
             */
            public Builder clearEndTime() {
                bitField0_ = (bitField0_ & ~0x00000002);
                endTime_ = 0L;

                return this;
            }

            private MANUAL_SPROT_TYPE sportType_ = MANUAL_SPROT_TYPE.RUN_OUTDOOR;

            /**
             * <code>optional .MANUAL_SPROT_TYPE sport_type = 3;</code>
             */
            public boolean hasSportType() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>optional .MANUAL_SPROT_TYPE sport_type = 3;</code>
             */
            public MANUAL_SPROT_TYPE getSportType() {
                return sportType_;
            }

            /**
             * <code>optional .MANUAL_SPROT_TYPE sport_type = 3;</code>
             */
            public Builder setSportType(MANUAL_SPROT_TYPE value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                sportType_ = value;

                return this;
            }

            /**
             * <code>optional .MANUAL_SPROT_TYPE sport_type = 3;</code>
             */
            public Builder clearSportType() {
                bitField0_ = (bitField0_ & ~0x00000004);
                sportType_ = MANUAL_SPROT_TYPE.RUN_OUTDOOR;

                return this;
            }

            // @@protoc_insertion_point(builder_scope:manual_sport)
        }

        static {
            defaultInstance = new manual_sport(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:manual_sport)
    }


    static {
    }

    // @@protoc_insertion_point(outer_class_scope)
}
