package com.ble.lib.x2.proto;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bt_nx2_weather.proto

public final class BtNx2Weather {
    private BtNx2Weather() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public interface bt_nx2_weatherOrBuilder extends
            // @@protoc_insertion_point(interface_extends:bt_nx2_weather)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>optional .NOW now = 1;</code>
         */
        boolean hasNow();

        /**
         * <code>optional .NOW now = 1;</code>
         */
        NOW getNow();

        /**
         * <code>repeated .WEATHER weather = 2;</code>
         * <p/>
         * <pre>
         * most repeated 2
         * </pre>
         */
        java.util.List<WEATHER>
        getWeatherList();

        /**
         * <code>repeated .WEATHER weather = 2;</code>
         * <p/>
         * <pre>
         * most repeated 2
         * </pre>
         */
        WEATHER getWeather(int index);

        /**
         * <code>repeated .WEATHER weather = 2;</code>
         * <p/>
         * <pre>
         * most repeated 2
         * </pre>
         */
        int getWeatherCount();

        /**
         * <code>optional .TODAY today = 3;</code>
         */
        boolean hasToday();

        /**
         * <code>optional .TODAY today = 3;</code>
         */
        TODAY getToday();

        /**
         * <code>optional bytes city = 4;</code>
         */
        boolean hasCity();

        /**
         * <code>optional bytes city = 4;</code>
         */
        com.google.protobuf.ByteString getCity();
    }

    /**
     * Protobuf type {@code bt_nx2_weather}
     */
    public static final class bt_nx2_weather extends
            com.google.protobuf.GeneratedMessageLite implements
            // @@protoc_insertion_point(message_implements:bt_nx2_weather)
            bt_nx2_weatherOrBuilder {
        // Use bt_nx2_weather.newBuilder() to construct.
        private bt_nx2_weather(com.google.protobuf.GeneratedMessageLite.Builder builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private bt_nx2_weather(boolean noInit) {
            this.unknownFields = com.google.protobuf.ByteString.EMPTY;
        }

        private static final bt_nx2_weather defaultInstance;

        public static bt_nx2_weather getDefaultInstance() {
            return defaultInstance;
        }

        public bt_nx2_weather getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.ByteString unknownFields;

        private bt_nx2_weather(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.ByteString.Output unknownFieldsOutput =
                    com.google.protobuf.ByteString.newOutput();
            com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
                    com.google.protobuf.CodedOutputStream.newInstance(
                            unknownFieldsOutput);
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            NOW.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                                subBuilder = now_.toBuilder();
                            }
                            now_ = input.readMessage(NOW.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(now_);
                                now_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000001;
                            break;
                        }
                        case 18: {
                            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                                weather_ = new java.util.ArrayList<WEATHER>();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            weather_.add(input.readMessage(WEATHER.PARSER, extensionRegistry));
                            break;
                        }
                        case 26: {
                            TODAY.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                                subBuilder = today_.toBuilder();
                            }
                            today_ = input.readMessage(TODAY.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(today_);
                                today_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000002;
                            break;
                        }
                        case 34: {
                            bitField0_ |= 0x00000004;
                            city_ = input.readBytes();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    weather_ = java.util.Collections.unmodifiableList(weather_);
                }
                try {
                    unknownFieldsCodedOutput.flush();
                } catch (java.io.IOException e) {
                    // Should not happen
                } finally {
                    unknownFields = unknownFieldsOutput.toByteString();
                }
                makeExtensionsImmutable();
            }
        }

        public static com.google.protobuf.Parser<bt_nx2_weather> PARSER =
                new com.google.protobuf.AbstractParser<bt_nx2_weather>() {
                    public bt_nx2_weather parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new bt_nx2_weather(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<bt_nx2_weather> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        public static final int NOW_FIELD_NUMBER = 1;
        private NOW now_;

        /**
         * <code>optional .NOW now = 1;</code>
         */
        public boolean hasNow() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional .NOW now = 1;</code>
         */
        public NOW getNow() {
            return now_;
        }

        public static final int WEATHER_FIELD_NUMBER = 2;
        private java.util.List<WEATHER> weather_;

        /**
         * <code>repeated .WEATHER weather = 2;</code>
         * <p/>
         * <pre>
         * most repeated 2
         * </pre>
         */
        public java.util.List<WEATHER> getWeatherList() {
            return weather_;
        }

        /**
         * <code>repeated .WEATHER weather = 2;</code>
         * <p/>
         * <pre>
         * most repeated 2
         * </pre>
         */
        public java.util.List<? extends WEATHEROrBuilder>
        getWeatherOrBuilderList() {
            return weather_;
        }

        /**
         * <code>repeated .WEATHER weather = 2;</code>
         * <p/>
         * <pre>
         * most repeated 2
         * </pre>
         */
        public int getWeatherCount() {
            return weather_.size();
        }

        /**
         * <code>repeated .WEATHER weather = 2;</code>
         * <p/>
         * <pre>
         * most repeated 2
         * </pre>
         */
        public WEATHER getWeather(int index) {
            return weather_.get(index);
        }

        /**
         * <code>repeated .WEATHER weather = 2;</code>
         * <p/>
         * <pre>
         * most repeated 2
         * </pre>
         */
        public WEATHEROrBuilder getWeatherOrBuilder(
                int index) {
            return weather_.get(index);
        }

        public static final int TODAY_FIELD_NUMBER = 3;
        private TODAY today_;

        /**
         * <code>optional .TODAY today = 3;</code>
         */
        public boolean hasToday() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>optional .TODAY today = 3;</code>
         */
        public TODAY getToday() {
            return today_;
        }

        public static final int CITY_FIELD_NUMBER = 4;
        private com.google.protobuf.ByteString city_;

        /**
         * <code>optional bytes city = 4;</code>
         */
        public boolean hasCity() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <code>optional bytes city = 4;</code>
         */
        public com.google.protobuf.ByteString getCity() {
            return city_;
        }

        private void initFields() {
            now_ = NOW.getDefaultInstance();
            weather_ = java.util.Collections.emptyList();
            today_ = TODAY.getDefaultInstance();
            city_ = com.google.protobuf.ByteString.EMPTY;
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeMessage(1, now_);
            }
            for (int i = 0; i < weather_.size(); i++) {
                output.writeMessage(2, weather_.get(i));
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeMessage(3, today_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeBytes(4, city_);
            }
            output.writeRawBytes(unknownFields);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, now_);
            }
            for (int i = 0; i < weather_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, weather_.get(i));
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, today_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(4, city_);
            }
            size += unknownFields.size();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static bt_nx2_weather parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static bt_nx2_weather parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static bt_nx2_weather parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static bt_nx2_weather parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static bt_nx2_weather parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static bt_nx2_weather parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static bt_nx2_weather parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static bt_nx2_weather parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static bt_nx2_weather parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static bt_nx2_weather parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(bt_nx2_weather prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        /**
         * Protobuf type {@code bt_nx2_weather}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        bt_nx2_weather, Builder>
                implements
                // @@protoc_insertion_point(builder_implements:bt_nx2_weather)
                bt_nx2_weatherOrBuilder {
            // Construct using BtNx2Weather.bt_nx2_weather.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                now_ = NOW.getDefaultInstance();
                bitField0_ = (bitField0_ & ~0x00000001);
                weather_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);
                today_ = TODAY.getDefaultInstance();
                bitField0_ = (bitField0_ & ~0x00000004);
                city_ = com.google.protobuf.ByteString.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000008);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public bt_nx2_weather getDefaultInstanceForType() {
                return bt_nx2_weather.getDefaultInstance();
            }

            public bt_nx2_weather build() {
                bt_nx2_weather result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public bt_nx2_weather buildPartial() {
                bt_nx2_weather result = new bt_nx2_weather(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.now_ = now_;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    weather_ = java.util.Collections.unmodifiableList(weather_);
                    bitField0_ = (bitField0_ & ~0x00000002);
                }
                result.weather_ = weather_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.today_ = today_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.city_ = city_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(bt_nx2_weather other) {
                if (other == bt_nx2_weather.getDefaultInstance()) return this;
                if (other.hasNow()) {
                    mergeNow(other.getNow());
                }
                if (!other.weather_.isEmpty()) {
                    if (weather_.isEmpty()) {
                        weather_ = other.weather_;
                        bitField0_ = (bitField0_ & ~0x00000002);
                    } else {
                        ensureWeatherIsMutable();
                        weather_.addAll(other.weather_);
                    }

                }
                if (other.hasToday()) {
                    mergeToday(other.getToday());
                }
                if (other.hasCity()) {
                    setCity(other.getCity());
                }
                setUnknownFields(
                        getUnknownFields().concat(other.unknownFields));
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                bt_nx2_weather parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (bt_nx2_weather) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private NOW now_ = NOW.getDefaultInstance();

            /**
             * <code>optional .NOW now = 1;</code>
             */
            public boolean hasNow() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional .NOW now = 1;</code>
             */
            public NOW getNow() {
                return now_;
            }

            /**
             * <code>optional .NOW now = 1;</code>
             */
            public Builder setNow(NOW value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                now_ = value;

                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>optional .NOW now = 1;</code>
             */
            public Builder setNow(
                    NOW.Builder builderForValue) {
                now_ = builderForValue.build();

                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>optional .NOW now = 1;</code>
             */
            public Builder mergeNow(NOW value) {
                if (((bitField0_ & 0x00000001) == 0x00000001) &&
                        now_ != NOW.getDefaultInstance()) {
                    now_ =
                            NOW.newBuilder(now_).mergeFrom(value).buildPartial();
                } else {
                    now_ = value;
                }

                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>optional .NOW now = 1;</code>
             */
            public Builder clearNow() {
                now_ = NOW.getDefaultInstance();

                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            private java.util.List<WEATHER> weather_ =
                    java.util.Collections.emptyList();

            private void ensureWeatherIsMutable() {
                if (!((bitField0_ & 0x00000002) == 0x00000002)) {
                    weather_ = new java.util.ArrayList<WEATHER>(weather_);
                    bitField0_ |= 0x00000002;
                }
            }

            /**
             * <code>repeated .WEATHER weather = 2;</code>
             * <p/>
             * <pre>
             * most repeated 2
             * </pre>
             */
            public java.util.List<WEATHER> getWeatherList() {
                return java.util.Collections.unmodifiableList(weather_);
            }

            /**
             * <code>repeated .WEATHER weather = 2;</code>
             * <p/>
             * <pre>
             * most repeated 2
             * </pre>
             */
            public int getWeatherCount() {
                return weather_.size();
            }

            /**
             * <code>repeated .WEATHER weather = 2;</code>
             * <p/>
             * <pre>
             * most repeated 2
             * </pre>
             */
            public WEATHER getWeather(int index) {
                return weather_.get(index);
            }

            /**
             * <code>repeated .WEATHER weather = 2;</code>
             * <p/>
             * <pre>
             * most repeated 2
             * </pre>
             */
            public Builder setWeather(
                    int index, WEATHER value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureWeatherIsMutable();
                weather_.set(index, value);

                return this;
            }

            /**
             * <code>repeated .WEATHER weather = 2;</code>
             * <p/>
             * <pre>
             * most repeated 2
             * </pre>
             */
            public Builder setWeather(
                    int index, WEATHER.Builder builderForValue) {
                ensureWeatherIsMutable();
                weather_.set(index, builderForValue.build());

                return this;
            }

            /**
             * <code>repeated .WEATHER weather = 2;</code>
             * <p/>
             * <pre>
             * most repeated 2
             * </pre>
             */
            public Builder addWeather(WEATHER value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureWeatherIsMutable();
                weather_.add(value);

                return this;
            }

            /**
             * <code>repeated .WEATHER weather = 2;</code>
             * <p/>
             * <pre>
             * most repeated 2
             * </pre>
             */
            public Builder addWeather(
                    int index, WEATHER value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureWeatherIsMutable();
                weather_.add(index, value);

                return this;
            }

            /**
             * <code>repeated .WEATHER weather = 2;</code>
             * <p/>
             * <pre>
             * most repeated 2
             * </pre>
             */
            public Builder addWeather(
                    WEATHER.Builder builderForValue) {
                ensureWeatherIsMutable();
                weather_.add(builderForValue.build());

                return this;
            }

            /**
             * <code>repeated .WEATHER weather = 2;</code>
             * <p/>
             * <pre>
             * most repeated 2
             * </pre>
             */
            public Builder addWeather(
                    int index, WEATHER.Builder builderForValue) {
                ensureWeatherIsMutable();
                weather_.add(index, builderForValue.build());

                return this;
            }

            /**
             * <code>repeated .WEATHER weather = 2;</code>
             * <p/>
             * <pre>
             * most repeated 2
             * </pre>
             */
            public Builder addAllWeather(
                    Iterable<? extends WEATHER> values) {
                ensureWeatherIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, weather_);

                return this;
            }

            /**
             * <code>repeated .WEATHER weather = 2;</code>
             * <p/>
             * <pre>
             * most repeated 2
             * </pre>
             */
            public Builder clearWeather() {
                weather_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);

                return this;
            }

            /**
             * <code>repeated .WEATHER weather = 2;</code>
             * <p/>
             * <pre>
             * most repeated 2
             * </pre>
             */
            public Builder removeWeather(int index) {
                ensureWeatherIsMutable();
                weather_.remove(index);

                return this;
            }

            private TODAY today_ = TODAY.getDefaultInstance();

            /**
             * <code>optional .TODAY today = 3;</code>
             */
            public boolean hasToday() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>optional .TODAY today = 3;</code>
             */
            public TODAY getToday() {
                return today_;
            }

            /**
             * <code>optional .TODAY today = 3;</code>
             */
            public Builder setToday(TODAY value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                today_ = value;

                bitField0_ |= 0x00000004;
                return this;
            }

            /**
             * <code>optional .TODAY today = 3;</code>
             */
            public Builder setToday(
                    TODAY.Builder builderForValue) {
                today_ = builderForValue.build();

                bitField0_ |= 0x00000004;
                return this;
            }

            /**
             * <code>optional .TODAY today = 3;</code>
             */
            public Builder mergeToday(TODAY value) {
                if (((bitField0_ & 0x00000004) == 0x00000004) &&
                        today_ != TODAY.getDefaultInstance()) {
                    today_ =
                            TODAY.newBuilder(today_).mergeFrom(value).buildPartial();
                } else {
                    today_ = value;
                }

                bitField0_ |= 0x00000004;
                return this;
            }

            /**
             * <code>optional .TODAY today = 3;</code>
             */
            public Builder clearToday() {
                today_ = TODAY.getDefaultInstance();

                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            private com.google.protobuf.ByteString city_ = com.google.protobuf.ByteString.EMPTY;

            /**
             * <code>optional bytes city = 4;</code>
             */
            public boolean hasCity() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <code>optional bytes city = 4;</code>
             */
            public com.google.protobuf.ByteString getCity() {
                return city_;
            }

            /**
             * <code>optional bytes city = 4;</code>
             */
            public Builder setCity(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000008;
                city_ = value;

                return this;
            }

            /**
             * <code>optional bytes city = 4;</code>
             */
            public Builder clearCity() {
                bitField0_ = (bitField0_ & ~0x00000008);
                city_ = getDefaultInstance().getCity();

                return this;
            }

            // @@protoc_insertion_point(builder_scope:bt_nx2_weather)
        }

        static {
            defaultInstance = new bt_nx2_weather(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:bt_nx2_weather)
    }

    public interface WEATHEROrBuilder extends
            // @@protoc_insertion_point(interface_extends:WEATHER)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>optional int64 date = 1;</code>
         * <p/>
         * <pre>
         * time stamp
         * </pre>
         */
        boolean hasDate();

        /**
         * <code>optional int64 date = 1;</code>
         * <p/>
         * <pre>
         * time stamp
         * </pre>
         */
        long getDate();

        /**
         * <code>optional uint32 weather = 2;</code>
         * <p/>
         * <pre>
         * code
         * </pre>
         */
        boolean hasWeather();

        /**
         * <code>optional uint32 weather = 2;</code>
         * <p/>
         * <pre>
         * code
         * </pre>
         */
        int getWeather();

        /**
         * <code>optional sint32 tmp_high = 3;</code>
         */
        boolean hasTmpHigh();

        /**
         * <code>optional sint32 tmp_high = 3;</code>
         */
        int getTmpHigh();

        /**
         * <code>optional sint32 tmp_low = 4;</code>
         */
        boolean hasTmpLow();

        /**
         * <code>optional sint32 tmp_low = 4;</code>
         */
        int getTmpLow();

        /**
         * <code>optional .weather_info weather_info = 5;</code>
         */
        boolean hasWeatherInfo();

        /**
         * <code>optional .weather_info weather_info = 5;</code>
         */
        weather_info getWeatherInfo();
    }

    /**
     * Protobuf type {@code WEATHER}
     */
    public static final class WEATHER extends
            com.google.protobuf.GeneratedMessageLite implements
            // @@protoc_insertion_point(message_implements:WEATHER)
            WEATHEROrBuilder {
        // Use WEATHER.newBuilder() to construct.
        private WEATHER(com.google.protobuf.GeneratedMessageLite.Builder builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private WEATHER(boolean noInit) {
            this.unknownFields = com.google.protobuf.ByteString.EMPTY;
        }

        private static final WEATHER defaultInstance;

        public static WEATHER getDefaultInstance() {
            return defaultInstance;
        }

        public WEATHER getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.ByteString unknownFields;

        private WEATHER(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.ByteString.Output unknownFieldsOutput =
                    com.google.protobuf.ByteString.newOutput();
            com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
                    com.google.protobuf.CodedOutputStream.newInstance(
                            unknownFieldsOutput);
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            date_ = input.readInt64();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            weather_ = input.readUInt32();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            tmpHigh_ = input.readSInt32();
                            break;
                        }
                        case 32: {
                            bitField0_ |= 0x00000008;
                            tmpLow_ = input.readSInt32();
                            break;
                        }
                        case 42: {
                            weather_info.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                                subBuilder = weatherInfo_.toBuilder();
                            }
                            weatherInfo_ = input.readMessage(weather_info.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(weatherInfo_);
                                weatherInfo_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000010;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                try {
                    unknownFieldsCodedOutput.flush();
                } catch (java.io.IOException e) {
                    // Should not happen
                } finally {
                    unknownFields = unknownFieldsOutput.toByteString();
                }
                makeExtensionsImmutable();
            }
        }

        public static com.google.protobuf.Parser<WEATHER> PARSER =
                new com.google.protobuf.AbstractParser<WEATHER>() {
                    public WEATHER parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new WEATHER(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<WEATHER> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        public static final int DATE_FIELD_NUMBER = 1;
        private long date_;

        /**
         * <code>optional int64 date = 1;</code>
         * <p/>
         * <pre>
         * time stamp
         * </pre>
         */
        public boolean hasDate() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional int64 date = 1;</code>
         * <p/>
         * <pre>
         * time stamp
         * </pre>
         */
        public long getDate() {
            return date_;
        }

        public static final int WEATHER_FIELD_NUMBER = 2;
        private int weather_;

        /**
         * <code>optional uint32 weather = 2;</code>
         * <p/>
         * <pre>
         * code
         * </pre>
         */
        public boolean hasWeather() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>optional uint32 weather = 2;</code>
         * <p/>
         * <pre>
         * code
         * </pre>
         */
        public int getWeather() {
            return weather_;
        }

        public static final int TMP_HIGH_FIELD_NUMBER = 3;
        private int tmpHigh_;

        /**
         * <code>optional sint32 tmp_high = 3;</code>
         */
        public boolean hasTmpHigh() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <code>optional sint32 tmp_high = 3;</code>
         */
        public int getTmpHigh() {
            return tmpHigh_;
        }

        public static final int TMP_LOW_FIELD_NUMBER = 4;
        private int tmpLow_;

        /**
         * <code>optional sint32 tmp_low = 4;</code>
         */
        public boolean hasTmpLow() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <code>optional sint32 tmp_low = 4;</code>
         */
        public int getTmpLow() {
            return tmpLow_;
        }

        public static final int WEATHER_INFO_FIELD_NUMBER = 5;
        private weather_info weatherInfo_;

        /**
         * <code>optional .weather_info weather_info = 5;</code>
         */
        public boolean hasWeatherInfo() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <code>optional .weather_info weather_info = 5;</code>
         */
        public weather_info getWeatherInfo() {
            return weatherInfo_;
        }

        private void initFields() {
            date_ = 0L;
            weather_ = 0;
            tmpHigh_ = 0;
            tmpLow_ = 0;
            weatherInfo_ = weather_info.getDefaultInstance();
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeInt64(1, date_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeUInt32(2, weather_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeSInt32(3, tmpHigh_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeSInt32(4, tmpLow_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeMessage(5, weatherInfo_);
            }
            output.writeRawBytes(unknownFields);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(1, date_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(2, weather_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSInt32Size(3, tmpHigh_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSInt32Size(4, tmpLow_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(5, weatherInfo_);
            }
            size += unknownFields.size();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static WEATHER parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static WEATHER parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static WEATHER parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static WEATHER parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static WEATHER parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static WEATHER parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static WEATHER parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static WEATHER parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static WEATHER parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static WEATHER parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(WEATHER prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        /**
         * Protobuf type {@code WEATHER}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        WEATHER, Builder>
                implements
                // @@protoc_insertion_point(builder_implements:WEATHER)
                WEATHEROrBuilder {
            // Construct using BtNx2Weather.WEATHER.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                date_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000001);
                weather_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                tmpHigh_ = 0;
                bitField0_ = (bitField0_ & ~0x00000004);
                tmpLow_ = 0;
                bitField0_ = (bitField0_ & ~0x00000008);
                weatherInfo_ = weather_info.getDefaultInstance();
                bitField0_ = (bitField0_ & ~0x00000010);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public WEATHER getDefaultInstanceForType() {
                return WEATHER.getDefaultInstance();
            }

            public WEATHER build() {
                WEATHER result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public WEATHER buildPartial() {
                WEATHER result = new WEATHER(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.date_ = date_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.weather_ = weather_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.tmpHigh_ = tmpHigh_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.tmpLow_ = tmpLow_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.weatherInfo_ = weatherInfo_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(WEATHER other) {
                if (other == WEATHER.getDefaultInstance()) return this;
                if (other.hasDate()) {
                    setDate(other.getDate());
                }
                if (other.hasWeather()) {
                    setWeather(other.getWeather());
                }
                if (other.hasTmpHigh()) {
                    setTmpHigh(other.getTmpHigh());
                }
                if (other.hasTmpLow()) {
                    setTmpLow(other.getTmpLow());
                }
                if (other.hasWeatherInfo()) {
                    mergeWeatherInfo(other.getWeatherInfo());
                }
                setUnknownFields(
                        getUnknownFields().concat(other.unknownFields));
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                WEATHER parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (WEATHER) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private long date_;

            /**
             * <code>optional int64 date = 1;</code>
             * <p/>
             * <pre>
             * time stamp
             * </pre>
             */
            public boolean hasDate() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional int64 date = 1;</code>
             * <p/>
             * <pre>
             * time stamp
             * </pre>
             */
            public long getDate() {
                return date_;
            }

            /**
             * <code>optional int64 date = 1;</code>
             * <p/>
             * <pre>
             * time stamp
             * </pre>
             */
            public Builder setDate(long value) {
                bitField0_ |= 0x00000001;
                date_ = value;

                return this;
            }

            /**
             * <code>optional int64 date = 1;</code>
             * <p/>
             * <pre>
             * time stamp
             * </pre>
             */
            public Builder clearDate() {
                bitField0_ = (bitField0_ & ~0x00000001);
                date_ = 0L;

                return this;
            }

            private int weather_;

            /**
             * <code>optional uint32 weather = 2;</code>
             * <p/>
             * <pre>
             * code
             * </pre>
             */
            public boolean hasWeather() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional uint32 weather = 2;</code>
             * <p/>
             * <pre>
             * code
             * </pre>
             */
            public int getWeather() {
                return weather_;
            }

            /**
             * <code>optional uint32 weather = 2;</code>
             * <p/>
             * <pre>
             * code
             * </pre>
             */
            public Builder setWeather(int value) {
                bitField0_ |= 0x00000002;
                weather_ = value;

                return this;
            }

            /**
             * <code>optional uint32 weather = 2;</code>
             * <p/>
             * <pre>
             * code
             * </pre>
             */
            public Builder clearWeather() {
                bitField0_ = (bitField0_ & ~0x00000002);
                weather_ = 0;

                return this;
            }

            private int tmpHigh_;

            /**
             * <code>optional sint32 tmp_high = 3;</code>
             */
            public boolean hasTmpHigh() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>optional sint32 tmp_high = 3;</code>
             */
            public int getTmpHigh() {
                return tmpHigh_;
            }

            /**
             * <code>optional sint32 tmp_high = 3;</code>
             */
            public Builder setTmpHigh(int value) {
                bitField0_ |= 0x00000004;
                tmpHigh_ = value;

                return this;
            }

            /**
             * <code>optional sint32 tmp_high = 3;</code>
             */
            public Builder clearTmpHigh() {
                bitField0_ = (bitField0_ & ~0x00000004);
                tmpHigh_ = 0;

                return this;
            }

            private int tmpLow_;

            /**
             * <code>optional sint32 tmp_low = 4;</code>
             */
            public boolean hasTmpLow() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <code>optional sint32 tmp_low = 4;</code>
             */
            public int getTmpLow() {
                return tmpLow_;
            }

            /**
             * <code>optional sint32 tmp_low = 4;</code>
             */
            public Builder setTmpLow(int value) {
                bitField0_ |= 0x00000008;
                tmpLow_ = value;

                return this;
            }

            /**
             * <code>optional sint32 tmp_low = 4;</code>
             */
            public Builder clearTmpLow() {
                bitField0_ = (bitField0_ & ~0x00000008);
                tmpLow_ = 0;

                return this;
            }

            private weather_info weatherInfo_ = weather_info.getDefaultInstance();

            /**
             * <code>optional .weather_info weather_info = 5;</code>
             */
            public boolean hasWeatherInfo() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <code>optional .weather_info weather_info = 5;</code>
             */
            public weather_info getWeatherInfo() {
                return weatherInfo_;
            }

            /**
             * <code>optional .weather_info weather_info = 5;</code>
             */
            public Builder setWeatherInfo(weather_info value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                weatherInfo_ = value;

                bitField0_ |= 0x00000010;
                return this;
            }

            /**
             * <code>optional .weather_info weather_info = 5;</code>
             */
            public Builder setWeatherInfo(
                    weather_info.Builder builderForValue) {
                weatherInfo_ = builderForValue.build();

                bitField0_ |= 0x00000010;
                return this;
            }

            /**
             * <code>optional .weather_info weather_info = 5;</code>
             */
            public Builder mergeWeatherInfo(weather_info value) {
                if (((bitField0_ & 0x00000010) == 0x00000010) &&
                        weatherInfo_ != weather_info.getDefaultInstance()) {
                    weatherInfo_ =
                            weather_info.newBuilder(weatherInfo_).mergeFrom(value).buildPartial();
                } else {
                    weatherInfo_ = value;
                }

                bitField0_ |= 0x00000010;
                return this;
            }

            /**
             * <code>optional .weather_info weather_info = 5;</code>
             */
            public Builder clearWeatherInfo() {
                weatherInfo_ = weather_info.getDefaultInstance();

                bitField0_ = (bitField0_ & ~0x00000010);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:WEATHER)
        }

        static {
            defaultInstance = new WEATHER(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:WEATHER)
    }

    public interface NOWOrBuilder extends
            // @@protoc_insertion_point(interface_extends:NOW)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>optional int64 time = 1;</code>
         */
        boolean hasTime();

        /**
         * <code>optional int64 time = 1;</code>
         */
        long getTime();

        /**
         * <code>optional sint32 tmp = 2;</code>
         */
        boolean hasTmp();

        /**
         * <code>optional sint32 tmp = 2;</code>
         */
        int getTmp();
    }

    /**
     * Protobuf type {@code NOW}
     */
    public static final class NOW extends
            com.google.protobuf.GeneratedMessageLite implements
            // @@protoc_insertion_point(message_implements:NOW)
            NOWOrBuilder {
        // Use NOW.newBuilder() to construct.
        private NOW(com.google.protobuf.GeneratedMessageLite.Builder builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private NOW(boolean noInit) {
            this.unknownFields = com.google.protobuf.ByteString.EMPTY;
        }

        private static final NOW defaultInstance;

        public static NOW getDefaultInstance() {
            return defaultInstance;
        }

        public NOW getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.ByteString unknownFields;

        private NOW(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.ByteString.Output unknownFieldsOutput =
                    com.google.protobuf.ByteString.newOutput();
            com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
                    com.google.protobuf.CodedOutputStream.newInstance(
                            unknownFieldsOutput);
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            time_ = input.readInt64();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            tmp_ = input.readSInt32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                try {
                    unknownFieldsCodedOutput.flush();
                } catch (java.io.IOException e) {
                    // Should not happen
                } finally {
                    unknownFields = unknownFieldsOutput.toByteString();
                }
                makeExtensionsImmutable();
            }
        }

        public static com.google.protobuf.Parser<NOW> PARSER =
                new com.google.protobuf.AbstractParser<NOW>() {
                    public NOW parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new NOW(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<NOW> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        public static final int TIME_FIELD_NUMBER = 1;
        private long time_;

        /**
         * <code>optional int64 time = 1;</code>
         */
        public boolean hasTime() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional int64 time = 1;</code>
         */
        public long getTime() {
            return time_;
        }

        public static final int TMP_FIELD_NUMBER = 2;
        private int tmp_;

        /**
         * <code>optional sint32 tmp = 2;</code>
         */
        public boolean hasTmp() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>optional sint32 tmp = 2;</code>
         */
        public int getTmp() {
            return tmp_;
        }

        private void initFields() {
            time_ = 0L;
            tmp_ = 0;
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeInt64(1, time_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeSInt32(2, tmp_);
            }
            output.writeRawBytes(unknownFields);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(1, time_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeSInt32Size(2, tmp_);
            }
            size += unknownFields.size();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static NOW parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static NOW parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static NOW parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static NOW parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static NOW parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static NOW parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static NOW parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static NOW parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static NOW parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static NOW parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(NOW prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        /**
         * Protobuf type {@code NOW}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        NOW, Builder>
                implements
                // @@protoc_insertion_point(builder_implements:NOW)
                NOWOrBuilder {
            // Construct using BtNx2Weather.NOW.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                time_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000001);
                tmp_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public NOW getDefaultInstanceForType() {
                return NOW.getDefaultInstance();
            }

            public NOW build() {
                NOW result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public NOW buildPartial() {
                NOW result = new NOW(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.time_ = time_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.tmp_ = tmp_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(NOW other) {
                if (other == NOW.getDefaultInstance()) return this;
                if (other.hasTime()) {
                    setTime(other.getTime());
                }
                if (other.hasTmp()) {
                    setTmp(other.getTmp());
                }
                setUnknownFields(
                        getUnknownFields().concat(other.unknownFields));
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                NOW parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (NOW) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private long time_;

            /**
             * <code>optional int64 time = 1;</code>
             */
            public boolean hasTime() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional int64 time = 1;</code>
             */
            public long getTime() {
                return time_;
            }

            /**
             * <code>optional int64 time = 1;</code>
             */
            public Builder setTime(long value) {
                bitField0_ |= 0x00000001;
                time_ = value;

                return this;
            }

            /**
             * <code>optional int64 time = 1;</code>
             */
            public Builder clearTime() {
                bitField0_ = (bitField0_ & ~0x00000001);
                time_ = 0L;

                return this;
            }

            private int tmp_;

            /**
             * <code>optional sint32 tmp = 2;</code>
             */
            public boolean hasTmp() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional sint32 tmp = 2;</code>
             */
            public int getTmp() {
                return tmp_;
            }

            /**
             * <code>optional sint32 tmp = 2;</code>
             */
            public Builder setTmp(int value) {
                bitField0_ |= 0x00000002;
                tmp_ = value;

                return this;
            }

            /**
             * <code>optional sint32 tmp = 2;</code>
             */
            public Builder clearTmp() {
                bitField0_ = (bitField0_ & ~0x00000002);
                tmp_ = 0;

                return this;
            }

            // @@protoc_insertion_point(builder_scope:NOW)
        }

        static {
            defaultInstance = new NOW(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:NOW)
    }

    public interface TODAYOrBuilder extends
            // @@protoc_insertion_point(interface_extends:TODAY)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>optional uint32 PM25 = 1;</code>
         */
        boolean hasPM25();

        /**
         * <code>optional uint32 PM25 = 1;</code>
         */
        int getPM25();

        /**
         * <code>optional uint32 day = 2;</code>
         * <p/>
         * <pre>
         * day time code
         * </pre>
         */
        boolean hasDay();

        /**
         * <code>optional uint32 day = 2;</code>
         * <p/>
         * <pre>
         * day time code
         * </pre>
         */
        int getDay();

        /**
         * <code>optional uint32 night = 3;</code>
         * <p/>
         * <pre>
         * night time code
         * </pre>
         */
        boolean hasNight();

        /**
         * <code>optional uint32 night = 3;</code>
         * <p/>
         * <pre>
         * night time code
         * </pre>
         */
        int getNight();

        /**
         * <code>optional .weather_info day_info = 4;</code>
         */
        boolean hasDayInfo();

        /**
         * <code>optional .weather_info day_info = 4;</code>
         */
        weather_info getDayInfo();

        /**
         * <code>optional .weather_info night_info = 5;</code>
         */
        boolean hasNightInfo();

        /**
         * <code>optional .weather_info night_info = 5;</code>
         */
        weather_info getNightInfo();
    }

    /**
     * Protobuf type {@code TODAY}
     */
    public static final class TODAY extends
            com.google.protobuf.GeneratedMessageLite implements
            // @@protoc_insertion_point(message_implements:TODAY)
            TODAYOrBuilder {
        // Use TODAY.newBuilder() to construct.
        private TODAY(com.google.protobuf.GeneratedMessageLite.Builder builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private TODAY(boolean noInit) {
            this.unknownFields = com.google.protobuf.ByteString.EMPTY;
        }

        private static final TODAY defaultInstance;

        public static TODAY getDefaultInstance() {
            return defaultInstance;
        }

        public TODAY getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.ByteString unknownFields;

        private TODAY(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.ByteString.Output unknownFieldsOutput =
                    com.google.protobuf.ByteString.newOutput();
            com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
                    com.google.protobuf.CodedOutputStream.newInstance(
                            unknownFieldsOutput);
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            pM25_ = input.readUInt32();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            day_ = input.readUInt32();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            night_ = input.readUInt32();
                            break;
                        }
                        case 34: {
                            weather_info.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                                subBuilder = dayInfo_.toBuilder();
                            }
                            dayInfo_ = input.readMessage(weather_info.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(dayInfo_);
                                dayInfo_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000008;
                            break;
                        }
                        case 42: {
                            weather_info.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                                subBuilder = nightInfo_.toBuilder();
                            }
                            nightInfo_ = input.readMessage(weather_info.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(nightInfo_);
                                nightInfo_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000010;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                try {
                    unknownFieldsCodedOutput.flush();
                } catch (java.io.IOException e) {
                    // Should not happen
                } finally {
                    unknownFields = unknownFieldsOutput.toByteString();
                }
                makeExtensionsImmutable();
            }
        }

        public static com.google.protobuf.Parser<TODAY> PARSER =
                new com.google.protobuf.AbstractParser<TODAY>() {
                    public TODAY parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new TODAY(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<TODAY> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        public static final int PM25_FIELD_NUMBER = 1;
        private int pM25_;

        /**
         * <code>optional uint32 PM25 = 1;</code>
         */
        public boolean hasPM25() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional uint32 PM25 = 1;</code>
         */
        public int getPM25() {
            return pM25_;
        }

        public static final int DAY_FIELD_NUMBER = 2;
        private int day_;

        /**
         * <code>optional uint32 day = 2;</code>
         * <p/>
         * <pre>
         * day time code
         * </pre>
         */
        public boolean hasDay() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>optional uint32 day = 2;</code>
         * <p/>
         * <pre>
         * day time code
         * </pre>
         */
        public int getDay() {
            return day_;
        }

        public static final int NIGHT_FIELD_NUMBER = 3;
        private int night_;

        /**
         * <code>optional uint32 night = 3;</code>
         * <p/>
         * <pre>
         * night time code
         * </pre>
         */
        public boolean hasNight() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <code>optional uint32 night = 3;</code>
         * <p/>
         * <pre>
         * night time code
         * </pre>
         */
        public int getNight() {
            return night_;
        }

        public static final int DAY_INFO_FIELD_NUMBER = 4;
        private weather_info dayInfo_;

        /**
         * <code>optional .weather_info day_info = 4;</code>
         */
        public boolean hasDayInfo() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <code>optional .weather_info day_info = 4;</code>
         */
        public weather_info getDayInfo() {
            return dayInfo_;
        }

        public static final int NIGHT_INFO_FIELD_NUMBER = 5;
        private weather_info nightInfo_;

        /**
         * <code>optional .weather_info night_info = 5;</code>
         */
        public boolean hasNightInfo() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <code>optional .weather_info night_info = 5;</code>
         */
        public weather_info getNightInfo() {
            return nightInfo_;
        }

        private void initFields() {
            pM25_ = 0;
            day_ = 0;
            night_ = 0;
            dayInfo_ = weather_info.getDefaultInstance();
            nightInfo_ = weather_info.getDefaultInstance();
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeUInt32(1, pM25_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeUInt32(2, day_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeUInt32(3, night_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeMessage(4, dayInfo_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeMessage(5, nightInfo_);
            }
            output.writeRawBytes(unknownFields);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(1, pM25_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(2, day_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(3, night_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(4, dayInfo_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(5, nightInfo_);
            }
            size += unknownFields.size();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static TODAY parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static TODAY parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static TODAY parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static TODAY parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static TODAY parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static TODAY parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static TODAY parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static TODAY parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static TODAY parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static TODAY parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(TODAY prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        /**
         * Protobuf type {@code TODAY}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        TODAY, Builder>
                implements
                // @@protoc_insertion_point(builder_implements:TODAY)
                TODAYOrBuilder {
            // Construct using BtNx2Weather.TODAY.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                pM25_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                day_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                night_ = 0;
                bitField0_ = (bitField0_ & ~0x00000004);
                dayInfo_ = weather_info.getDefaultInstance();
                bitField0_ = (bitField0_ & ~0x00000008);
                nightInfo_ = weather_info.getDefaultInstance();
                bitField0_ = (bitField0_ & ~0x00000010);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public TODAY getDefaultInstanceForType() {
                return TODAY.getDefaultInstance();
            }

            public TODAY build() {
                TODAY result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public TODAY buildPartial() {
                TODAY result = new TODAY(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.pM25_ = pM25_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.day_ = day_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.night_ = night_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.dayInfo_ = dayInfo_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.nightInfo_ = nightInfo_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(TODAY other) {
                if (other == TODAY.getDefaultInstance()) return this;
                if (other.hasPM25()) {
                    setPM25(other.getPM25());
                }
                if (other.hasDay()) {
                    setDay(other.getDay());
                }
                if (other.hasNight()) {
                    setNight(other.getNight());
                }
                if (other.hasDayInfo()) {
                    mergeDayInfo(other.getDayInfo());
                }
                if (other.hasNightInfo()) {
                    mergeNightInfo(other.getNightInfo());
                }
                setUnknownFields(
                        getUnknownFields().concat(other.unknownFields));
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                TODAY parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (TODAY) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private int pM25_;

            /**
             * <code>optional uint32 PM25 = 1;</code>
             */
            public boolean hasPM25() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional uint32 PM25 = 1;</code>
             */
            public int getPM25() {
                return pM25_;
            }

            /**
             * <code>optional uint32 PM25 = 1;</code>
             */
            public Builder setPM25(int value) {
                bitField0_ |= 0x00000001;
                pM25_ = value;

                return this;
            }

            /**
             * <code>optional uint32 PM25 = 1;</code>
             */
            public Builder clearPM25() {
                bitField0_ = (bitField0_ & ~0x00000001);
                pM25_ = 0;

                return this;
            }

            private int day_;

            /**
             * <code>optional uint32 day = 2;</code>
             * <p/>
             * <pre>
             * day time code
             * </pre>
             */
            public boolean hasDay() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional uint32 day = 2;</code>
             * <p/>
             * <pre>
             * day time code
             * </pre>
             */
            public int getDay() {
                return day_;
            }

            /**
             * <code>optional uint32 day = 2;</code>
             * <p/>
             * <pre>
             * day time code
             * </pre>
             */
            public Builder setDay(int value) {
                bitField0_ |= 0x00000002;
                day_ = value;

                return this;
            }

            /**
             * <code>optional uint32 day = 2;</code>
             * <p/>
             * <pre>
             * day time code
             * </pre>
             */
            public Builder clearDay() {
                bitField0_ = (bitField0_ & ~0x00000002);
                day_ = 0;

                return this;
            }

            private int night_;

            /**
             * <code>optional uint32 night = 3;</code>
             * <p/>
             * <pre>
             * night time code
             * </pre>
             */
            public boolean hasNight() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>optional uint32 night = 3;</code>
             * <p/>
             * <pre>
             * night time code
             * </pre>
             */
            public int getNight() {
                return night_;
            }

            /**
             * <code>optional uint32 night = 3;</code>
             * <p/>
             * <pre>
             * night time code
             * </pre>
             */
            public Builder setNight(int value) {
                bitField0_ |= 0x00000004;
                night_ = value;

                return this;
            }

            /**
             * <code>optional uint32 night = 3;</code>
             * <p/>
             * <pre>
             * night time code
             * </pre>
             */
            public Builder clearNight() {
                bitField0_ = (bitField0_ & ~0x00000004);
                night_ = 0;

                return this;
            }

            private weather_info dayInfo_ = weather_info.getDefaultInstance();

            /**
             * <code>optional .weather_info day_info = 4;</code>
             */
            public boolean hasDayInfo() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <code>optional .weather_info day_info = 4;</code>
             */
            public weather_info getDayInfo() {
                return dayInfo_;
            }

            /**
             * <code>optional .weather_info day_info = 4;</code>
             */
            public Builder setDayInfo(weather_info value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                dayInfo_ = value;

                bitField0_ |= 0x00000008;
                return this;
            }

            /**
             * <code>optional .weather_info day_info = 4;</code>
             */
            public Builder setDayInfo(
                    weather_info.Builder builderForValue) {
                dayInfo_ = builderForValue.build();

                bitField0_ |= 0x00000008;
                return this;
            }

            /**
             * <code>optional .weather_info day_info = 4;</code>
             */
            public Builder mergeDayInfo(weather_info value) {
                if (((bitField0_ & 0x00000008) == 0x00000008) &&
                        dayInfo_ != weather_info.getDefaultInstance()) {
                    dayInfo_ =
                            weather_info.newBuilder(dayInfo_).mergeFrom(value).buildPartial();
                } else {
                    dayInfo_ = value;
                }

                bitField0_ |= 0x00000008;
                return this;
            }

            /**
             * <code>optional .weather_info day_info = 4;</code>
             */
            public Builder clearDayInfo() {
                dayInfo_ = weather_info.getDefaultInstance();

                bitField0_ = (bitField0_ & ~0x00000008);
                return this;
            }

            private weather_info nightInfo_ = weather_info.getDefaultInstance();

            /**
             * <code>optional .weather_info night_info = 5;</code>
             */
            public boolean hasNightInfo() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <code>optional .weather_info night_info = 5;</code>
             */
            public weather_info getNightInfo() {
                return nightInfo_;
            }

            /**
             * <code>optional .weather_info night_info = 5;</code>
             */
            public Builder setNightInfo(weather_info value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                nightInfo_ = value;

                bitField0_ |= 0x00000010;
                return this;
            }

            /**
             * <code>optional .weather_info night_info = 5;</code>
             */
            public Builder setNightInfo(
                    weather_info.Builder builderForValue) {
                nightInfo_ = builderForValue.build();

                bitField0_ |= 0x00000010;
                return this;
            }

            /**
             * <code>optional .weather_info night_info = 5;</code>
             */
            public Builder mergeNightInfo(weather_info value) {
                if (((bitField0_ & 0x00000010) == 0x00000010) &&
                        nightInfo_ != weather_info.getDefaultInstance()) {
                    nightInfo_ =
                            weather_info.newBuilder(nightInfo_).mergeFrom(value).buildPartial();
                } else {
                    nightInfo_ = value;
                }

                bitField0_ |= 0x00000010;
                return this;
            }

            /**
             * <code>optional .weather_info night_info = 5;</code>
             */
            public Builder clearNightInfo() {
                nightInfo_ = weather_info.getDefaultInstance();

                bitField0_ = (bitField0_ & ~0x00000010);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:TODAY)
        }

        static {
            defaultInstance = new TODAY(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:TODAY)
    }

    public interface weather_infoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:weather_info)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>optional bytes str = 1;</code>
         */
        boolean hasStr();

        /**
         * <code>optional bytes str = 1;</code>
         */
        com.google.protobuf.ByteString getStr();
    }

    /**
     * Protobuf type {@code weather_info}
     */
    public static final class weather_info extends
            com.google.protobuf.GeneratedMessageLite implements
            // @@protoc_insertion_point(message_implements:weather_info)
            weather_infoOrBuilder {
        // Use weather_info.newBuilder() to construct.
        private weather_info(com.google.protobuf.GeneratedMessageLite.Builder builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private weather_info(boolean noInit) {
            this.unknownFields = com.google.protobuf.ByteString.EMPTY;
        }

        private static final weather_info defaultInstance;

        public static weather_info getDefaultInstance() {
            return defaultInstance;
        }

        public weather_info getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.ByteString unknownFields;

        private weather_info(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.ByteString.Output unknownFieldsOutput =
                    com.google.protobuf.ByteString.newOutput();
            com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
                    com.google.protobuf.CodedOutputStream.newInstance(
                            unknownFieldsOutput);
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            bitField0_ |= 0x00000001;
                            str_ = input.readBytes();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                try {
                    unknownFieldsCodedOutput.flush();
                } catch (java.io.IOException e) {
                    // Should not happen
                } finally {
                    unknownFields = unknownFieldsOutput.toByteString();
                }
                makeExtensionsImmutable();
            }
        }

        public static com.google.protobuf.Parser<weather_info> PARSER =
                new com.google.protobuf.AbstractParser<weather_info>() {
                    public weather_info parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new weather_info(input, extensionRegistry);
                    }
                };

        @Override
        public com.google.protobuf.Parser<weather_info> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        public static final int STR_FIELD_NUMBER = 1;
        private com.google.protobuf.ByteString str_;

        /**
         * <code>optional bytes str = 1;</code>
         */
        public boolean hasStr() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional bytes str = 1;</code>
         */
        public com.google.protobuf.ByteString getStr() {
            return str_;
        }

        private void initFields() {
            str_ = com.google.protobuf.ByteString.EMPTY;
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBytes(1, str_);
            }
            output.writeRawBytes(unknownFields);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, str_);
            }
            size += unknownFields.size();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @Override
        protected Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static weather_info parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static weather_info parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static weather_info parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static weather_info parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static weather_info parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static weather_info parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static weather_info parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static weather_info parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static weather_info parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static weather_info parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(weather_info prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        /**
         * Protobuf type {@code weather_info}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        weather_info, Builder>
                implements
                // @@protoc_insertion_point(builder_implements:weather_info)
                weather_infoOrBuilder {
            // Construct using BtNx2Weather.weather_info.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                str_ = com.google.protobuf.ByteString.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public weather_info getDefaultInstanceForType() {
                return weather_info.getDefaultInstance();
            }

            public weather_info build() {
                weather_info result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public weather_info buildPartial() {
                weather_info result = new weather_info(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.str_ = str_;
                result.bitField0_ = to_bitField0_;
                return result;
            }

            public Builder mergeFrom(weather_info other) {
                if (other == weather_info.getDefaultInstance()) return this;
                if (other.hasStr()) {
                    setStr(other.getStr());
                }
                setUnknownFields(
                        getUnknownFields().concat(other.unknownFields));
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                weather_info parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (weather_info) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private com.google.protobuf.ByteString str_ = com.google.protobuf.ByteString.EMPTY;

            /**
             * <code>optional bytes str = 1;</code>
             */
            public boolean hasStr() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional bytes str = 1;</code>
             */
            public com.google.protobuf.ByteString getStr() {
                return str_;
            }

            /**
             * <code>optional bytes str = 1;</code>
             */
            public Builder setStr(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                str_ = value;

                return this;
            }

            /**
             * <code>optional bytes str = 1;</code>
             */
            public Builder clearStr() {
                bitField0_ = (bitField0_ & ~0x00000001);
                str_ = getDefaultInstance().getStr();

                return this;
            }

            // @@protoc_insertion_point(builder_scope:weather_info)
        }

        static {
            defaultInstance = new weather_info(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:weather_info)
    }


    static {
    }

    // @@protoc_insertion_point(outer_class_scope)
}
